{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/hooks/useBoardScale.ts"],"sourcesContent":["import { useCallback } from 'react'\n\nexport function useBoardScale(ref: React.RefObject<HTMLDivElement | null>) {\n  const get = useCallback(() => {\n    const box = ref.current?.closest('.jxgbox') as HTMLElement | null\n    if (!box) return { pxPerUnitX: 50, pxPerUnitY: 50, uniformScale: 50 } // fallback\n    \n    const { width: w, height: h } = box.getBoundingClientRect()\n    // Must match your board bounding box:\n    const left = -1, top = 8, right = 11, bottom = -1\n    const unitsX = right - left   // 12\n    const unitsY = top - bottom   // 9\n    \n    // Calculate uniform scale to maintain aspect ratio\n    const scaleX = w / unitsX\n    const scaleY = h / unitsY\n    const uniformScale = Math.min(scaleX, scaleY)\n    \n    return { \n      pxPerUnitX: uniformScale, \n      pxPerUnitY: uniformScale, \n      uniformScale,\n      boardLeft: left,\n      boardTop: top,\n      boardRight: right,\n      boardBottom: bottom,\n      boardWidth: unitsX,\n      boardHeight: unitsY\n    }\n  }, [ref])\n  \n  return get\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,SAAS,cAAc,GAA2C;IACvE,MAAM,MAAM,IAAA,oPAAW,EAAC;QACtB,MAAM,MAAM,IAAI,OAAO,EAAE,QAAQ;QACjC,IAAI,CAAC,KAAK,OAAO;YAAE,YAAY;YAAI,YAAY;YAAI,cAAc;QAAG,EAAE,WAAW;;QAEjF,MAAM,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,GAAG,IAAI,qBAAqB;QACzD,sCAAsC;QACtC,MAAM,OAAO,CAAC,GAAG,MAAM,GAAG,QAAQ,IAAI,SAAS,CAAC;QAChD,MAAM,SAAS,QAAQ,KAAO,KAAK;;QACnC,MAAM,SAAS,MAAM,OAAS,IAAI;;QAElC,mDAAmD;QACnD,MAAM,SAAS,IAAI;QACnB,MAAM,SAAS,IAAI;QACnB,MAAM,eAAe,KAAK,GAAG,CAAC,QAAQ;QAEtC,OAAO;YACL,YAAY;YACZ,YAAY;YACZ;YACA,WAAW;YACX,UAAU;YACV,YAAY;YACZ,aAAa;YACb,YAAY;YACZ,aAAa;QACf;IACF,GAAG;QAAC;KAAI;IAER,OAAO;AACT","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/DraggableRuler.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react'\nimport { useBoardScale } from '../hooks/useBoardScale'\n\ninterface DraggableRulerProps {\n  x: number\n  y: number\n  rotation: number\n  length: number\n  onPositionChange: (x: number, y: number, rotation: number, length: number) => void\n  isActive: boolean\n  onActivate: () => void\n  onUiBusyChange: (busy: boolean) => void\n}\n\nexport default function DraggableRuler({\n  x,\n  y,\n  rotation,\n  length,\n  onPositionChange,\n  isActive,\n  onActivate,\n  onUiBusyChange\n}: DraggableRulerProps) {\n  const [isDragging, setIsDragging] = useState(false)\n  const [isRotating, setIsRotating] = useState(false)\n  const [isResizing, setIsResizing] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 })\n  const [rotationStart, setRotationStart] = useState({ x: 0, y: 0, rotation: 0, initialAngle: 0 })\n  const [resizeStart, setResizeStart] = useState({ x: 0, y: 0, length: 0 })\n  const rulerRef = useRef<HTMLDivElement>(null)\n  const getScale = useBoardScale(rulerRef)\n  const { pxPerUnitX, pxPerUnitY } = getScale()\n  const pxPerUnit = Math.min(pxPerUnitX, pxPerUnitY)\n\n  // Memoized coordinate conversion functions for better performance\n  const coordinateConverter = useMemo(() => {\n    const boardLeft = -1\n    const boardTop = 8\n    const boardRight = 11\n    const boardBottom = -1\n    const boardWidth = boardRight - boardLeft // 12\n    const boardHeight = boardTop - boardBottom // 9\n    \n    return {\n      boardToScreen: (boardX: number, boardY: number) => {\n        // Get actual container dimensions\n        const container = rulerRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const screenX = ((boardX - boardLeft) / boardWidth) * containerWidth\n        const screenY = containerHeight - ((boardY - boardBottom) / boardHeight) * containerHeight\n        \n        return { x: screenX, y: screenY }\n      },\n      screenToBoard: (screenX: number, screenY: number) => {\n        const container = rulerRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const boardX = (screenX / containerWidth) * boardWidth + boardLeft\n        const boardY = boardTop - (screenY / containerHeight) * boardHeight\n        \n        return { x: boardX, y: boardY }\n      }\n    }\n  }, [])\n\n  const boardToScreen = coordinateConverter.boardToScreen\n  const screenToBoard = coordinateConverter.screenToBoard\n\n  const screenPos = boardToScreen(x, y)\n\n  // Smooth movement without grid snapping\n  const smoothPosition = (boardX: number, boardY: number) => {\n    return { x: boardX, y: boardY }\n  }\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from ruler center to mouse position\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const initialAngle = Math.atan2(e.clientY - centerY, e.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: e.clientX, y: e.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: e.clientX, y: e.clientY, length })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    }\n  }\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const touch = e.touches[0]\n    if (!touch) return\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from ruler center to touch position\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const initialAngle = Math.atan2(touch.clientY - centerY, touch.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: touch.clientX, y: touch.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: touch.clientX, y: touch.clientY, length })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    }\n  }\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDragging) {\n      const newScreenX = e.clientX - dragStart.x\n      const newScreenY = e.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, length)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      \n      // Calculate current angle from center to mouse\n      const currentAngle = Math.atan2(e.clientY - centerY, e.clientX - centerX) * (180 / Math.PI)\n      \n      // Calculate the difference from the initial angle\n      let deltaAngle = currentAngle - rotationStart.initialAngle\n      \n      // Handle angle wrapping (ensure we take the shorter path)\n      while (deltaAngle > 180) deltaAngle -= 360\n      while (deltaAngle < -180) deltaAngle += 360\n      \n      const newRotation = rotationStart.rotation + deltaAngle\n      onPositionChange(x, y, newRotation, length)\n    } else if (isResizing) {\n      const deltaX = e.clientX - resizeStart.x\n      const deltaY = e.clientY - resizeStart.y\n      \n      // Project the delta vector onto the ruler's axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const rulerAxisX = Math.cos(rotationRad)\n      const rulerAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the ruler axis\n      const projection = deltaX * rulerAxisX + deltaY * rulerAxisY\n      const deltaDistance = projection / pxPerUnit\n      \n      const newLength = Math.max(2, Math.min(10, resizeStart.length + deltaDistance))\n      onPositionChange(x, y, rotation, newLength)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, screenPos, x, y, rotation, length, onPositionChange, pxPerUnit, screenToBoard])\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    const touch = e.touches[0]\n    if (!touch) return\n    \n    if (isDragging) {\n      const newScreenX = touch.clientX - dragStart.x\n      const newScreenY = touch.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, length)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      \n      // Calculate current angle from center to touch\n      const currentAngle = Math.atan2(touch.clientY - centerY, touch.clientX - centerX) * (180 / Math.PI)\n      \n      // Calculate the difference from the initial angle\n      let deltaAngle = currentAngle - rotationStart.initialAngle\n      \n      // Handle angle wrapping (ensure we take the shorter path)\n      while (deltaAngle > 180) deltaAngle -= 360\n      while (deltaAngle < -180) deltaAngle += 360\n      \n      const newRotation = rotationStart.rotation + deltaAngle\n      onPositionChange(x, y, newRotation, length)\n    } else if (isResizing) {\n      const deltaX = touch.clientX - resizeStart.x\n      const deltaY = touch.clientY - resizeStart.y\n      \n      // Project the delta vector onto the ruler's axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const rulerAxisX = Math.cos(rotationRad)\n      const rulerAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the ruler axis\n      const projection = deltaX * rulerAxisX + deltaY * rulerAxisY\n      const deltaDistance = projection / pxPerUnit\n      \n      const newLength = Math.max(2, Math.min(10, resizeStart.length + deltaDistance))\n      onPositionChange(x, y, rotation, newLength)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, screenPos, x, y, rotation, length, onPositionChange, pxPerUnit, screenToBoard])\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  useEffect(() => {\n    if (isDragging || isRotating || isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      document.addEventListener('touchmove', handleTouchMove, { passive: false })\n      document.addEventListener('touchend', handleTouchEnd)\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.removeEventListener('touchmove', handleTouchMove, { passive: false } as any)\n        document.removeEventListener('touchend', handleTouchEnd)\n      }\n    }\n  }, [isDragging, isRotating, isResizing, handleMouseMove, handleTouchMove, handleMouseUp, handleTouchEnd])\n\n  // ResizeObserver to handle container size changes\n  useEffect(() => {\n    const el = rulerRef.current?.closest('.jxgbox')\n    if (!el) return\n    \n    const ro = new ResizeObserver(() => {\n      // Force a light refresh by updating dragStart state\n      setDragStart(s => ({ ...s }))\n    })\n    ro.observe(el)\n    return () => ro.disconnect()\n  }, [])\n\n  // Generate ruler markings based on actual length units\n  const generateMarkings = () => {\n    const markings = []\n    const rulerWidthPx = length * pxPerUnit\n    \n    // Create markings every 0.1 units, with major marks at 1.0 and medium at 0.5\n    const markInterval = 0.1 // Mark every 0.1 units\n    const numMarks = Math.floor(length / markInterval)\n    \n    for (let i = 0; i <= numMarks; i++) {\n      const unitValue = i * markInterval\n      const position = (unitValue / length) * rulerWidthPx\n      \n      const isMajor = unitValue % 1 === 0 // Major marks every 1 unit\n      const isMedium = unitValue % 0.5 === 0 && !isMajor // Medium marks every 0.5 units\n      \n      let height = 'h-1'\n      let opacity = 0.3\n      if (isMajor) {\n        height = 'h-5'\n        opacity = 0.8\n      } else if (isMedium) {\n        height = 'h-3'\n        opacity = 0.6\n      }\n      \n      markings.push(\n        <div\n          key={`mark-${i}`}\n          className={`absolute w-[1px] ${height} bg-black transition-all duration-200`}\n          style={{\n            left: position,\n            top: -1,\n            transform: 'translateX(-50%)',\n            opacity\n          }}\n        />\n      )\n      \n      // Add labels for major marks (every 1 unit)\n      if (isMajor && unitValue > 0) {\n        markings.push(\n          <div\n            key={`label-${i}`}\n            className=\"absolute text-[10px] text-slate-600 font-medium tracking-tight\"\n            style={{\n              left: position,\n              top: -16,\n              transform: 'translateX(-50%)',\n              fontFeatureSettings: '\"tnum\"'\n            }}\n          >\n            {unitValue}\n          </div>\n        )\n      }\n    }\n    \n    return markings\n  }\n\n  return (\n    <div\n      ref={rulerRef}\n      className={`absolute select-none group ${isActive ? 'z-50' : 'z-40'}`}\n      style={{\n        left: screenPos.x,\n        top: screenPos.y,\n        transform: `rotate(${rotation}deg)`,\n        transformOrigin: '0 0'\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleTouchStart}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      {/* Ruler body with enhanced SVG styling */}\n      <div className=\"relative\" style={{ pointerEvents: 'none' }}>\n        <svg\n          width={length * pxPerUnit + 100}\n          height={40}\n          className=\"absolute\"\n          style={{ left: -50, top: -10, pointerEvents: 'auto' }}\n        >\n          <defs>\n            {/* Main plastic gradient with enhanced depth and contrast */}\n            <linearGradient id=\"rulerPlasticGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.6)\" />\n              <stop offset=\"15%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.2)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(240,245,250,0.1)\" />\n              <stop offset=\"70%\" stopColor=\"rgba(200,210,220,0.15)\" />\n              <stop offset=\"85%\" stopColor=\"rgba(150,160,170,0.2)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(100,110,120,0.25)\" />\n            </linearGradient>\n\n            {/* Secondary highlight gradient for more realistic plastic look */}\n            <linearGradient id=\"rulerHighlightGradient\" x1=\"0%\" y1=\"0%\" x2=\"60%\" y2=\"40%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.8)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"60%\" stopColor=\"rgba(255,255,255,0.1)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(255,255,255,0)\" />\n            </linearGradient>\n\n            {/* Shadow gradient for depth */}\n            <linearGradient id=\"rulerShadowGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(0,0,0,0)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(0,0,0,0.05)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(0,0,0,0.15)\" />\n            </linearGradient>\n\n            {/* Enhanced drop shadow with more depth and realism */}\n            <filter id=\"rulerSoftShadow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feDropShadow dx=\"0\" dy=\"8\" stdDeviation=\"16\" floodColor=\"#000\" floodOpacity=\"0.3\" />\n              <feDropShadow dx=\"0\" dy=\"4\" stdDeviation=\"8\" floodColor=\"#000\" floodOpacity=\"0.2\" />\n              <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"4\" floodColor=\"#000\" floodOpacity=\"0.1\" />\n            </filter>\n\n            {/* Glow effect for active state */}\n            <filter id=\"rulerGlow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/>\n              </feMerge>\n            </filter>\n          </defs>\n          \n          {/* Ruler plastic look: base fill, shine gradient overlay, and stroke */}\n          <g filter={isActive ? \"url(#rulerGlow)\" : \"url(#rulerSoftShadow)\"}>\n            {/* Base fill with enhanced opacity for better depth */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"rgba(240,245,250,0.25)\" />\n            {/* Shadow gradient for depth */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"url(#rulerShadowGradient)\" />\n            {/* Main plastic gradient overlay */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"url(#rulerPlasticGradient)\" />\n            {/* Highlight gradient for realistic plastic shine */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"url(#rulerHighlightGradient)\" />\n            {/* Enhanced outline with subtle inner shadow */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\"/>\n          </g>\n          \n          {/* Enhanced ruler markings with 0.1cm precision */}\n          {(() => {\n            const markings = []\n            const rulerWidthPx = length * pxPerUnit\n            const pxPerCm = pxPerUnit\n            const maxCm = Math.floor(length)\n            \n            // Create markings every 0.1cm (1mm)\n            for (let cm = 0; cm <= maxCm; cm++) {\n              const x = 50 + cm * pxPerCm\n              const isFive = cm % 5 === 0\n              const majorLen = isFive ? 18 : 12\n              \n              // Main centimeter tick mark\n              markings.push(\n                <rect\n                  key={`cm-${cm}`}\n                  x={x - 0.5}\n                  y={10}\n                  width={1}\n                  height={majorLen}\n                  fill=\"#000\"\n                />\n              )\n              \n              // Millimeter marks (9 small ticks between each centimeter)\n              if (cm < maxCm) {\n                for (let mm = 1; mm < 10; mm++) {\n                  const xx = x + (pxPerCm * mm) / 10\n                  const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n                  \n                  markings.push(\n                    <rect\n                      key={`mm-${cm}-${mm}`}\n                      x={xx - 0.25}\n                      y={10}\n                      width={0.5}\n                      height={mmLen}\n                      fill=\"#000\"\n                      opacity=\"0.75\"\n                    />\n                  )\n                }\n              }\n            }\n            \n            // Add millimeter marks between last whole centimeter and final length value\n            if (length % 1 !== 0) {\n              const lastWholeCm = Math.floor(length)\n              const finalX = 50 + length * pxPerCm\n              \n              // Add millimeter marks from last whole cm to final length\n              for (let mm = 1; mm <= Math.floor((length - lastWholeCm) * 10); mm++) {\n                const xx = 50 + (lastWholeCm + mm / 10) * pxPerCm\n                const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n                \n                markings.push(\n                  <rect\n                    key={`mm-final-${mm}`}\n                    x={xx - 0.25}\n                    y={10}\n                    width={0.5}\n                    height={mmLen}\n                    fill=\"#000\"\n                    opacity=\"0.75\"\n                  />\n                )\n              }\n              \n              // Add final marking at exact length value\n              markings.push(\n                <rect\n                  key={`cm-final`}\n                  x={finalX - 0.5}\n                  y={10}\n                  width={1}\n                  height={12}\n                  fill=\"#000\"\n                />\n              )\n            }\n            \n            return markings\n          })()}\n        </svg>\n        \n        {/* Ruler numbers - positioned as HTML elements like in the triangle component */}\n        {(() => {\n          const pxPerCm = pxPerUnit\n          const maxCm = Math.floor(length)\n          const numbers = []\n          \n          for (let cm = 1; cm <= maxCm; cm++) {\n            const x = cm * pxPerCm\n            const isFive = cm % 5 === 0\n            \n            numbers.push(\n              <div\n                key={`ruler-number-${cm}`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: x, // Direct positioning without SVG offset\n                  top: -25, // Position above the ruler\n                  transform: 'translateX(-50%)',\n                  fontWeight: isFive ? 'bold' : 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {cm}\n              </div>\n            )\n          }\n\n          // Add final number at exact length value (only if not a whole number)\n          if (length % 1 !== 0) {\n            const finalX = length * pxPerCm\n            numbers.push(\n              <div\n                key={`ruler-number-final`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: finalX, // Direct positioning without SVG offset\n                  top: -25, // Position above the ruler\n                  transform: 'translateX(-50%)',\n                  fontWeight: 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {length.toFixed(1)}\n              </div>\n            )\n          }\n          \n          return numbers\n        })()}\n        \n        {/* Rotation handle - enhanced styling to match triangle */}\n        <div\n          className=\"rotation-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-emerald-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like triangle\n            left: length * pxPerUnit - 2,\n            top: 2,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 20\n          }}\n          title=\"Otočit pravítko\"\n        >\n          <div className=\"w-2 h-2 bg-emerald-500 rounded-full\" />\n        </div>\n        \n        {/* Resize handle - enhanced styling to match triangle */}\n        <div\n          className=\"resize-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-amber-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like triangle\n            left: length * pxPerUnit - 2,\n            top: 14,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 15\n          }}\n          title=\"Změnit délku\"\n        >\n          <div className=\"w-2 h-2 bg-amber-500 rounded-full\" />\n        </div>\n      </div>\n      \n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 950, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/DraggableTriangle.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react'\nimport { useBoardScale } from '../hooks/useBoardScale'\n\ninterface DraggableTriangleProps {\n  x: number\n  y: number\n  rotation: number\n  size: number\n  type: '45-45-90' | '30-60-90'\n  onPositionChange: (x: number, y: number, rotation: number, size: number) => void\n  isActive: boolean\n  onActivate: () => void\n  onUiBusyChange: (busy: boolean) => void\n}\n\nexport default function DraggableTriangle({\n  x,\n  y,\n  rotation,\n  size,\n  type,\n  onPositionChange,\n  isActive,\n  onActivate,\n  onUiBusyChange\n}: DraggableTriangleProps) {\n  const [isDragging, setIsDragging] = useState(false)\n  const [isRotating, setIsRotating] = useState(false)\n  const [isResizing, setIsResizing] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 })\n  const [rotationStart, setRotationStart] = useState({ x: 0, y: 0, rotation: 0, initialAngle: 0 })\n  const [resizeStart, setResizeStart] = useState({ x: 0, y: 0, size: 0 })\n  const triangleRef = useRef<HTMLDivElement>(null)\n  const getScale = useBoardScale(triangleRef)\n  const { pxPerUnitX, pxPerUnitY } = getScale()\n  const pxPerUnit = Math.min(pxPerUnitX, pxPerUnitY)\n\n  // Memoized coordinate conversion functions for better performance\n  const coordinateConverter = useMemo(() => {\n    const boardLeft = -1\n    const boardTop = 8\n    const boardRight = 11\n    const boardBottom = -1\n    const boardWidth = boardRight - boardLeft // 12\n    const boardHeight = boardTop - boardBottom // 9\n    \n    return {\n      boardToScreen: (boardX: number, boardY: number) => {\n        // Get actual container dimensions\n        const container = triangleRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const screenX = ((boardX - boardLeft) / boardWidth) * containerWidth\n        const screenY = containerHeight - ((boardY - boardBottom) / boardHeight) * containerHeight\n        \n        return { x: screenX, y: screenY }\n      },\n      screenToBoard: (screenX: number, screenY: number) => {\n        const container = triangleRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const boardX = (screenX / containerWidth) * boardWidth + boardLeft\n        const boardY = boardTop - (screenY / containerHeight) * boardHeight\n        \n        return { x: boardX, y: boardY }\n      }\n    }\n  }, [])\n\n  const boardToScreen = coordinateConverter.boardToScreen\n  const screenToBoard = coordinateConverter.screenToBoard\n\n  const screenPos = boardToScreen(x, y)\n\n  // Smooth movement without grid snapping\n  const smoothPosition = (boardX: number, boardY: number) => {\n    return { x: boardX, y: boardY }\n  }\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from triangle center to mouse position\n      const currentScreenPos = boardToScreen(x, y)\n      const centerX = currentScreenPos.x\n      const centerY = currentScreenPos.y\n      const initialAngle = Math.atan2(e.clientY - centerY, e.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: e.clientX, y: e.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: e.clientX, y: e.clientY, size })\n    } else if (target.classList.contains('drag-handle') || target.closest('.drag-handle')) {\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    } else {\n      // Allow dragging from anywhere on the triangle\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    }\n  }\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const touch = e.touches[0]\n    if (!touch) return\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from triangle center to touch position\n      const currentScreenPos = boardToScreen(x, y)\n      const centerX = currentScreenPos.x\n      const centerY = currentScreenPos.y\n      const initialAngle = Math.atan2(touch.clientY - centerY, touch.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: touch.clientX, y: touch.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: touch.clientX, y: touch.clientY, size })\n    } else if (target.classList.contains('drag-handle') || target.closest('.drag-handle')) {\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    } else {\n      // Allow dragging from anywhere on the triangle\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    }\n  }\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDragging) {\n      const newScreenX = e.clientX - dragStart.x\n      const newScreenY = e.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      // Get the current screen position of the triangle center\n      const currentScreenPos = boardToScreen(x, y)\n      const centerX = currentScreenPos.x\n      const centerY = currentScreenPos.y\n      \n      // Calculate current angle from center to mouse\n      const currentAngle = Math.atan2(e.clientY - centerY, e.clientX - centerX) * (180 / Math.PI)\n      \n      // Calculate the difference from the initial angle\n      let deltaAngle = currentAngle - rotationStart.initialAngle\n      \n      // Handle angle wrapping (ensure we take the shorter path)\n      while (deltaAngle > 180) deltaAngle -= 360\n      while (deltaAngle < -180) deltaAngle += 360\n      \n      const newRotation = rotationStart.rotation + deltaAngle\n      onPositionChange(x, y, newRotation, size)\n    } else if (isResizing) {\n      const deltaX = e.clientX - resizeStart.x\n      const deltaY = e.clientY - resizeStart.y\n      \n      // Project the delta vector onto the triangle's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const triangleAxisX = Math.cos(rotationRad)\n      const triangleAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the triangle axis\n      const projection = deltaX * triangleAxisX + deltaY * triangleAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const proposedSize = resizeStart.size + deltaSize\n      \n      // Calculate height based on triangle type\n      const height = type === '45-45-90' ? proposedSize : proposedSize * Math.sqrt(3) / 2\n      \n      // Enforce height constraints: minimum 3cm, maximum 10cm\n      let constrainedSize = proposedSize\n      if (height < 3) {\n        // Calculate size needed for 3cm height\n        constrainedSize = type === '45-45-90' ? 3 : 3 / (Math.sqrt(3) / 2)\n      } else if (height > 10) {\n        // Calculate size needed for 10cm height\n        constrainedSize = type === '45-45-90' ? 10 : 10 / (Math.sqrt(3) / 2)\n      }\n      \n      onPositionChange(x, y, rotation, constrainedSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, x, y, rotation, size, type, onPositionChange, screenToBoard, boardToScreen])\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    const touch = e.touches[0]\n    if (!touch) return\n    \n    if (isDragging) {\n      const newScreenX = touch.clientX - dragStart.x\n      const newScreenY = touch.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      // Get the current screen position of the triangle center\n      const currentScreenPos = boardToScreen(x, y)\n      const centerX = currentScreenPos.x\n      const centerY = currentScreenPos.y\n      \n      // Calculate current angle from center to touch\n      const currentAngle = Math.atan2(touch.clientY - centerY, touch.clientX - centerX) * (180 / Math.PI)\n      \n      // Calculate the difference from the initial angle\n      let deltaAngle = currentAngle - rotationStart.initialAngle\n      \n      // Handle angle wrapping (ensure we take the shorter path)\n      while (deltaAngle > 180) deltaAngle -= 360\n      while (deltaAngle < -180) deltaAngle += 360\n      \n      const newRotation = rotationStart.rotation + deltaAngle\n      onPositionChange(x, y, newRotation, size)\n    } else if (isResizing) {\n      const deltaX = touch.clientX - resizeStart.x\n      const deltaY = touch.clientY - resizeStart.y\n      \n      // Project the delta vector onto the triangle's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const triangleAxisX = Math.cos(rotationRad)\n      const triangleAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the triangle axis\n      const projection = deltaX * triangleAxisX + deltaY * triangleAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const proposedSize = resizeStart.size + deltaSize\n      \n      // Calculate height based on triangle type\n      const height = type === '45-45-90' ? proposedSize : proposedSize * Math.sqrt(3) / 2\n      \n      // Enforce height constraints: minimum 3cm, maximum 10cm\n      let constrainedSize = proposedSize\n      if (height < 3) {\n        // Calculate size needed for 3cm height\n        constrainedSize = type === '45-45-90' ? 3 : 3 / (Math.sqrt(3) / 2)\n      } else if (height > 10) {\n        // Calculate size needed for 10cm height\n        constrainedSize = type === '45-45-90' ? 10 : 10 / (Math.sqrt(3) / 2)\n      }\n      \n      onPositionChange(x, y, rotation, constrainedSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, x, y, rotation, size, type, onPositionChange, screenToBoard, boardToScreen])\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  useEffect(() => {\n    if (isDragging || isRotating || isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      document.addEventListener('touchmove', handleTouchMove, { passive: false })\n      document.addEventListener('touchend', handleTouchEnd)\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.removeEventListener('touchmove', handleTouchMove, { passive: false } as any)\n        document.removeEventListener('touchend', handleTouchEnd)\n      }\n    }\n  }, [isDragging, isRotating, isResizing, handleMouseMove, handleTouchMove, handleMouseUp, handleTouchEnd])\n\n  // ResizeObserver to handle container size changes\n  useEffect(() => {\n    const el = triangleRef.current?.closest('.jxgbox')\n    if (!el) return\n    \n    const ro = new ResizeObserver(() => {\n      // Force a light refresh by updating dragStart state\n      setDragStart(s => ({ ...s }))\n    })\n    ro.observe(el)\n    return () => ro.disconnect()\n  }, [])\n\n  // Generate triangle points based on type\n  const getTrianglePoints = () => {\n    const screenSize = size * pxPerUnit\n    const halfSize = screenSize / 2\n    \n    if (type === '45-45-90') {\n      // Right triangle with 45-45-90 angles\n      return [\n        { x: 0, y: 0 },           // Right angle vertex\n        { x: screenSize, y: 0 },  // Bottom right\n        { x: 0, y: screenSize }   // Top left\n      ]\n    } else {\n      // Right triangle with 30-60-90 angles\n      const height = screenSize * Math.sqrt(3) / 2\n      return [\n        { x: 0, y: 0 },           // Right angle vertex\n        { x: screenSize, y: 0 },  // Bottom right\n        { x: 0, y: height }       // Top left (60° angle)\n      ]\n    }\n  }\n\n  // Generate enhanced ruler markings as SVG elements matching the detailed specifications\n  const renderRulerMarkingsSvg = () => {\n    const screenSize = size * pxPerUnit\n    const pxPerCm = pxPerUnit // 1 cm = pxPerUnit pixels\n    const verticalLength = type === '45-45-90' ? screenSize : (screenSize * Math.sqrt(3)) / 2\n    const maxCm = Math.min(16, Math.floor(size)) // Use floor to stop at or before actual size\n    const maxVerticalCm = Math.min(16, Math.floor(type === '45-45-90' ? size : size * Math.sqrt(3) / 2))\n\n    // Horizontal ruler (bottom edge) - 0 to maxCm\n    const horizontalTicks: React.ReactNode[] = []\n    for (let cm = 0; cm <= maxCm; cm++) {\n      const x = cm * pxPerCm\n      const isFive = cm % 5 === 0\n      const majorLen = isFive ? 18 : 12 // Length of tick mark\n      \n      // Main centimeter tick mark\n      horizontalTicks.push(\n        <rect\n          key={`h-cm-${cm}`}\n          x={x - 0.75}\n          y={0}\n          width={1.5}\n          height={majorLen}\n          fill=\"#000\"\n        />\n      )\n      \n      // Number labels will be handled separately as HTML elements\n      \n      // Millimeter marks (9 small ticks between each centimeter)\n      if (cm < maxCm) {\n        for (let mm = 1; mm < 10; mm++) {\n          const xx = x + (pxPerCm * mm) / 10\n          const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n          \n          horizontalTicks.push(\n            <rect\n              key={`h-mm-${cm}-${mm}`}\n              x={xx - 0.5}\n              y={0}\n              width={1}\n              height={mmLen}\n              fill=\"#000\"\n              opacity=\"0.75\"\n            />\n          )\n        }\n      }\n    }\n\n    // Add millimeter marks between last whole centimeter and final size value\n    if (size % 1 !== 0) {\n      const lastWholeCm = Math.floor(size)\n      const finalX = size * pxPerCm\n      \n      // Add millimeter marks from last whole cm to final size\n      for (let mm = 1; mm <= Math.floor((size - lastWholeCm) * 10); mm++) {\n        const xx = (lastWholeCm + mm / 10) * pxPerCm\n        const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n        \n        horizontalTicks.push(\n          <rect\n            key={`h-mm-final-${mm}`}\n            x={xx - 0.5}\n            y={0}\n            width={1}\n            height={mmLen}\n            fill=\"#000\"\n            opacity=\"0.75\"\n          />\n        )\n      }\n      \n      // Add final marking at exact size value\n      horizontalTicks.push(\n        <rect\n          key={`h-cm-final`}\n          x={finalX - 0.75}\n          y={0}\n          width={1.5}\n          height={12}\n          fill=\"#000\"\n        />\n      )\n    }\n\n    // Vertical ruler (left edge) - 0 to maxVerticalCm\n    const verticalTicks: React.ReactNode[] = []\n    for (let cm = 0; cm <= maxVerticalCm; cm++) {\n      const y = cm * pxPerCm\n      const isFive = cm % 5 === 0\n      const majorLen = isFive ? 18 : 12 // Length of tick mark\n      \n      // Main centimeter tick mark (extends LEFT from the edge)\n      verticalTicks.push(\n        <rect\n          key={`v-cm-${cm}`}\n          x={-majorLen}\n          y={y - 0.75}\n          width={majorLen}\n          height={1.5}\n          fill=\"#000\"\n        />\n      )\n      \n      // No number labels on the vertical ruler (left side)\n      \n      // Millimeter marks (9 small ticks between each centimeter)\n      if (cm < maxVerticalCm) {\n        for (let mm = 1; mm < 10; mm++) {\n          const yy = y + (pxPerCm * mm) / 10\n          const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n          \n          verticalTicks.push(\n            <rect\n              key={`v-mm-${cm}-${mm}`}\n              x={-mmLen}\n              y={yy - 0.5}\n              width={mmLen}\n              height={1}\n              fill=\"#000\"\n              opacity=\"0.75\"\n            />\n          )\n        }\n      }\n    }\n\n    // Add millimeter marks between last whole centimeter and final height value\n    const actualHeight = type === '45-45-90' ? size : size * Math.sqrt(3) / 2\n    if (actualHeight % 1 !== 0) {\n      const lastWholeCm = Math.floor(actualHeight)\n      const finalY = actualHeight * pxPerCm\n      \n      // Add millimeter marks from last whole cm to final height\n      for (let mm = 1; mm <= Math.floor((actualHeight - lastWholeCm) * 10); mm++) {\n        const yy = (lastWholeCm + mm / 10) * pxPerCm\n        const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n        \n        verticalTicks.push(\n          <rect\n            key={`v-mm-final-${mm}`}\n            x={-mmLen}\n            y={yy - 0.5}\n            width={mmLen}\n            height={1}\n            fill=\"#000\"\n            opacity=\"0.75\"\n          />\n        )\n      }\n      \n      // Add final marking at exact height value\n      verticalTicks.push(\n        <rect\n          key={`v-cm-final`}\n          x={-12}\n          y={finalY - 0.75}\n          width={12}\n          height={1.5}\n          fill=\"#000\"\n        />\n      )\n    }\n\n    return (\n      <g>\n        {/* Origin label with \"0\" */}\n        <text x={4} y={-8} fontSize=\"11\" fontFamily=\"Arial, sans-serif\" fontWeight=\"bold\" fill=\"#000\">0</text>\n        \n        {/* Bottom edge ruler (horizontal) */}\n        <g transform={`translate(${points[0]?.x || 0},${points[0]?.y || 0})`}>\n          {horizontalTicks}\n        </g>\n        \n        {/* Left edge ruler (vertical) */}\n        <g transform={`translate(${points[0]?.x || 0},${points[0]?.y || 0})`}>\n          {verticalTicks}\n        </g>\n      </g>\n    )\n  }\n\n  const points = getTrianglePoints()\n  const pathData = `M ${points[0]?.x || 0} ${points[0]?.y || 0} L ${points[1]?.x || 0} ${points[1]?.y || 0} L ${points[2]?.x || 0} ${points[2]?.y || 0} Z`\n\n  // Calculate triangle dimensions for dynamic handle positioning\n  const basePx = size * pxPerUnit\n  const heightPx = type === '45-45-90' ? basePx : basePx * Math.sqrt(3) / 2\n  \n  // Calculate hypotenuse midpoint (relative to SVG origin at 50, 50)\n  const hypMidX = basePx / 2\n  const hypMidY = heightPx / 2\n\n  // Derived geometry for inner triangular cutouts (proportional to size)\n  const baseLength = size * pxPerUnit\n  const verticalLength = type === '45-45-90' ? baseLength : (baseLength * Math.sqrt(3)) / 2\n  // Diagonal unit direction (ux, uy) from right-angle vertex and its origin point\n  const origin = { x: points[0]?.x || 0, y: points[0]?.y || 0 }\n  const mDiag = verticalLength / baseLength\n  const len = Math.sqrt(1 + mDiag * mDiag)\n  const ux = 1 / len\n  const uy = mDiag / len\n  // Reflect a point across the diagonal line through origin with unit direction (ux, uy)\n  const reflectAcrossDiagonal = (px: number, py: number) => {\n    const rx = px - origin.x\n    const ry = py - origin.y\n    const dot = rx * ux + ry * uy\n    const rpx = 2 * dot * ux - rx\n    const rpy = 2 * dot * uy - ry\n    return { x: origin.x + rpx, y: origin.y + rpy }\n  }\n  \n  // Construct cutouts similar to the two half-triangles split by the diagonal\n  // Unit normal to diagonal\n  const nx = -uy\n  const ny = ux\n  // Hypotenuse unit direction (from top-left to bottom-right corner)\n  const hypX = baseLength\n  const hypY = -verticalLength\n  const hypLen = Math.hypot(hypX, hypY) || 1\n  const hx = hypX / hypLen\n  const hy = hypY / hypLen\n  // Length of diagonal segment OM (origin to hypotenuse midpoint)\n  const OMlen = 0.5 * Math.hypot(baseLength, verticalLength)\n  // Choose base length along diagonal as a fraction of OM\n  const L = OMlen * 0.7\n  // Position along diagonal from origin and small gap offset\n  const tAlong = OMlen * 0.55\n  const gap = Math.max(-11, -baseLength * 0.12) // increased perpendicular offset from diagonal; no rotation or along-diagonal change\n\n  // First cutout (similar to triangle O-P1-M): base parallel to diagonal, other sides // x-axis and // hypotenuse\n  const c1x = origin.x + ux * tAlong + nx * gap\n  const c1y = origin.y + uy * tAlong + ny * gap\n  const a1 = { x: c1x - (L / 2) * ux, y: c1y - (L / 2) * uy }\n  const b1 = { x: c1x + (L / 2) * ux, y: c1y + (L / 2) * uy }\n  // Apex c1 is intersection of: line through a1 parallel to x-axis and line through b1 parallel to hypotenuse\n  const s1 = (a1.y - b1.y) / (hy || 1e-6)\n  const c1 = { x: b1.x + s1 * hx, y: b1.y + s1 * hy }\n  const cut1 = `M ${a1.x} ${a1.y} L ${b1.x} ${b1.y} L ${c1.x} ${c1.y} Z`\n\n  // Second cutout is mirror image of the first across the diagonal (perfect symmetry)\n  const a2r = reflectAcrossDiagonal(a1.x, a1.y)\n  const b2r = reflectAcrossDiagonal(b1.x, b1.y)\n  const c2r = reflectAcrossDiagonal(c1.x, c1.y)\n  const cut2 = `M ${a2r.x} ${a2r.y} L ${b2r.x} ${b2r.y} L ${c2r.x} ${c2r.y} Z`\n\n  // Diagonal from right-angle vertex to the midpoint of the hypotenuse\n  const hypMid = {\n    x: ((points[1]?.x || 0) + (points[2]?.x || 0)) / 2,\n    y: ((points[1]?.y || 0) + (points[2]?.y || 0)) / 2\n  }\n\n  return (\n    <div\n      ref={triangleRef}\n      className={`absolute select-none group ${isActive ? 'z-50' : 'z-40'}`}\n      style={{\n        left: screenPos.x,\n        top: screenPos.y,\n        transform: `rotate(${rotation}deg)`,\n        transformOrigin: '0 0',\n        // Debug: add background to see hover area\n        backgroundColor: isHovering ? 'rgba(255, 0, 0, 0.1)' : 'transparent'\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleTouchStart}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      {/* Triangle SVG */}\n      <div className=\"relative\" style={{ pointerEvents: 'auto' }}>\n        <svg\n          width={size * pxPerUnit + 100}\n          height={type === '45-45-90' ? size * pxPerUnit + 100 : size * pxPerUnit * Math.sqrt(3) / 2 + 100}\n          className=\"absolute\"\n          style={{ left: -50, top: -50, pointerEvents: 'auto' }}\n        >\n          <defs>\n            {/* Main plastic gradient with enhanced depth and contrast */}\n            <linearGradient id={`plasticGradient-${type}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.6)\" />\n              <stop offset=\"15%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.2)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(240,245,250,0.1)\" />\n              <stop offset=\"70%\" stopColor=\"rgba(200,210,220,0.15)\" />\n              <stop offset=\"85%\" stopColor=\"rgba(150,160,170,0.2)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(100,110,120,0.25)\" />\n            </linearGradient>\n\n            {/* Secondary highlight gradient for more realistic plastic look */}\n            <linearGradient id={`highlightGradient-${type}`} x1=\"0%\" y1=\"0%\" x2=\"60%\" y2=\"40%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.8)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"60%\" stopColor=\"rgba(255,255,255,0.1)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(255,255,255,0)\" />\n            </linearGradient>\n\n            {/* Shadow gradient for depth */}\n            <linearGradient id={`shadowGradient-${type}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(0,0,0,0)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(0,0,0,0.05)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(0,0,0,0.15)\" />\n            </linearGradient>\n\n            {/* Enhanced drop shadow with more depth and realism */}\n            <filter id={`softShadow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feDropShadow dx=\"0\" dy=\"8\" stdDeviation=\"16\" floodColor=\"#000\" floodOpacity=\"0.3\" />\n              <feDropShadow dx=\"0\" dy=\"4\" stdDeviation=\"8\" floodColor=\"#000\" floodOpacity=\"0.2\" />\n              <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"4\" floodColor=\"#000\" floodOpacity=\"0.1\" />\n            </filter>\n\n            {/* Enhanced inner shadow for cutout edges with more depth */}\n            <filter id={`innerShadow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feFlood floodColor=\"#000\" floodOpacity=\"0.2\" result=\"flood\"/>\n              <feComposite in=\"flood\" in2=\"SourceGraphic\" operator=\"in\" result=\"composite\"/>\n              <feGaussianBlur in=\"composite\" stdDeviation=\"3\" result=\"blur\"/>\n              <feOffset in=\"blur\" dx=\"2\" dy=\"2\" result=\"offset\"/>\n              <feComposite in=\"offset\" in2=\"SourceGraphic\" operator=\"over\"/>\n            </filter>\n\n            {/* Additional depth shadow for inner cutouts */}\n            <filter id={`deepInnerShadow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feFlood floodColor=\"#000\" floodOpacity=\"0.15\" result=\"flood\"/>\n              <feComposite in=\"flood\" in2=\"SourceGraphic\" operator=\"in\" result=\"composite\"/>\n              <feGaussianBlur in=\"composite\" stdDeviation=\"5\" result=\"blur\"/>\n              <feOffset in=\"blur\" dx=\"3\" dy=\"3\" result=\"offset\"/>\n              <feComposite in=\"offset\" in2=\"SourceGraphic\" operator=\"over\"/>\n            </filter>\n            \n            {/* Glow effect for active state */}\n            <filter id={`glow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/>\n              </feMerge>\n            </filter>\n\n            {/* Create mask for main triangle with inner cutouts as holes */}\n            <mask id={`triangle-mask-${type}`}>\n              {/* Reveal main triangle */}\n              <path d={pathData} fill=\"white\" />\n              {/* Hide inner similar triangles to make them transparent */}\n              <path d={cut1} fill=\"black\" />\n              <path d={cut2} fill=\"black\" />\n            </mask>\n          </defs>\n          \n          {/* Triangle plastic look: base fill, shine gradient overlay, and stroke */}\n          <g filter={isActive ? `url(#glow-${type})` : `url(#softShadow-${type})`}>\n            {/* Base fill with enhanced opacity for better depth */}\n            <path d={pathData} fill=\"rgba(240,245,250,0.25)\" mask={`url(#triangle-mask-${type})`} />\n            {/* Shadow gradient for depth */}\n            <path d={pathData} fill={`url(#shadowGradient-${type})`} mask={`url(#triangle-mask-${type})`} />\n            {/* Main plastic gradient overlay */}\n            <path d={pathData} fill={`url(#plasticGradient-${type})`} mask={`url(#triangle-mask-${type})`} />\n            {/* Highlight gradient for realistic plastic shine */}\n            <path d={pathData} fill={`url(#highlightGradient-${type})`} mask={`url(#triangle-mask-${type})`} />\n            {/* Enhanced outline with subtle inner shadow */}\n            <path d={pathData} fill=\"none\" stroke=\"#000000\" strokeWidth=\"2.5\"/>\n          </g>\n\n          {/* Internal diagonal (median to hypotenuse) */}\n          <line\n            x1={origin.x}\n            y1={origin.y}\n            x2={hypMid.x}\n            y2={hypMid.y}\n            stroke=\"#000000\"\n            strokeWidth=\"1.2\"\n            strokeDasharray=\"4 3\"\n          />\n          \n          {/* Right angle indicator with 90° label - properly aligned */}\n          <path\n            d={`M ${(points[0]?.x || 0) + 6} ${points[0]?.y || 0} L ${(points[0]?.x || 0) + 6} ${(points[0]?.y || 0) + 6} L ${points[0]?.x || 0} ${(points[0]?.y || 0) + 6}`}\n            fill=\"none\"\n            stroke=\"#000000\"\n            strokeWidth=\"1.2\"\n            strokeLinecap=\"round\"\n          />\n          \n          {/* 90° text label - properly positioned */}\n          <text\n            x={(points[0]?.x || 0) + 10}\n            y={(points[0]?.y || 0) + 3}\n            fontSize=\"8\"\n            fill=\"#000000\"\n            fontFamily=\"Arial, sans-serif\"\n            fontWeight=\"bold\"\n          >\n            90°\n          </text>\n\n          {/* Inner similar triangles as transparent holes: stroke only with enhanced inner shadows */}\n          <path d={cut1} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#deepInnerShadow-${type})`} />\n          <path d={cut2} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#deepInnerShadow-${type})`} />\n          {/* Additional inner shadow layer for more depth */}\n          <path d={cut1} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#innerShadow-${type})`} />\n          <path d={cut2} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#innerShadow-${type})`} />\n          {/* SVG ruler markings glued to the right-angle corner */}\n          {renderRulerMarkingsSvg()}\n        </svg>\n        \n        {/* Ruler numbers - positioned as HTML elements like in the ruler component */}\n        {(() => {\n          const screenSize = size * pxPerUnit\n          const pxPerCm = pxPerUnit\n          const maxCm = Math.min(16, Math.floor(size)) // Use floor to stop at or before actual size\n          const numbers = []\n          \n          for (let cm = 1; cm <= maxCm; cm++) {\n            const x = cm * pxPerCm\n            const isFive = cm % 5 === 0\n            \n            numbers.push(\n              <div\n                key={`h-number-${cm}`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: x - 50, // Account for SVG container offset\n                  top: -65, // Position well above the triangle\n                  transform: 'translateX(-50%)',\n                  fontWeight: isFive ? 'bold' : 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {cm}\n              </div>\n            )\n          }\n\n          // Add final number at exact size value (only if not a whole number)\n          if (size % 1 !== 0) {\n            const finalX = size * pxPerCm\n            numbers.push(\n              <div\n                key={`h-number-final`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: finalX - 50, // Account for SVG container offset\n                  top: -65, // Position well above the triangle\n                  transform: 'translateX(-50%)',\n                  fontWeight: 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {size.toFixed(1)}\n              </div>\n            )\n          }\n          \n          return numbers\n        })()}\n        \n        {/* Rotation handle - positioned relative to hypotenuse midpoint */}\n        <div\n          className=\"rotation-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-emerald-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Temporarily only show on hover\n            left: `${1.35 * hypMidX - 50 - basePx * 0.2}px`,\n            top: `${1.35 * hypMidY - 50 - heightPx * 0.2}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 20\n          }}\n          title=\"Otočit trojúhelník\"\n        >\n          <div className=\"w-2 h-2 bg-emerald-500 rounded-full\" />\n        </div>\n        \n        {/* Resize handle - positioned relative to hypotenuse midpoint */}\n        <div\n          className=\"resize-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-amber-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Temporarily only show on hover\n            left: `${0.6 * hypMidX - 50 + basePx * 0.2}px`,\n            top: `${0.6 * hypMidY - 50 + heightPx * 0.2}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 15\n          }}\n          title=\"Změnit velikost\"\n        >\n          <div className=\"w-2 h-2 bg-amber-500 rounded-full\" />\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2302, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/DraggableProtractor.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useRef, useEffect, useCallback } from 'react'\nimport { useBoardScale } from '../hooks/useBoardScale'\n\ninterface DraggableProtractorProps {\n  x: number\n  y: number\n  rotation: number\n  size: number\n  onPositionChange: (x: number, y: number, rotation: number, size: number) => void\n  isActive: boolean\n  onActivate: () => void\n  onUiBusyChange: (busy: boolean) => void\n}\n\nexport default function DraggableProtractor({\n  x,\n  y,\n  rotation,\n  size,\n  onPositionChange,\n  isActive,\n  onActivate,\n  onUiBusyChange\n}: DraggableProtractorProps) {\n  const [isDragging, setIsDragging] = useState(false)\n  const [isRotating, setIsRotating] = useState(false)\n  const [isResizing, setIsResizing] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 })\n  const [rotationStart, setRotationStart] = useState({ x: 0, y: 0, rotation: 0 })\n  const [resizeStart, setResizeStart] = useState({ x: 0, y: 0, size: 0 })\n  const protractorRef = useRef<HTMLDivElement>(null)\n  const getScale = useBoardScale(protractorRef)\n  const { pxPerUnitX, pxPerUnitY } = getScale()\n  const pxPerUnit = Math.min(pxPerUnitX, pxPerUnitY)\n\n  // Convert board coordinates to screen coordinates\n  const boardToScreen = (boardX: number, boardY: number) => {\n    // Board bounding box: [-1, 8, 11, -1] (left, top, right, bottom)\n    const boardLeft = -1\n    const boardTop = 8\n    const boardRight = 11\n    const boardBottom = -1\n    const boardWidth = boardRight - boardLeft // 12\n    const boardHeight = boardTop - boardBottom // 9\n    \n    // Get actual container dimensions\n    const container = protractorRef.current?.closest('.jxgbox') as HTMLElement\n    const containerWidth = container?.offsetWidth || 800\n    const containerHeight = container?.offsetHeight || 500\n    \n    const screenX = ((boardX - boardLeft) / boardWidth) * containerWidth\n    const screenY = containerHeight - ((boardY - boardBottom) / boardHeight) * containerHeight\n    \n    return { x: screenX, y: screenY }\n  }\n\n  const screenToBoard = (screenX: number, screenY: number) => {\n    const boardLeft = -1\n    const boardTop = 8\n    const boardRight = 11\n    const boardBottom = -1\n    const boardWidth = boardRight - boardLeft\n    const boardHeight = boardTop - boardBottom\n    \n    const container = protractorRef.current?.closest('.jxgbox') as HTMLElement\n    const containerWidth = container?.offsetWidth || 800\n    const containerHeight = container?.offsetHeight || 500\n    \n    const boardX = (screenX / containerWidth) * boardWidth + boardLeft\n    const boardY = boardTop - (screenY / containerHeight) * boardHeight\n    \n    return { x: boardX, y: boardY }\n  }\n\n  const screenPos = boardToScreen(x, y)\n\n  // Smooth movement without grid snapping\n  const smoothPosition = (boardX: number, boardY: number) => {\n    return { x: boardX, y: boardY }\n  }\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle')) {\n      setIsRotating(true)\n      setRotationStart({ x: e.clientX, y: e.clientY, rotation })\n    } else if (target.classList.contains('resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: e.clientX, y: e.clientY, size })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    }\n  }\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const touch = e.touches[0]\n    if (!touch) return\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle')) {\n      setIsRotating(true)\n      setRotationStart({ x: touch.clientX, y: touch.clientY, rotation })\n    } else if (target.classList.contains('resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: touch.clientX, y: touch.clientY, size })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    }\n  }\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDragging) {\n      const newScreenX = e.clientX - dragStart.x\n      const newScreenY = e.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const deltaX = e.clientX - centerX\n      const deltaY = e.clientY - centerY\n      const aRaw = Math.atan2(deltaY, deltaX) * 180 / Math.PI\n      const a360 = (aRaw + 360) % 360\n      const snapped = Math.round(a360 / 5) * 5\n      onPositionChange(x, y, snapped, size)\n    } else if (isResizing) {\n      const deltaX = e.clientX - resizeStart.x\n      const deltaY = e.clientY - resizeStart.y\n      \n      // Project the delta vector onto the protractor's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const protractorAxisX = Math.cos(rotationRad)\n      const protractorAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the protractor axis\n      const projection = deltaX * protractorAxisX + deltaY * protractorAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const newSize = Math.max(2, Math.min(6, resizeStart.size + deltaSize))\n      onPositionChange(x, y, rotation, newSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, screenPos, x, y, rotation, size, onPositionChange])\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    const touch = e.touches[0]\n    if (!touch) return\n    \n    if (isDragging) {\n      const newScreenX = touch.clientX - dragStart.x\n      const newScreenY = touch.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const deltaX = touch.clientX - centerX\n      const deltaY = touch.clientY - centerY\n      const aRaw = Math.atan2(deltaY, deltaX) * 180 / Math.PI\n      const a360 = (aRaw + 360) % 360\n      const snapped = Math.round(a360 / 5) * 5\n      onPositionChange(x, y, snapped, size)\n    } else if (isResizing) {\n      const deltaX = touch.clientX - resizeStart.x\n      const deltaY = touch.clientY - resizeStart.y\n      \n      // Project the delta vector onto the protractor's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const protractorAxisX = Math.cos(rotationRad)\n      const protractorAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the protractor axis\n      const projection = deltaX * protractorAxisX + deltaY * protractorAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const newSize = Math.max(2, Math.min(6, resizeStart.size + deltaSize))\n      onPositionChange(x, y, rotation, newSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, screenPos, x, y, rotation, size, onPositionChange])\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  useEffect(() => {\n    if (isDragging || isRotating || isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      document.addEventListener('touchmove', handleTouchMove, { passive: false })\n      document.addEventListener('touchend', handleTouchEnd)\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.removeEventListener('touchmove', handleTouchMove, { passive: false } as any)\n        document.removeEventListener('touchend', handleTouchEnd)\n      }\n    }\n  }, [isDragging, isRotating, isResizing, handleMouseMove, handleTouchMove, handleMouseUp, handleTouchEnd])\n\n  // ResizeObserver to handle container size changes\n  useEffect(() => {\n    const el = protractorRef.current?.closest('.jxgbox')\n    if (!el) return\n    \n    const ro = new ResizeObserver(() => {\n      // Force a light refresh by updating dragStart state\n      setDragStart(s => ({ ...s }))\n    })\n    ro.observe(el)\n    return () => ro.disconnect()\n  }, [])\n\n  // Calculate protractor dimensions\n  const radiusPx = size * pxPerUnit\n  const centerX = size * pxPerUnit * 1.2  // Adjusted for new SVG dimensions\n  const centerY = size * pxPerUnit * 1.1  // Adjusted for new SVG dimensions\n  \n  // Helper variables for improved design\n  const R = radiusPx                               // outer radius (tick tips)\n  const ring = Math.max(8, R * 0.075)              // thickness of the dark tick band\n  const innerR = R - ring                          // inner edge of the tick band (rim sits here)\n  const uid = React.useMemo(() => Math.random().toString(36).slice(2), [])\n  const arc = (rad:number) =>\n    `M ${centerX - rad} ${centerY} A ${rad} ${rad} 0 0 1 ${centerX + rad} ${centerY}`\n  \n  // Returns a closed path for the grey ring band between radii R and r (r < R), 0..180°\n  const ringBandPath = (R: number, r: number) => {\n    // Outer arc: from left outer point to right outer point (sweep=1)\n    // Then line down to the right inner point\n    // Inner arc back to the left inner point (sweep=0), and close.\n    return `\n      M ${centerX - R} ${centerY}\n      A ${R} ${R} 0 0 1 ${centerX + R} ${centerY}\n      L ${centerX + r} ${centerY}\n      A ${r} ${r} 0 0 0 ${centerX - r} ${centerY}\n      Z\n    `;\n  };\n\n  // Generate protractor markings\n  const generateMarkings = () => {\n    const markings = []\n    \n    // Generate degree markings (0-180 degrees)\n    for (let angle = 0; angle <= 180; angle += 1) {\n      const rad = (angle * Math.PI) / 180\n      \n      const isMajor = angle % 10 === 0\n      const isMedium = angle % 5 === 0 && !isMajor\n      const isMinor = angle % 1 === 0 && !isMajor && !isMedium\n      \n      // Different tick lengths for different types\n      let tickLength = 0\n      let strokeWidth = 0.5\n      \n      if (isMajor) {\n        tickLength = R - innerR  // Full length from inner to outer\n        strokeWidth = 2.5\n      } else if (isMedium) {\n        tickLength = (R - innerR) * 0.7  // 70% of full length\n        strokeWidth = 1.5\n      } else if (isMinor) {\n        tickLength = (R - innerR) * 0.4  // 40% of full length\n        strokeWidth = 0.8\n      }\n      \n      const x1 = centerX + Math.cos(rad) * (R - tickLength)\n      const y1 = centerY - Math.sin(rad) * (R - tickLength)\n      const x2 = centerX + Math.cos(rad) * R\n      const y2 = centerY - Math.sin(rad) * R\n      \n      markings.push(\n        <line\n          key={`mark-${angle}`}\n          x1={x1}\n          y1={y1}\n          x2={x2}\n          y2={y2}\n          stroke=\"#374151\"\n          strokeWidth={strokeWidth}\n        />\n      )\n      \n      // Add degree labels for every 10 degrees\n      if (isMajor) {\n        const labelDistance = R + 20 // was radiusPx + 20\n        const labelX = centerX + Math.cos(rad) * labelDistance\n        const labelY = centerY - Math.sin(rad) * labelDistance\n        \n        markings.push(\n          <text\n            key={`label-${angle}`}\n            x={labelX}\n            y={labelY}\n            fontSize=\"11\"\n            fill=\"#1f2937\"\n            fontFamily=\"Arial, sans-serif\"\n            fontWeight=\"bold\"\n            textAnchor=\"middle\"\n            dominantBaseline=\"middle\"\n          >\n            {angle}°\n          </text>\n        )\n      }\n    }\n    \n    return markings\n  }\n\n  return (\n    <div\n      ref={protractorRef}\n      className={`absolute select-none group ${isActive ? 'z-50' : 'z-40'}`}\n      style={{\n        left: screenPos.x,\n        top: screenPos.y,\n        transform: `translate(-50%, -50%) rotate(${rotation}deg)`,\n        transformOrigin: '50% 50%'\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleTouchStart}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      {/* Protractor body */}\n      <div className=\"relative\" style={{ pointerEvents: 'auto' }}>\n        <svg\n          width={size * pxPerUnit * 2.6}\n          height={size * pxPerUnit * 2.4}\n          className=\"absolute\"\n          style={{ \n            left: -size * pxPerUnit * 1.3, \n            top: -size * pxPerUnit * 1.2,\n            pointerEvents: 'auto'\n          }}\n          viewBox={`0 0 ${size * pxPerUnit * 2.6} ${size * pxPerUnit * 1.4}`}\n        >\n          <defs>\n            <filter id=\"protractorShadow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\n              <feDropShadow dx=\"1\" dy=\"1\" stdDeviation=\"2\" floodColor=\"#000\" floodOpacity=\"0.15\"/>\n            </filter>\n            <mask id={`innerArcMask-${uid}`}>\n              <rect width=\"100%\" height=\"100%\" fill=\"white\"/>\n              {/* Create a larger black rectangle to completely hide the inner arc between the lines */}\n              <rect \n                x={centerX - innerR * 2} \n                y={centerY - ring - 1} \n                width={innerR * 4} \n                height={ring + 20} \n                fill=\"black\"\n              />\n            </mask>\n          </defs>\n          \n          {/* Grey ring segment (curved band between arcs) */}\n          <path\n            d={ringBandPath(R, innerR)}\n            fill=\"rgba(107,114,128,0.22)\"\n            stroke=\"none\"\n          />\n\n          {/* Grey band between the two straight lines */}\n          <rect\n            x={centerX - innerR}\n            y={centerY - ring}\n            width={innerR * 2}\n            height={ring}\n            fill=\"rgba(107,114,128,0.22)\"\n          />\n\n          {/* outer semicircle outline */}\n          <path d={arc(R)} fill=\"none\" stroke=\"#0f172a\" strokeWidth=\"2.2\" opacity=\"0.95\" filter=\"url(#protractorShadow)\"/>\n\n          {/* baseline */}\n          <line x1={centerX - R} y1={centerY} x2={centerX + R} y2={centerY}\n                stroke=\"#000000\" strokeWidth={isActive ? 1.9 : 1} strokeLinecap=\"round\" />\n          \n          {/* inner horizontal line - positioned to match the arc distance */}\n          <line x1={centerX - innerR} y1={centerY - ring} x2={centerX + innerR} y2={centerY - ring}\n                stroke=\"#000000\" strokeWidth=\"1.4\" strokeLinecap=\"round\" />\n\n          {/* complete inner semicircle with mask to hide area between lines */}\n          <path d={`M ${centerX - innerR} ${centerY} A ${innerR} ${innerR} 0 0 1 ${centerX + innerR} ${centerY} Z`} \n                fill=\"none\" stroke=\"#000000\" strokeWidth=\"1\" mask={`url(#innerArcMask-${uid})`} />\n\n          {/* center dot */}\n          <circle cx={centerX} cy={centerY} r={isActive ? 4 : 3} fill=\"#dc2626\" stroke=\"#fff\" strokeWidth=\"2\" filter=\"url(#protractorShadow)\"/>\n\n          {/* ticks and labels LAST so they stay crisp on top */}\n          {generateMarkings()}\n          \n        </svg>\n        \n        {/* Rotation handle - positioned on the baseline, left of center */}\n        <div\n          className=\"rotation-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-emerald-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like ruler\n            left: `${0.2 * centerX - radiusPx * 0.3}px`,\n            top: `${0.36 * centerY}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 20\n          }}\n          title=\"Otočit úhloměr\"\n        >\n          <div className=\"w-2 h-2 bg-emerald-500 rounded-full\" />\n        </div>\n\n        {/* Resize handle - positioned on the baseline, right of center */}\n        <div\n          className=\"resize-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-amber-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like ruler\n            left: `${-0.37 * centerX + radiusPx * 0.3}px`,\n            top: `${0.36 * centerY}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 15\n          }}\n          title=\"Změnit velikost\"\n        >\n          <div className=\"w-2 h-2 bg-amber-500 rounded-full\" />\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2920, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/GeneralGeometryTester.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect, useRef, useState, useCallback } from 'react'\nimport { Save, Trash2, Circle, Pencil, RotateCcw, RotateCw, Eraser, Ruler, Triangle, Gauge, ZoomIn, ZoomOut, Download, Upload, Info, Settings, ChevronUp } from 'lucide-react'\nimport DraggableRuler from './DraggableRuler'\nimport DraggableTriangle from './DraggableTriangle'\nimport DraggableProtractor from './DraggableProtractor'\nimport { BoardManager } from '../../lib/board-manager'\nimport { GridMode } from '../../lib/grid-manager'\nimport { ToolController, MouseToolStrategy, PointToolStrategy, SegmentToolStrategy, LineToolStrategy, CircleToolStrategy, RubberToolStrategy } from '../../lib/tools'\nimport { SelectionManager } from '../../lib/selection-manager'\nimport { RenameManager } from '../../lib/rename-manager'\nimport { HotkeyManager } from '../../lib/hotkeys'\nimport { Serializer } from '../../lib/serializer'\nimport { Tool, PhysicalTool, SavedConstruction } from '../../lib/types'\nimport { TOOLBAR_BUTTONS, PHYSICAL_TOOLS, GRID_MODES } from '../../lib/constants'\n\nfunction dist(a: {x:number,y:number}, b:{x:number,y:number}) {\n  return Math.hypot(a.x - b.x, a.y - b.y)\n}\n\nfunction coordsOfPoint(p: any) { return { x: p.X(), y: p.Y() } }\n\nexport default function GeneralGeometryTester() {\n  // Refs for managers\n  const containerRef = useRef<HTMLDivElement | null>(null)\n  const boardManagerRef = useRef<BoardManager | null>(null)\n  const toolControllerRef = useRef<ToolController | null>(null)\n  const selectionManagerRef = useRef<SelectionManager | null>(null)\n  const renameManagerRef = useRef<RenameManager | null>(null)\n  const hotkeyManagerRef = useRef<HotkeyManager | null>(null)\n  const serializerRef = useRef<Serializer | null>(null)\n\n  // State\n  const [tool, setTool] = useState<Tool>('mouse')\n  const [feedback, setFeedback] = useState('')\n  const [data, setData] = useState<SavedConstruction | null>(null)\n  const [showHelp, setShowHelp] = useState(false)\n  const [constructionHistory, setConstructionHistory] = useState<SavedConstruction[]>([])\n  \n  // Physical tools state\n  const [rulerVisible, setRulerVisible] = useState(false)\n  const [triangleVisible, setTriangleVisible] = useState(false)\n  const [protractorVisible, setProtractorVisible] = useState(false)\n  const [rulerPosition, setRulerPosition] = useState({ x: 5, y: 4, rotation: 0, length: 6 })\n  const [trianglePosition, setTrianglePosition] = useState({ x: 7, y: 4, rotation: 0, size: 3 })\n  const [protractorPosition, setProtractorPosition] = useState({ x: 6, y: 3, rotation: 0, size: 3 })\n  const [activeTool, setActiveTool] = useState<PhysicalTool>(null)\n  const [uiBusy, setUiBusy] = useState(false)\n  \n  // Grid settings state\n  const [showSettings, setShowSettings] = useState(false)\n  const [gridOption, setGridOption] = useState<GridMode>('major')\n\n  // Callbacks for managers\n  const handleFeedback = useCallback((message: string) => {\n    setFeedback(message)\n  }, [])\n\n  const handleSelectionChange = useCallback((selected: any[]) => {\n    // Selection is now managed by SelectionManager\n  }, [])\n\n  const handleToggleRename = useCallback(() => {\n    renameManagerRef.current?.toggleRenameMode()\n  }, [])\n\n  const handleUndo = useCallback(() => {\n    boardManagerRef.current?.getUndoRedoManager()?.undo()\n  }, [])\n\n  const handleRedo = useCallback(() => {\n    boardManagerRef.current?.getUndoRedoManager()?.redo()\n  }, [])\n\n  const handleToolChange = useCallback((newTool: Tool) => {\n    setTool(newTool)\n  }, [])\n\n  const handlePhysicalToolToggle = useCallback((physicalTool: PhysicalTool) => {\n    // Handle physical tool toggles\n    if (physicalTool === 'ruler') {\n      setRulerVisible(!rulerVisible)\n      setActiveTool(rulerVisible ? null : 'ruler')\n    } else if (physicalTool === 'triangle') {\n      setTriangleVisible(!triangleVisible)\n      setActiveTool(triangleVisible ? null : 'triangle')\n    } else if (physicalTool === 'protractor') {\n      setProtractorVisible(!protractorVisible)\n      setActiveTool(protractorVisible ? null : 'protractor')\n    }\n  }, [rulerVisible, triangleVisible, protractorVisible])\n\n  const handleClick = useCallback((brd: JBoard, e: any) => {\n    if (uiBusyRef.current) return\n    \n    // Prevent tools from firing while in rename mode\n    if (renameModeRef.current) return\n    \n    // Check if the click is on a physical tool - if so, don't handle it\n    const target = e.originalEvent?.target as HTMLElement\n    if (target && (target.closest('.group') || target.classList.contains('group'))) {\n      return // Let the physical tool handle the interaction\n    }\n    \n    const xy = getMouseCoords(brd, e)\n    const currentTool = toolRef.current\n\n    switch (currentTool) {\n      case 'mouse': {\n        // Mouse tool - do nothing, just allow interaction without creating objects\n        // Check if clicking on a point and prevent default behavior\n        const under = brd.getAllObjectsUnderMouse(e)\n        const clickedPoint = under.find((o:any) => o.elType === 'point' && !o.visProp.fixed)\n        if (clickedPoint) {\n          // Prevent default JSXGraph behavior for points when using mouse tool\n          if (e.originalEvent) {\n            e.originalEvent.preventDefault()\n            e.originalEvent.stopPropagation()\n          }\n          setFeedback('Bod vybrán')\n        } else {\n          setFeedback('')\n        }\n        break\n      }\n      case 'point': {\n        const attr = { name:'', size:2, strokeColor:'#444', fillColor:'#666' }\n        const op = undoRedoRef.current?.createPointOperation(xy.x, xy.y, attr)\n        if (op) undoRedoRef.current?.pushOperation(op)\n        setFeedback('Bod vytvořen')\n        break\n      }\n      case 'segment': {\n        const first = selectedRef.current[0]\n        if (!first) {\n          // first click\n          undoRedoRef.current?.begin()\n          const p = getOrCreatePointViaHistory(brd, xy)\n          if (!p) { undoRedoRef.current?.commit(); break }\n          setSelected([p])\n          setFeedback('Klikněte na druhý bod')\n          // don't commit yet; we'll finish in second click\n          break\n        }\n\n        // second click\n        const a:any = first\n        const b = getOrCreatePointViaHistory(brd, xy)\n        if (!b) { undoRedoRef.current?.commit(); setSelected([]); break }\n\n        const p1 = { x: a.X(), y: a.Y() }\n        const p2 = { x: b.X(), y: b.Y() }\n        const attr = { strokeColor:'#2563eb', strokeWidth:2 }\n        const op = undoRedoRef.current?.createSegmentOperation(p1, p2, attr)\n        if (op) {\n          op.pointIds = [a.id, b.id]              // <-- bind exact endpoints\n          undoRedoRef.current?.pushOperation(op)\n        }\n        undoRedoRef.current?.commit()\n        setSelected([])\n        setFeedback('Úsečka vytvořena')\n        break\n      }\n      case 'line': {\n        const first = selectedRef.current[0]\n        if (!first) {\n          undoRedoRef.current?.begin()\n          const p = getOrCreatePointViaHistory(brd, xy)\n          if (!p) { undoRedoRef.current?.commit(); break }\n          setSelected([p])\n          setFeedback('Klikněte na druhý bod')\n          break\n        }\n\n        const a:any = first\n        const b = getOrCreatePointViaHistory(brd, xy)\n        if (!b) { undoRedoRef.current?.commit(); setSelected([]); break }\n\n        const p1 = { x: a.X(), y: a.Y() }\n        const p2 = { x: b.X(), y: b.Y() }\n        const attr = { strokeColor:'#059669', strokeWidth:1, dash:1 }\n        const op = undoRedoRef.current?.createLineOperation(p1, p2, attr)\n        if (op) {\n          op.pointIds = [a.id, b.id]\n          undoRedoRef.current?.pushOperation(op)\n        }\n        undoRedoRef.current?.commit()\n        setSelected([])\n        setFeedback('Přímka vytvořena')\n        break\n      }\n      case 'circle': {\n        const first = selectedRef.current[0]\n        if (!first) {\n          undoRedoRef.current?.begin()\n          const c = getOrCreatePointViaHistory(brd, xy)\n          if (!c) { undoRedoRef.current?.commit(); break }\n          setSelected([c])\n          setFeedback('Klikněte na bod na kružnici')\n          break\n        }\n\n        const c:any = first\n        const p = getOrCreatePointViaHistory(brd, xy)\n        if (!p) { undoRedoRef.current?.commit(); setSelected([]); break }\n\n        const center = { x: c.X(), y: c.Y() }\n        const on     = { x: p.X(), y: p.Y() }\n        const attr = { strokeColor:'#dc2626', strokeWidth:2 }\n        const op = undoRedoRef.current?.createCircleOperation(center, on, attr)\n        if (op) {\n          op.pointIds = [c.id, p.id]\n          undoRedoRef.current?.pushOperation(op)\n        }\n        undoRedoRef.current?.commit()\n        setSelected([])\n        setFeedback('Kružnice vytvořena')\n        break\n      }\n      case 'rubber': {\n        const under = brd.getAllObjectsUnderMouse(e)\n        const toRemove:any = under.find((o:any) => !o.visProp?.fixed)\n        if (toRemove) {\n          const delOp = undoRedoRef.current?.createDeleteOperation(toRemove)\n          if (delOp) {\n            undoRedoRef.current?.pushOperation(delOp)\n            setFeedback('Objekt smazán')\n          } else {\n            // fallback: hard remove (won't be undoable)\n            brd.removeObject(toRemove as JXG.GeometryElement)\n            setFeedback('Objekt smazán (bez historie)')\n          }\n        }\n        break\n      }\n    }\n  }, [getOrCreatePointViaHistory])\n\n  useEffect(() => { handleClickRef.current = handleClick }, [handleClick])\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if ((e.key === 'n' || e.key === 'N') && !uiBusyRef.current) {\n        setRenameMode(v => !v)\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyPress)\n    return () => window.removeEventListener('keydown', handleKeyPress)\n  }, [])\n\n  // Handle ruler position changes\n  const handleRulerPositionChange = (x: number, y: number, rotation: number, length: number) => {\n    setRulerPosition({ x, y, rotation, length })\n  }\n\n  // Handle triangle position changes\n  const handleTrianglePositionChange = (x: number, y: number, rotation: number, size: number) => {\n    setTrianglePosition({ x, y, rotation, size })\n  }\n\n  // Handle protractor position changes\n  const handleProtractorPositionChange = (x: number, y: number, rotation: number, size: number) => {\n    setProtractorPosition({ x, y, rotation, size })\n  }\n\n  function toggleRuler() {\n    setRulerVisible(!rulerVisible)\n    if (!rulerVisible) {\n      setActiveTool('ruler')\n      setTool('mouse') // Automatically switch to mouse mode when activating ruler\n    } else if (activeTool === 'ruler') {\n      setActiveTool(null)\n    }\n  }\n\n  function toggleTriangle() {\n    setTriangleVisible(!triangleVisible)\n    if (!triangleVisible) {\n      setActiveTool('triangle')\n      setTool('mouse') // Automatically switch to mouse mode when activating triangle\n    } else if (activeTool === 'triangle') {\n      setActiveTool(null)\n    }\n  }\n\n  function toggleProtractor() {\n    setProtractorVisible(!protractorVisible)\n    if (!protractorVisible) {\n      setActiveTool('protractor')\n      setTool('mouse') // Automatically switch to mouse mode when activating protractor\n    } else if (activeTool === 'protractor') {\n      setActiveTool(null)\n    }\n  }\n\n  useEffect(() => {\n    if (!containerRef.current) return\n\n    const brd = JXG.JSXGraph.initBoard(containerRef.current, {\n      boundingbox: [-1, 8, 11, -1],\n      axis: false,\n      showNavigation: false,\n      showCopyright: false,\n      grid: false,           // we'll manage grids ourselves\n      pan: { enabled: false },\n      zoom: false,\n      keepaspectratio: true\n    }) as JBoard\n\n    boardRef.current = brd\n    gridMgrRef.current = new GridManager(brd, containerRef.current)\n\n    // Optional: global snap-to-grid defaults for points\n    // (You can still override per element in your creators.)\n    JXG.Options.point.snapToGrid = true\n    JXG.Options.point.snapSizeX = 0.5\n    JXG.Options.point.snapSizeY = 0.5\n\n    // Init undo/redo\n    undoRedoRef.current = new UndoRedoManager({\n      board: brd,\n      onFeedback: setFeedback,\n      EPS: EPS\n    })\n\n    // First grid application\n    gridMgrRef.current.setMode(gridOption)\n\n    // If you ever enable resize/pan/zoom, keep the dot grid in sync:\n    // brd.on('boundingbox', () => gridMgrRef.current?.sync())\n\n    return () => {\n      try { JXG.JSXGraph.freeBoard(brd) } catch {}\n      boardRef.current = null\n      undoRedoRef.current = null\n      gridMgrRef.current = null\n    }\n  }, [gridOption])  // <-- include gridOption for initial setup\n\n  // When user changes the option, just update the grid manager\n  useEffect(() => {\n    gridMgrRef.current?.setMode(gridOption)\n  }, [gridOption])\n\n  // Close settings dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as HTMLElement\n      if (showSettings && !target.closest('.settings-dropdown')) {\n        setShowSettings(false)\n      }\n    }\n\n    if (showSettings) {\n      document.addEventListener('mousedown', handleClickOutside)\n      return () => document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [showSettings])\n\n  // Update event handlers when rename mode changes\n  useEffect(() => {\n    const brd = boardRef.current\n    if (!brd) return\n\n    // Store references to our specific handlers so we can remove them properly\n    let currentDownHandler: ((e: any) => void) | null = null\n    let currentUpHandler: ((e: any) => void) | null = null\n\n    const CLICK_EPS = 0.12 // world units; tweak if needed\n\n    const openPrompt = (pt:any, e:any) => {\n      const currentRaw = (pt as any)._rawName || ''\n      let proposed = (window.prompt('Název bodu (např. A, B, C, A_1, A_2):', currentRaw) ?? '').trim()\n\n      if (proposed && isNameTaken(brd, proposed, (pt as any).id)) {\n        let i = 2\n        while (isNameTaken(brd, `${proposed}_${i}`, (pt as any).id)) i++\n        proposed = `${proposed}_${i}`\n      }\n\n      renamePoint(pt, proposed)\n\n      // Restore mobility\n      const arm = renameArmRef.current\n      ;(pt as any).setAttribute({ fixed: arm.wasFixed })\n      ;(pt as any).draggable = arm.wasDraggable\n\n      // Stop further board interaction from this click\n      if (e?.originalEvent) {\n        e.originalEvent.stopPropagation()\n        e.originalEvent.preventDefault()\n      }\n      brd.update()\n\n      if (!proposed) setRenameMode(false)\n\n      // Clear arm\n      renameArmRef.current = { pt:null, wasFixed:false, wasDraggable:true }\n      downPosRef.current = null\n    }\n\n    // 1) DOWN: if in rename mode and on a point, FREEZE it and arm rename\n    currentDownHandler = (e:any) => {\n      if (uiBusyRef.current) return\n\n      // If not in rename mode, pass through to normal drawing handler and let undo-redo system handle drags\n      if (!renameModeRef.current) {\n        if (handleClickRef.current) handleClickRef.current(brd, e)\n        return\n      }\n\n      const pt = pointUnder(brd, e)\n      if (!pt) return\n\n      // Freeze now (before any drag begins)\n      const wasFixed = !!(pt as any).visProp.fixed\n      const wasDraggable = !!(pt as any).draggable\n      ;(pt as any).setAttribute({ fixed: true })\n      ;(pt as any).draggable = false\n\n      renameArmRef.current = { pt, wasFixed, wasDraggable }\n      downPosRef.current = getMouseCoords(brd, e)\n\n      // Only prevent default behavior in rename mode\n      if (e.originalEvent) {\n        e.originalEvent.stopPropagation()\n        e.originalEvent.preventDefault()\n      }\n    }\n\n    // 2) UP: if we armed a point and movement was small → open prompt\n    currentUpHandler = (e:any) => {\n      const arm = renameArmRef.current\n      if (!arm.pt) return\n\n      const up = getMouseCoords(brd, e)\n      const down = downPosRef.current || up\n      const moved = Math.hypot(up.x - down.x, up.y - down.y)\n\n      // Only treat as rename if it was a click, not a drag\n      if (moved <= CLICK_EPS) {\n        openPrompt(arm.pt, e)\n        return\n      }\n\n      // If it was a drag after all, restore the point & abort rename\n      const { pt } = arm\n      ;(pt as any).setAttribute({ fixed: arm.wasFixed })\n      ;(pt as any).draggable = arm.wasDraggable\n      renameArmRef.current = { pt:null, wasFixed:false, wasDraggable:true }\n      downPosRef.current = null\n    }\n\n    brd.on('down', currentDownHandler)\n    brd.on('up', currentUpHandler)\n\n    return () => {\n      try { \n        if (currentDownHandler) brd.off('down', currentDownHandler)\n        if (currentUpHandler) brd.off('up', currentUpHandler)\n      } catch {}\n    }\n  }, [renameMode, renamePoint])\n\n  function undoLast() {\n    undoRedoRef.current?.undo()\n  }\n\n  function redoLast() {\n    undoRedoRef.current?.redo()\n  }\n\n  function clearAll() {\n    const brd = boardRef.current\n    if (!brd) return\n    const toRemove: any[] = []\n    for (const key in brd.objects) {\n      const o: any = brd.objects[key]\n      if (!o?.visProp?.fixed) {\n        toRemove.push(o)\n      }\n    }\n    toRemove.forEach(o => brd.removeObject(o))\n    setSelected([])\n    setFeedback('')\n    setData(null)\n    setCreatedStack([])\n  }\n\n  function saveConstruction() {\n    if (!boardRef.current) return\n    const timestamp = new Date().toISOString()\n    const constructionData = {\n      timestamp,\n      objects: Object.values(boardRef.current.objects).map((obj: any) => ({\n        id: obj.id,\n        type: obj.elType,\n        name: obj.name,\n        properties: obj.visProp\n      })),\n      createdStack: [...createdStack]\n    }\n    setData(constructionData)\n    setConstructionHistory(prev => [...prev, constructionData])\n    setFeedback('Konstrukce uložena')\n  }\n\n  function exportConstruction() {\n    if (!data) return\n    const dataStr = JSON.stringify(data, null, 2)\n    const dataBlob = new Blob([dataStr], { type: 'application/json' })\n    const url = URL.createObjectURL(dataBlob)\n    const link = document.createElement('a')\n    link.href = url\n    link.download = `construction_${new Date().toISOString().split('T')[0]}.json`\n    link.click()\n    URL.revokeObjectURL(url)\n    setFeedback('Konstrukce exportována')\n  }\n\n  function importConstruction(event: React.ChangeEvent<HTMLInputElement>) {\n    const file = event.target.files?.[0]\n    if (!file) return\n\n    const reader = new FileReader()\n    reader.onload = (e) => {\n      try {\n        const importedData = JSON.parse(e.target?.result as string)\n        setData(importedData)\n        setFeedback('Konstrukce načtena - klikněte na \"Načíst\" pro obnovení')\n      } catch (err) {\n        setFeedback('Chyba při načítání souboru')\n      }\n    }\n    reader.readAsText(file)\n  }\n\n  function loadConstruction() {\n    if (!data || !boardRef.current) return\n    \n    // Clear current construction\n    clearAll()\n    \n    // Restore objects from data\n    // This is a simplified restoration - in a real implementation you'd need more sophisticated logic\n    setFeedback('Konstrukce načtena')\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\n          <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">\n            Obecné geometrické testování\n          </h1>\n\n          <div className=\"bg-green-50 border-l-4 border-green-500 p-4 mb-4\">\n            <p className=\"text-gray-700\">\n              Volné testovací pole pro geometrické konstrukce. Můžete používat všechny dostupné nástroje bez specifických požadavků.\n            </p>\n            <div className=\"mt-2 flex items-center gap-2\">\n              <button\n                onClick={() => setShowHelp(!showHelp)}\n                className=\"flex items-center gap-1 text-sm text-blue-600 hover:text-blue-800\"\n              >\n                <Info size={14} />\n                {showHelp ? 'Skrýt nápovědu' : 'Zobrazit nápovědu'}\n              </button>\n            </div>\n          </div>\n\n          {showHelp && (\n            <div className=\"bg-blue-50 border-l-4 border-blue-500 p-4 mb-4\">\n              <h3 className=\"font-semibold text-blue-800 mb-2\">Nápověda k nástrojům:</h3>\n              <div className=\"grid md:grid-cols-2 gap-4 text-sm text-blue-700\">\n                <div>\n                  <h4 className=\"font-medium mb-1\">Základní nástroje:</h4>\n                  <ul className=\"space-y-1\">\n                    <li>• <strong>Myš:</strong> Interakce s objekty bez vytváření</li>\n                    <li>• <strong>Bod:</strong> Vytvoření bodu kliknutím</li>\n                    <li>• <strong>Úsečka:</strong> Klikněte na dva body</li>\n                    <li>• <strong>Přímka:</strong> Klikněte na dva body</li>\n                    <li>• <strong>Kružnice:</strong> Střed a bod na kružnici</li>\n                    <li>• <strong>Guma:</strong> Smazání objektu</li>\n                  </ul>\n                </div>\n                <div>\n                  <h4 className=\"font-medium mb-1\">Fyzické nástroje:</h4>\n                  <ul className=\"space-y-1\">\n                    <li>• <strong>Pravítko:</strong> Měření vzdáleností</li>\n                    <li>• <strong>Trojúhelník:</strong> Rýsování úhlů</li>\n                    <li>• <strong>Úhloměr:</strong> Měření úhlů</li>\n                    <li>• <strong>Modrý bod:</strong> Přesun nástroje</li>\n                    <li>• <strong>Zelený bod:</strong> Otočení nástroje</li>\n                    <li>• <strong>Oranžový bod:</strong> Změna velikosti</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Toolbar */}\n          <div className=\"flex flex-wrap gap-2 mb-4 p-4 bg-gray-100 rounded-lg\">\n            <button \n              onClick={() => setTool('mouse')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'mouse' ? 'bg-gray-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <path d=\"M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z\"/>\n                <path d=\"M13 13l6 6\"/>\n              </svg>\n              Myš\n            </button>\n            <button \n              onClick={() => setTool('point')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'point' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Circle size={18}/> Bod\n            </button>\n            <button \n              onClick={() => setTool('segment')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'segment' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Pencil size={18}/> Úsečka\n            </button>\n            <button \n              onClick={() => setTool('line')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'line' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Pencil size={18}/> Přímka\n            </button>\n            <button \n              onClick={() => setTool('circle')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'circle' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Circle size={18}/> Kružnice\n            </button>\n            <button \n              onClick={() => setTool('rubber')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'rubber' ? 'bg-red-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Eraser size={18}/> Guma\n            </button>\n            <button \n              onClick={() => setRenameMode(v => !v)}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                renameMode ? 'bg-teal-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n              title=\"Přejmenovat bod (klikněte na bod)\"\n            >\n              ✎ Název bodu\n            </button>\n            \n            <div className=\"border-l-2 border-gray-300 mx-2\"></div>\n            \n            <button \n              onClick={toggleRuler}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                rulerVisible ? 'bg-yellow-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Ruler size={18}/> Pravítko\n            </button>\n            <button \n              onClick={toggleTriangle}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                triangleVisible ? 'bg-purple-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Triangle size={18}/> Trojúhelník\n            </button>\n            <button \n              onClick={toggleProtractor}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                protractorVisible ? 'bg-orange-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Gauge size={18}/> Úhloměr\n            </button>\n\n            <div className=\"flex-1\"></div>\n\n            <button onClick={undoLast} className=\"px-3 py-2 rounded bg-gray-700 text-white hover:bg-gray-800 flex items-center gap-2\">\n              <RotateCcw size={18}/> Zpět\n            </button>\n            <button onClick={redoLast} className=\"px-3 py-2 rounded bg-gray-700 text-white hover:bg-gray-800 flex items-center gap-2\">\n              <RotateCw size={18}/> Znovu\n            </button>\n            <button onClick={clearAll} className=\"px-3 py-2 rounded bg-red-500 text-white hover:bg-red-600 flex items-center gap-2\">\n              <Trash2 size={18}/> Vymazat\n            </button>\n            <button onClick={saveConstruction} className=\"px-3 py-2 rounded bg-green-600 text-white hover:bg-green-700 flex items-center gap-2\">\n              <Save size={18}/> Uložit\n            </button>\n            <button onClick={exportConstruction} disabled={!data} className=\"px-3 py-2 rounded bg-blue-600 text-white hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2\">\n              <Download size={18}/> Export\n            </button>\n            <label className=\"px-3 py-2 rounded bg-purple-600 text-white hover:bg-purple-700 cursor-pointer flex items-center gap-2\">\n              <Upload size={18}/> Import\n              <input\n                type=\"file\"\n                accept=\".json\"\n                onChange={importConstruction}\n                className=\"hidden\"\n              />\n            </label>\n            <button onClick={loadConstruction} disabled={!data} className=\"px-3 py-2 rounded bg-orange-600 text-white hover:bg-orange-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2\">\n              <Upload size={18}/> Načíst\n            </button>\n          </div>\n\n          <div className=\"relative\">\n            {/* Settings Button - positioned outside JSXGraph container */}\n            <div className=\"absolute top-2 right-2 z-50 settings-dropdown\" style={{ zIndex: 9999 }}>\n              <button\n                onClick={() => setShowSettings(!showSettings)}\n                className=\"p-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg shadow-lg transition-colors\"\n                title=\"Nastavení mřížky\"\n                style={{ zIndex: 10000 }}\n              >\n                <Settings size={18} />\n              </button>\n              \n              {/* Settings Dropdown */}\n              {showSettings && (\n                <div className=\"absolute top-12 right-0 bg-white border border-gray-300 rounded-lg shadow-lg min-w-48 z-20\" style={{ zIndex: 10001 }}>\n                  <div className=\"p-3 border-b border-gray-200\">\n                    <div className=\"flex items-center gap-2 text-gray-700 font-medium\">\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <path d=\"M3 3h18v18H3z\"/>\n                        <path d=\"M9 9h6v6H9z\"/>\n                        <path d=\"M3 9h6\"/>\n                        <path d=\"M15 9h6\"/>\n                        <path d=\"M3 15h6\"/>\n                        <path d=\"M15 15h6\"/>\n                        <path d=\"M9 3v6\"/>\n                        <path d=\"M9 15v6\"/>\n                        <path d=\"M15 3v6\"/>\n                        <path d=\"M15 15v6\"/>\n                      </svg>\n                      Zobrazit mřížku\n                      <ChevronUp size={14} />\n                    </div>\n                  </div>\n                  <div className=\"py-1\">\n                    <button\n                      onClick={() => {\n                        setGridOption('none')\n                        setShowSettings(false)\n                      }}\n                      className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${\n                        gridOption === 'none' ? 'bg-gray-100 text-gray-900' : 'text-gray-700'\n                      }`}\n                    >\n                      Žádná mřížka\n                    </button>\n                    <button\n                      onClick={() => {\n                        setGridOption('major')\n                        setShowSettings(false)\n                      }}\n                      className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${\n                        gridOption === 'major' ? 'bg-gray-100 text-gray-900' : 'text-gray-700'\n                      }`}\n                    >\n                      Hlavní mřížka\n                    </button>\n                    <button\n                      onClick={() => {\n                        setGridOption('minor')\n                        setShowSettings(false)\n                      }}\n                      className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${\n                        gridOption === 'minor' ? 'bg-gray-100 text-gray-900' : 'text-gray-700'\n                      }`}\n                    >\n                      Vedlejší mřížka\n                    </button>\n                    <button\n                      onClick={() => {\n                        setGridOption('major-minor')\n                        setShowSettings(false)\n                      }}\n                      className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${\n                        gridOption === 'major-minor' ? 'bg-gray-100 text-gray-900' : 'text-gray-700'\n                      }`}\n                    >\n                      Hlavní a vedlejší mřížka\n                    </button>\n                    <button\n                      onClick={() => {\n                        setGridOption('dot')\n                        setShowSettings(false)\n                      }}\n                      className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${\n                        gridOption === 'dot' ? 'bg-gray-100 text-gray-900' : 'text-gray-700'\n                      }`}\n                    >\n                      Bodová mřížka\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <div \n              ref={containerRef} \n              id=\"jxgbox\" \n              className=\"w-full border-2 border-gray-300 rounded-lg bg-white jxgbox\" \n              style={{ height: 500, touchAction: 'none' }} \n            >\n            {/* Draggable Ruler */}\n            {rulerVisible && (\n              <DraggableRuler\n                x={rulerPosition.x}\n                y={rulerPosition.y}\n                rotation={rulerPosition.rotation}\n                length={rulerPosition.length}\n                onPositionChange={handleRulerPositionChange}\n                isActive={activeTool === 'ruler'}\n                onActivate={() => {\n                  setActiveTool('ruler')\n                  setTool('mouse') // Automatically switch to mouse mode when clicking ruler\n                }}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n            \n            {/* Draggable Triangle */}\n            {triangleVisible && (\n              <DraggableTriangle\n                x={trianglePosition.x}\n                y={trianglePosition.y}\n                rotation={trianglePosition.rotation}\n                size={trianglePosition.size}\n                type=\"45-45-90\"\n                onPositionChange={handleTrianglePositionChange}\n                isActive={activeTool === 'triangle'}\n                onActivate={() => {\n                  setActiveTool('triangle')\n                  setTool('mouse') // Automatically switch to mouse mode when clicking triangle\n                }}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n            \n            {/* Draggable Protractor */}\n            {protractorVisible && (\n              <DraggableProtractor\n                x={protractorPosition.x}\n                y={protractorPosition.y}\n                rotation={protractorPosition.rotation}\n                size={protractorPosition.size}\n                onPositionChange={handleProtractorPositionChange}\n                isActive={activeTool === 'protractor'}\n                onActivate={() => {\n                  setActiveTool('protractor')\n                  setTool('mouse') // Automatically switch to mouse mode when clicking protractor\n                }}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n            </div>\n          </div>\n\n          <div className=\"mt-4 p-3 bg-blue-50 border-l-4 border-blue-500 rounded-lg\">\n            <p className=\"text-blue-700 text-sm\">\n              <strong>Nápověda:</strong> Modrý bod = přesun • Zelený bod = otočení • Oranžový bod = změna velikosti\n            </p>\n          </div>\n\n          {feedback && (\n            <div className={`mt-4 p-4 rounded-lg ${\n              feedback.includes('✅') ? 'bg-green-50 border-l-4 border-green-500' : 'bg-yellow-50 border-l-4 border-yellow-500'\n            }`}>\n              <p className=\"text-gray-800\">{feedback}</p>\n            </div>\n          )}\n\n          {/* Construction History */}\n          {constructionHistory.length > 0 && (\n            <div className=\"mt-6 bg-gray-50 rounded-lg p-4\">\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-3\">Historie konstrukcí</h3>\n              <div className=\"space-y-2 max-h-40 overflow-y-auto\">\n                {constructionHistory.map((construction, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-2 bg-white rounded border\">\n                    <div>\n                      <span className=\"text-sm font-medium\">Konstrukce {index + 1}</span>\n                      <span className=\"text-xs text-gray-500 ml-2\">\n                        {new Date(construction.timestamp).toLocaleString('cs-CZ')}\n                      </span>\n                    </div>\n                    <div className=\"text-xs text-gray-500\">\n                      {construction.objects?.length || 0} objektů\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}