{"version":3,"sources":["turbopack:///[project]/Documents/geometry_review/app/components/GeometryConstructionTester.tsx"],"sourcesContent":["  'use client'\n\nimport React, { useEffect, useRef, useState, useCallback } from 'react'\nimport JXG from 'jsxgraph'\nimport { Save, Trash2, Circle, Pencil, RotateCcw, Eraser, Ruler, Triangle, Gauge, ZoomIn, ZoomOut } from 'lucide-react'\nimport DraggableRuler from './DraggableRuler'\nimport DraggableTriangle from './DraggableTriangle'\nimport DraggableProtractor from './DraggableProtractor'\n\ntype JBoard = JXG.Board & { renderer: any }\n\nconst EPS = 0.03\n\nfunction dist(a: {x:number,y:number}, b:{x:number,y:number}) {\n  return Math.hypot(a.x - b.x, a.y - b.y)\n}\n\nfunction coordsOfPoint(p: any) { return { x: p.X(), y: p.Y() } }\n\nfunction pointOnLineXY(p:{x:number,y:number}, line:any, eps=EPS){\n  const P = coordsOfPoint(line.point1)\n  const Q = coordsOfPoint(line.point2)\n  const A = Q.y - P.y, B = P.x - Q.x, C = -(A*P.x + B*P.y)\n  return Math.abs(A*p.x + B*p.y + C) / Math.hypot(A,B) < eps\n}\n\nfunction hasEndpoints(seg:any, [P,Q]:any[], eps=EPS){\n  const pts = [coordsOfPoint(seg.point1), coordsOfPoint(seg.point2)]\n  const d = (u:any,v:any)=>dist(u,v)\n  return (d(pts[0],coordsOfPoint(P))<eps && d(pts[1],coordsOfPoint(Q))<eps) ||\n         (d(pts[1],coordsOfPoint(P))<eps && d(pts[0],coordsOfPoint(Q))<eps)\n}\n\nexport default function GeometryConstructionTester() {\n  const boardRef = useRef<JBoard | null>(null)\n  const containerRef = useRef<HTMLDivElement | null>(null)\n\n  const [tool, setTool] = useState<'mouse'|'point'|'segment'|'line'|'circle'|'rubber'>('mouse')\n  const [selected, setSelected] = useState<any[]>([])\n  const [feedback, setFeedback] = useState('')\n  const [data, setData] = useState<any>(null)\n  const [createdStack, setCreatedStack] = useState<string[]>([])\n  \n  // Physical tools state\n  const [rulerVisible, setRulerVisible] = useState(false)\n  const [triangleVisible, setTriangleVisible] = useState(false)\n  const [protractorVisible, setProtractorVisible] = useState(false)\n  const [rulerPosition, setRulerPosition] = useState({ x: 5, y: 4, rotation: 0, length: 6 })\n  const [trianglePosition, setTrianglePosition] = useState({ x: 7, y: 4, rotation: 0, size: 3 })\n  const [protractorPosition, setProtractorPosition] = useState({ x: 6, y: 3, rotation: 0, size: 3 })\n  const [activeTool, setActiveTool] = useState<'ruler' | 'triangle' | 'protractor' | null>(null)\n  const [uiBusy, setUiBusy] = useState(false)\n  \n  // Point naming state\n  const [renameMode, setRenameMode] = useState(false)\n  const [selectedPointId, setSelectedPointId] = useState<string|null>(null)\n\n  const toolRef = useRef(tool)\n  const selectedRef = useRef(selected)\n  const uiBusyRef = useRef(uiBusy)\n  const renameModeRef = useRef(renameMode)\n  const handleClickRef = useRef<((brd: JBoard, e: any) => void) | null>(null)\n  \n  // Rename mode refs for down+up approach\n  const renameArmRef = useRef<{ pt:any|null, wasFixed:boolean }>(\n    { pt:null, wasFixed:false }\n  )\n  const downPosRef = useRef<{x:number,y:number}|null>(null)\n  \n  useEffect(() => { toolRef.current = tool }, [tool])\n  useEffect(() => { selectedRef.current = selected }, [selected])\n  useEffect(() => { uiBusyRef.current = uiBusy }, [uiBusy])\n  useEffect(() => { renameModeRef.current = renameMode }, [renameMode])\n\n  const givensRef = useRef<{ q:any, S:any, C:any } | null>(null)\n\n  function pushCreated(obj: any) {\n    if (obj?.id) setCreatedStack(s => [...s, obj.id])\n  }\n\n  function getMouseCoords(brd: JBoard, e: any): {x: number, y: number} {\n    const coords = brd.getUsrCoordsOfMouse(e)\n    return { x: coords[0], y: coords[1] }\n  }\n\n  // \"A_12\" -> \"A₁₂\"\n  function toSubscript(name: string) {\n    const map: Record<string,string> = { '0':'₀','1':'₁','2':'₂','3':'₃','4':'₄','5':'₅','6':'₆','7':'₇','8':'₈','9':'₉' }\n    return name.replace(/_(\\d+)/g, (_, d) => d.split('').map((ch: string) => map[ch] ?? ch).join(''))\n  }\n\n  // normalize and set the visible + raw name on a JSXGraph point\n  const renamePoint = useCallback((pt:any, newName:string) => {\n    const trimmed = (newName || '').trim()\n    const pretty = toSubscript(trimmed)                 // converts A_1 -> A₁\n    pt.setAttribute({ name: pretty, withLabel: !!trimmed })\n    ;(pt as any)._rawName = trimmed                      // keep searchable original\n    // Removed pt.board.update() to prevent point attachment issues\n  }, [])\n\n  // find a point under event (prefers non-fixed)\n  function pointUnder(brd:JBoard, e:any) {\n    const under = brd.getAllObjectsUnderMouse(e)\n    return under.find((o:any)=>o.elType==='point') || null\n  }\n\n  function isNameTaken(brd:JBoard, raw:string, exceptId?:string) {\n    for (const k in brd.objects) {\n      const o:any = (brd.objects as any)[k]\n      if (o.elType === 'point' && o.id !== exceptId) {\n        if ((o._rawName ?? '') === raw) return true\n      }\n    }\n    return false\n  }\n\n  function nearestFreePoint(brd: JBoard, e: any) {\n    const under = brd.getAllObjectsUnderMouse(e)\n    const pt = under.find((o:any) => o.elType === 'point' && !o.visProp.fixed)\n    return pt || null\n  }\n\n  const createPointSmart = useCallback((brd: JBoard, xy: {x:number, y:number}) => {\n    const baseOpts = { name: '', size: 3, strokeColor: '#e11d48', fillColor: '#e11d48', label: { offset: [5, 10] } }\n    const { q } = givensRef.current!\n\n    if (pointOnLineXY(xy, q, 0.15)) {\n      const glider = brd.create('glider', [xy.x, xy.y, q], baseOpts)\n      // store a raw name field (empty for now)\n      ;(glider as any)._rawName = ''\n      pushCreated(glider)\n      return glider\n    }\n\n    const pt = brd.create('point', [xy.x, xy.y], { ...baseOpts, size: 2, strokeColor:'#444', fillColor:'#666' })\n    ;(pt as any)._rawName = ''\n    pushCreated(pt)\n    return pt\n  }, [])\n\n  const handleClick = useCallback((brd: JBoard, e: any) => {\n    if (uiBusyRef.current) return\n    \n    // Prevent tools from firing while in rename mode\n    if (renameModeRef.current) return\n    \n    // Check if the click is on a physical tool - if so, don't handle it\n    const target = e.originalEvent?.target as HTMLElement\n    if (target && (target.closest('.group') || target.classList.contains('group'))) {\n      return // Let the physical tool handle the interaction\n    }\n    \n    const xy = getMouseCoords(brd, e)\n    const currentTool = toolRef.current\n\n    switch (currentTool) {\n      case 'mouse': {\n        // Mouse tool - do nothing, just allow interaction without creating objects\n        // Check if clicking on a point and prevent default behavior\n        const under = brd.getAllObjectsUnderMouse(e)\n        const clickedPoint = under.find((o:any) => o.elType === 'point' && !o.visProp.fixed)\n        if (clickedPoint) {\n          // Prevent default JSXGraph behavior for points when using mouse tool\n          if (e.originalEvent) {\n            e.originalEvent.preventDefault()\n            e.originalEvent.stopPropagation()\n          }\n          setFeedback('Bod vybrán')\n        } else {\n          setFeedback('')\n        }\n        break\n      }\n      case 'point': {\n        createPointSmart(brd, xy)\n        setFeedback('Bod vytvořen')\n        break\n      }\n      case 'segment': {\n        let p = nearestFreePoint(brd, e)\n        if (!p) p = createPointSmart(brd, xy)\n\n        setSelected(prev => {\n          const arr = [...prev, p]\n          if (arr.length === 1) {\n            setFeedback('Klikněte na druhý bod')\n          } else if (arr.length === 2) {\n            const seg = brd.create('segment', [arr[0], arr[1]], {\n              strokeColor: '#2563eb', strokeWidth: 2\n            })\n            pushCreated(seg)\n            setFeedback('Úsečka vytvořena')\n            return []\n          }\n          return arr\n        })\n        break\n      }\n      case 'line': {\n        let p = nearestFreePoint(brd, e)\n        if (!p) p = createPointSmart(brd, xy)\n\n        setSelected(prev => {\n          const arr = [...prev, p]\n          if (arr.length === 1) {\n            setFeedback('Klikněte na druhý bod')\n          } else if (arr.length === 2) {\n            const line = brd.create('line', [arr[0], arr[1]], {\n              strokeColor: '#059669', strokeWidth: 1, dash: 1\n            })\n            pushCreated(line)\n            setFeedback('Přímka vytvořena')\n            return []\n          }\n          return arr\n        })\n        break\n      }\n      case 'circle': {\n        let p = nearestFreePoint(brd, e)\n        if (!p) p = createPointSmart(brd, xy)\n\n        setSelected(prev => {\n          const arr = [...prev, p]\n          if (arr.length === 1) {\n            setFeedback('Klikněte na bod na kružnici')\n          } else if (arr.length === 2) {\n            const circ = brd.create('circle', [arr[0], arr[1]], {\n              strokeColor: '#dc2626', strokeWidth: 2\n            })\n            pushCreated(circ)\n            setFeedback('Kružnice vytvořena')\n            return []\n          }\n          return arr\n        })\n        break\n      }\n      case 'rubber': {\n        const under = brd.getAllObjectsUnderMouse(e)\n        const toRemove = under.find((o:any) => !o.visProp?.fixed && o.name !== 'S' && o.name !== 'C')\n        if (toRemove) {\n          brd.removeObject(toRemove as JXG.GeometryElement)\n          setFeedback('Objekt smazán')\n        }\n        break\n      }\n    }\n  }, [createPointSmart])\n\n  useEffect(() => { handleClickRef.current = handleClick }, [handleClick])\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if ((e.key === 'n' || e.key === 'N') && !uiBusyRef.current) {\n        setRenameMode(v => !v)\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyPress)\n    return () => window.removeEventListener('keydown', handleKeyPress)\n  }, [])\n\n  // Handle ruler position changes\n  const handleRulerPositionChange = (x: number, y: number, rotation: number, length: number) => {\n    setRulerPosition({ x, y, rotation, length })\n  }\n\n  // Handle triangle position changes\n  const handleTrianglePositionChange = (x: number, y: number, rotation: number, size: number) => {\n    setTrianglePosition({ x, y, rotation, size })\n  }\n\n  // Handle protractor position changes\n  const handleProtractorPositionChange = (x: number, y: number, rotation: number, size: number) => {\n    setProtractorPosition({ x, y, rotation, size })\n  }\n\n  function toggleRuler() {\n    setRulerVisible(!rulerVisible)\n    if (!rulerVisible) {\n      setActiveTool('ruler')\n      setTool('mouse') // Automatically switch to mouse mode when activating ruler\n    } else if (activeTool === 'ruler') {\n      setActiveTool(null)\n    }\n  }\n\n  function toggleTriangle() {\n    setTriangleVisible(!triangleVisible)\n    if (!triangleVisible) {\n      setActiveTool('triangle')\n      setTool('mouse') // Automatically switch to mouse mode when activating triangle\n    } else if (activeTool === 'triangle') {\n      setActiveTool(null)\n    }\n  }\n\n  function toggleProtractor() {\n    setProtractorVisible(!protractorVisible)\n    if (!protractorVisible) {\n      setActiveTool('protractor')\n      setTool('mouse') // Automatically switch to mouse mode when activating protractor\n    } else if (activeTool === 'protractor') {\n      setActiveTool(null)\n    }\n  }\n\n  useEffect(() => {\n    if (!containerRef.current) return\n\n    const brd = JXG.JSXGraph.initBoard(containerRef.current, {\n      boundingbox: [-1, 8, 11, -1], \n      axis: false,\n      showNavigation: false, \n      showCopyright: false,\n      grid: true,\n      pan: { enabled: false },\n      zoom: false,\n      keepaspectratio: true\n    }) as JBoard\n    \n    boardRef.current = brd\n\n    // Givens\n    const q = brd.create('line', [[0, 7], [10, 7]], {\n      strokeColor: '#000', strokeWidth: 2,\n      name: 'q', withLabel: true, fixed: true,\n      label: { position: 'rt', offset: [10, 0] }\n    })\n    const S = brd.create('point', [5, 5], {\n      name: 'S', size: 3, strokeColor: '#000', fillColor: '#000', fixed: true, \n      label: { offset: [5, 10] }\n    })\n    const C = brd.create('point', [4.5, 3], {\n      name: 'C', size: 3, strokeColor: '#000', fillColor: '#000', fixed: true, \n      label: { offset: [5, -15] }\n    })\n    \n    givensRef.current = { q, S, C }\n\n    return () => {\n      try { \n        JXG.JSXGraph.freeBoard(brd) \n      } catch {}\n      boardRef.current = null\n      givensRef.current = null\n    }\n  }, []) // Only initialize once\n\n  // Update event handlers when rename mode changes\n  useEffect(() => {\n    const brd = boardRef.current\n    if (!brd) return\n\n    // Clean old handlers\n    brd.off('down')\n    brd.off('up')\n    brd.off('dblclick')\n\n    const CLICK_EPS = 0.12 // world units; tweak if needed\n\n    const openPrompt = (pt:any, e:any) => {\n      const currentRaw = (pt as any)._rawName || ''\n      let proposed = (window.prompt('Název bodu (např. A, B, C, A_1, A_2):', currentRaw) ?? '').trim()\n\n      if (proposed && isNameTaken(brd, proposed, (pt as any).id)) {\n        let i = 2\n        while (isNameTaken(brd, `${proposed}_${i}`, (pt as any).id)) i++\n        proposed = `${proposed}_${i}`\n      }\n\n      renamePoint(pt, proposed)\n\n      // Restore mobility\n      const arm = renameArmRef.current\n      ;(pt as any).setAttribute({ fixed: arm.wasFixed })\n\n      // Stop further board interaction from this click\n      if (e?.originalEvent) {\n        e.originalEvent.stopPropagation()\n        e.originalEvent.preventDefault()\n      }\n      brd.update()\n\n      if (!proposed) setRenameMode(false)\n\n      // Clear arm\n      renameArmRef.current = { pt:null, wasFixed:false }\n      downPosRef.current = null\n    }\n\n    // 1) DOWN: if in rename mode and on a point, FREEZE it and arm rename\n    const downHandler = (e:any) => {\n      if (uiBusyRef.current) return\n\n      // If not in rename mode, pass through to normal drawing handler\n      if (!renameModeRef.current) {\n        if (handleClickRef.current) handleClickRef.current(brd, e)\n        return\n      }\n\n      const pt = pointUnder(brd, e)\n      if (!pt) return\n\n      // Freeze now (before any drag begins)\n      const wasFixed = !!(pt as any).visProp.fixed\n      ;(pt as any).setAttribute({ fixed: true })\n\n      renameArmRef.current = { pt, wasFixed }\n      downPosRef.current = getMouseCoords(brd, e)\n\n      // Kill default drag start\n      if (e.originalEvent) {\n        e.originalEvent.stopPropagation()\n        e.originalEvent.preventDefault()\n      }\n    }\n\n    // 2) UP: if we armed a point and movement was small → open prompt\n    const upHandler = (e:any) => {\n      const arm = renameArmRef.current\n      if (!arm.pt) return\n\n      const up = getMouseCoords(brd, e)\n      const down = downPosRef.current || up\n      const moved = Math.hypot(up.x - down.x, up.y - down.y)\n\n      // Only treat as rename if it was a click, not a drag\n      if (moved <= CLICK_EPS) {\n        openPrompt(arm.pt, e)\n        return\n      }\n\n      // If it was a drag after all, restore the point & abort rename\n      const { pt } = arm\n      ;(pt as any).setAttribute({ fixed: arm.wasFixed })\n      renameArmRef.current = { pt:null, wasFixed:false }\n      downPosRef.current = null\n    }\n\n    brd.on('down', downHandler)\n    brd.on('up', upHandler)\n\n    return () => {\n      try { brd.off('down', downHandler); brd.off('up', upHandler) } catch {}\n    }\n  }, [renameMode, renamePoint])\n\n  function undoLast() {\n    const brd = boardRef.current\n    if (!brd || createdStack.length === 0) return\n    const lastId = createdStack[createdStack.length - 1]\n    const obj = lastId ? brd.objects[lastId] : undefined\n    if (obj) brd.removeObject(obj as JXG.GeometryElement)\n    setCreatedStack(s => s.slice(0, -1))\n    setFeedback('')\n  }\n\n  function clearAll() {\n    const brd = boardRef.current\n    if (!brd) return\n    const toRemove: any[] = []\n    for (const key in brd.objects) {\n      const o: any = brd.objects[key]\n      if (!o?.visProp?.fixed && o.name !== 'S' && o.name !== 'C' && o.name !== 'q') {\n        toRemove.push(o)\n      }\n    }\n    toRemove.forEach(o => brd.removeObject(o))\n    setSelected([])\n    setFeedback('')\n    setData(null)\n    setCreatedStack([])\n  }\n\n  function validateNow() {\n    const brd = boardRef.current!\n    const { q, S, C } = givensRef.current!\n\n    const pts = Object.values(brd.objects).filter((o:any) => o.elType === 'point') as any[]\n    const getRaw = (p:any) => (p?._rawName ?? p?.name ?? '')\n    const A = pts.find(p => getRaw(p) === 'A')\n    const B = pts.find(p => getRaw(p) === 'B')\n    if (!A || !B) {\n      return { \n        passed:false, \n        message:'Označte vrcholy A a B.', \n        score:0 \n      }\n    }\n\n    const AonQ = pointOnLineXY(coordsOfPoint(A), q, EPS)\n    const BonQ = pointOnLineXY(coordsOfPoint(B), q, EPS)\n    if (!(AonQ && BonQ)) {\n      return { passed:false, message:'A i B musí ležet na přímce q.', score:1 }\n    }\n\n    const AC = dist(coordsOfPoint(A), coordsOfPoint(C))\n    const BC = dist(coordsOfPoint(B), coordsOfPoint(C))\n    const isIso = Math.abs(AC - BC) < EPS\n    \n    const SA = dist(coordsOfPoint(S), coordsOfPoint(A))\n    const SB = dist(coordsOfPoint(S), coordsOfPoint(B))\n    const SC = dist(coordsOfPoint(S), coordsOfPoint(C))\n    const midOnAC = Math.abs(SA - SC) < EPS\n    const midOnBC = Math.abs(SB - SC) < EPS\n\n    if (!(isIso && (midOnAC || midOnBC))) {\n      return { \n        passed:false, \n        message:'Zkontrolujte: AC = BC a S je střed ramene.', \n        score:2 \n      }\n    }\n\n    const segs = Object.values(brd.objects).filter((o:any) => o.elType === 'segment')\n    const hasAB = segs.some(s => hasEndpoints(s, [A, B]))\n    const hasAC = segs.some(s => hasEndpoints(s, [A, C]))\n    const hasBC = segs.some(s => hasEndpoints(s, [B, C]))\n    \n    if (!(hasAB && hasAC && hasBC)) {\n      return { \n        passed:true, \n        message:'Správně, ale chybí narýsované strany.', \n        score:3 \n      }\n    }\n    \n    return { passed:true, message:'✅ Výborně! Podmínky splněny.', score:3 }\n  }\n\n  function saveConstruction() {\n    if (!boardRef.current) return\n    const validation = validateNow()\n    setData({ validation, timestamp: new Date().toISOString() })\n    setFeedback(validation.message)\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\n          <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">\n            Úloha 9: Konstrukce trojúhelníku\n          </h1>\n\n          <div className=\"bg-blue-50 border-l-4 border-blue-500 p-4 mb-4\">\n            <p className=\"text-gray-700\">\n              Sestrojte rovnoramenný trojúhelník ABC. Bod C je vrchol, S je střed ramene, AB leží na přímce q.\n            </p>\n          </div>\n\n          {/* Toolbar */}\n          <div className=\"flex flex-wrap gap-2 mb-4 p-4 bg-gray-100 rounded-lg\">\n            <button \n              onClick={() => setTool('mouse')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'mouse' ? 'bg-gray-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <path d=\"M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z\"/>\n                <path d=\"M13 13l6 6\"/>\n              </svg>\n              Myš\n            </button>\n            <button \n              onClick={() => setTool('point')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'point' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Circle size={18}/> Bod\n            </button>\n            <button \n              onClick={() => setTool('segment')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'segment' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Pencil size={18}/> Úsečka\n            </button>\n            <button \n              onClick={() => setTool('line')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'line' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Pencil size={18}/> Přímka\n            </button>\n            <button \n              onClick={() => setTool('circle')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'circle' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Circle size={18}/> Kružnice\n            </button>\n            <button \n              onClick={() => setTool('rubber')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'rubber' ? 'bg-red-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Eraser size={18}/> Guma\n            </button>\n            <button \n              onClick={() => setRenameMode(v => !v)}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                renameMode ? 'bg-teal-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n              title=\"Přejmenovat bod (klikněte na bod)\"\n            >\n              ✎ Název bodu\n            </button>\n            \n            <div className=\"border-l-2 border-gray-300 mx-2\"></div>\n            \n            <button \n              onClick={toggleRuler}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                rulerVisible ? 'bg-yellow-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Ruler size={18}/> Pravítko\n            </button>\n            <button \n              onClick={toggleTriangle}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                triangleVisible ? 'bg-purple-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Triangle size={18}/> Trojúhelník\n            </button>\n            <button \n              onClick={toggleProtractor}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                protractorVisible ? 'bg-orange-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Gauge size={18}/> Úhloměr\n            </button>\n\n            <div className=\"flex-1\"></div>\n\n            <button onClick={undoLast} className=\"px-3 py-2 rounded bg-gray-700 text-white hover:bg-gray-800 flex items-center gap-2\">\n              <RotateCcw size={18}/> Zpět\n            </button>\n            <button onClick={clearAll} className=\"px-3 py-2 rounded bg-red-500 text-white hover:bg-red-600 flex items-center gap-2\">\n              <Trash2 size={18}/> Vymazat\n            </button>\n            <button onClick={saveConstruction} className=\"px-3 py-2 rounded bg-green-600 text-white hover:bg-green-700 flex items-center gap-2\">\n              <Save size={18}/> Uložit\n            </button>\n          </div>\n\n          <div \n            ref={containerRef} \n            id=\"jxgbox\" \n            className=\"w-full border-2 border-gray-300 rounded-lg bg-white jxgbox relative\" \n            style={{ height: 500, touchAction: 'none' }} \n          >\n            {/* Draggable Ruler */}\n            {rulerVisible && (\n              <DraggableRuler\n                x={rulerPosition.x}\n                y={rulerPosition.y}\n                rotation={rulerPosition.rotation}\n                length={rulerPosition.length}\n                onPositionChange={handleRulerPositionChange}\n                isActive={activeTool === 'ruler'}\n                onActivate={() => {\n                  setActiveTool('ruler')\n                  setTool('mouse') // Automatically switch to mouse mode when clicking ruler\n                }}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n            \n            {/* Draggable Triangle */}\n            {triangleVisible && (\n              <DraggableTriangle\n                x={trianglePosition.x}\n                y={trianglePosition.y}\n                rotation={trianglePosition.rotation}\n                size={trianglePosition.size}\n                type=\"45-45-90\"\n                onPositionChange={handleTrianglePositionChange}\n                isActive={activeTool === 'triangle'}\n                onActivate={() => {\n                  setActiveTool('triangle')\n                  setTool('mouse') // Automatically switch to mouse mode when clicking triangle\n                }}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n            \n            {/* Draggable Protractor */}\n            {protractorVisible && (\n              <DraggableProtractor\n                x={protractorPosition.x}\n                y={protractorPosition.y}\n                rotation={protractorPosition.rotation}\n                size={protractorPosition.size}\n                onPositionChange={handleProtractorPositionChange}\n                isActive={activeTool === 'protractor'}\n                onActivate={() => {\n                  setActiveTool('protractor')\n                  setTool('mouse') // Automatically switch to mouse mode when clicking protractor\n                }}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n          </div>\n\n          <div className=\"mt-4 p-3 bg-blue-50 border-l-4 border-blue-500 rounded-lg\">\n            <p className=\"text-blue-700 text-sm\">\n              <strong>Nápověda:</strong> Modrý bod = přesun • Zelený bod = otočení • Oranžový bod = změna velikosti\n            </p>\n          </div>\n\n          {feedback && (\n            <div className={`mt-4 p-4 rounded-lg ${\n              feedback.includes('✅') ? 'bg-green-50 border-l-4 border-green-500' : 'bg-yellow-50 border-l-4 border-yellow-500'\n            }`}>\n              <p className=\"text-gray-800\">{feedback}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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"}