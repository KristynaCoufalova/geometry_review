{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/hooks/useBoardScale.ts"],"sourcesContent":["import { useCallback } from 'react'\n\nexport function useBoardScale(ref: React.RefObject<HTMLDivElement | null>) {\n  const get = useCallback(() => {\n    const box = ref.current?.closest('.jxgbox') as HTMLElement | null\n    if (!box) return { pxPerUnitX: 50, pxPerUnitY: 50, uniformScale: 50 } // fallback\n    \n    const { width: w, height: h } = box.getBoundingClientRect()\n    // Must match your board bounding box:\n    const left = -1, top = 8, right = 11, bottom = -1\n    const unitsX = right - left   // 12\n    const unitsY = top - bottom   // 9\n    \n    // Calculate uniform scale to maintain aspect ratio\n    const scaleX = w / unitsX\n    const scaleY = h / unitsY\n    const uniformScale = Math.min(scaleX, scaleY)\n    \n    return { \n      pxPerUnitX: uniformScale, \n      pxPerUnitY: uniformScale, \n      uniformScale,\n      boardLeft: left,\n      boardTop: top,\n      boardRight: right,\n      boardBottom: bottom,\n      boardWidth: unitsX,\n      boardHeight: unitsY\n    }\n  }, [ref])\n  \n  return get\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,SAAS,cAAc,GAA2C;IACvE,MAAM,MAAM,IAAA,oPAAW,EAAC;QACtB,MAAM,MAAM,IAAI,OAAO,EAAE,QAAQ;QACjC,IAAI,CAAC,KAAK,OAAO;YAAE,YAAY;YAAI,YAAY;YAAI,cAAc;QAAG,EAAE,WAAW;;QAEjF,MAAM,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,GAAG,IAAI,qBAAqB;QACzD,sCAAsC;QACtC,MAAM,OAAO,CAAC,GAAG,MAAM,GAAG,QAAQ,IAAI,SAAS,CAAC;QAChD,MAAM,SAAS,QAAQ,KAAO,KAAK;;QACnC,MAAM,SAAS,MAAM,OAAS,IAAI;;QAElC,mDAAmD;QACnD,MAAM,SAAS,IAAI;QACnB,MAAM,SAAS,IAAI;QACnB,MAAM,eAAe,KAAK,GAAG,CAAC,QAAQ;QAEtC,OAAO;YACL,YAAY;YACZ,YAAY;YACZ;YACA,WAAW;YACX,UAAU;YACV,YAAY;YACZ,aAAa;YACb,YAAY;YACZ,aAAa;QACf;IACF,GAAG;QAAC;KAAI;IAER,OAAO;AACT","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/DraggableRuler.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react'\nimport { useBoardScale } from '../hooks/useBoardScale'\n\ninterface DraggableRulerProps {\n  x: number\n  y: number\n  rotation: number\n  length: number\n  onPositionChange: (x: number, y: number, rotation: number, length: number) => void\n  isActive: boolean\n  onActivate: () => void\n  onUiBusyChange: (busy: boolean) => void\n}\n\nexport default function DraggableRuler({\n  x,\n  y,\n  rotation,\n  length,\n  onPositionChange,\n  isActive,\n  onActivate,\n  onUiBusyChange\n}: DraggableRulerProps) {\n  const [isDragging, setIsDragging] = useState(false)\n  const [isRotating, setIsRotating] = useState(false)\n  const [isResizing, setIsResizing] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 })\n  const [rotationStart, setRotationStart] = useState({ x: 0, y: 0, rotation: 0, initialAngle: 0 })\n  const [resizeStart, setResizeStart] = useState({ x: 0, y: 0, length: 0 })\n  const rulerRef = useRef<HTMLDivElement>(null)\n  const getScale = useBoardScale(rulerRef)\n  const { pxPerUnitX, pxPerUnitY } = getScale()\n  const pxPerUnit = Math.min(pxPerUnitX, pxPerUnitY)\n\n  // Memoized coordinate conversion functions for better performance\n  const coordinateConverter = useMemo(() => {\n    const boardLeft = -1\n    const boardTop = 8\n    const boardRight = 11\n    const boardBottom = -1\n    const boardWidth = boardRight - boardLeft // 12\n    const boardHeight = boardTop - boardBottom // 9\n    \n    return {\n      boardToScreen: (boardX: number, boardY: number) => {\n        // Get actual container dimensions\n        const container = rulerRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const screenX = ((boardX - boardLeft) / boardWidth) * containerWidth\n        const screenY = containerHeight - ((boardY - boardBottom) / boardHeight) * containerHeight\n        \n        return { x: screenX, y: screenY }\n      },\n      screenToBoard: (screenX: number, screenY: number) => {\n        const container = rulerRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const boardX = (screenX / containerWidth) * boardWidth + boardLeft\n        const boardY = boardTop - (screenY / containerHeight) * boardHeight\n        \n        return { x: boardX, y: boardY }\n      }\n    }\n  }, [])\n\n  const boardToScreen = coordinateConverter.boardToScreen\n  const screenToBoard = coordinateConverter.screenToBoard\n\n  const screenPos = boardToScreen(x, y)\n\n  // Smooth movement without grid snapping\n  const smoothPosition = (boardX: number, boardY: number) => {\n    return { x: boardX, y: boardY }\n  }\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from ruler center to mouse position\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const initialAngle = Math.atan2(e.clientY - centerY, e.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: e.clientX, y: e.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: e.clientX, y: e.clientY, length })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    }\n  }\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const touch = e.touches[0]\n    if (!touch) return\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from ruler center to touch position\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const initialAngle = Math.atan2(touch.clientY - centerY, touch.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: touch.clientX, y: touch.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: touch.clientX, y: touch.clientY, length })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    }\n  }\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDragging) {\n      const newScreenX = e.clientX - dragStart.x\n      const newScreenY = e.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, length)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      \n      // Calculate current angle from center to mouse\n      const currentAngle = Math.atan2(e.clientY - centerY, e.clientX - centerX) * (180 / Math.PI)\n      \n      // Calculate the difference from the initial angle\n      let deltaAngle = currentAngle - rotationStart.initialAngle\n      \n      // Handle angle wrapping (ensure we take the shorter path)\n      while (deltaAngle > 180) deltaAngle -= 360\n      while (deltaAngle < -180) deltaAngle += 360\n      \n      const newRotation = rotationStart.rotation + deltaAngle\n      onPositionChange(x, y, newRotation, length)\n    } else if (isResizing) {\n      const deltaX = e.clientX - resizeStart.x\n      const deltaY = e.clientY - resizeStart.y\n      \n      // Project the delta vector onto the ruler's axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const rulerAxisX = Math.cos(rotationRad)\n      const rulerAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the ruler axis\n      const projection = deltaX * rulerAxisX + deltaY * rulerAxisY\n      const deltaDistance = projection / pxPerUnit\n      \n      const newLength = Math.max(2, Math.min(10, resizeStart.length + deltaDistance))\n      onPositionChange(x, y, rotation, newLength)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, screenPos, x, y, rotation, length, onPositionChange, pxPerUnit, screenToBoard])\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    const touch = e.touches[0]\n    if (!touch) return\n    \n    if (isDragging) {\n      const newScreenX = touch.clientX - dragStart.x\n      const newScreenY = touch.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, length)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      \n      // Calculate current angle from center to touch\n      const currentAngle = Math.atan2(touch.clientY - centerY, touch.clientX - centerX) * (180 / Math.PI)\n      \n      // Calculate the difference from the initial angle\n      let deltaAngle = currentAngle - rotationStart.initialAngle\n      \n      // Handle angle wrapping (ensure we take the shorter path)\n      while (deltaAngle > 180) deltaAngle -= 360\n      while (deltaAngle < -180) deltaAngle += 360\n      \n      const newRotation = rotationStart.rotation + deltaAngle\n      onPositionChange(x, y, newRotation, length)\n    } else if (isResizing) {\n      const deltaX = touch.clientX - resizeStart.x\n      const deltaY = touch.clientY - resizeStart.y\n      \n      // Project the delta vector onto the ruler's axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const rulerAxisX = Math.cos(rotationRad)\n      const rulerAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the ruler axis\n      const projection = deltaX * rulerAxisX + deltaY * rulerAxisY\n      const deltaDistance = projection / pxPerUnit\n      \n      const newLength = Math.max(2, Math.min(10, resizeStart.length + deltaDistance))\n      onPositionChange(x, y, rotation, newLength)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, screenPos, x, y, rotation, length, onPositionChange, pxPerUnit, screenToBoard])\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  useEffect(() => {\n    if (isDragging || isRotating || isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      document.addEventListener('touchmove', handleTouchMove, { passive: false })\n      document.addEventListener('touchend', handleTouchEnd)\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.removeEventListener('touchmove', handleTouchMove, { passive: false } as any)\n        document.removeEventListener('touchend', handleTouchEnd)\n      }\n    }\n  }, [isDragging, isRotating, isResizing, handleMouseMove, handleTouchMove, handleMouseUp, handleTouchEnd])\n\n  // ResizeObserver to handle container size changes\n  useEffect(() => {\n    const el = rulerRef.current?.closest('.jxgbox')\n    if (!el) return\n    \n    const ro = new ResizeObserver(() => {\n      // Force a light refresh by updating dragStart state\n      setDragStart(s => ({ ...s }))\n    })\n    ro.observe(el)\n    return () => ro.disconnect()\n  }, [])\n\n  // Generate ruler markings based on actual length units\n  const generateMarkings = () => {\n    const markings = []\n    const rulerWidthPx = length * pxPerUnit\n    \n    // Create markings every 0.1 units, with major marks at 1.0 and medium at 0.5\n    const markInterval = 0.1 // Mark every 0.1 units\n    const numMarks = Math.floor(length / markInterval)\n    \n    for (let i = 0; i <= numMarks; i++) {\n      const unitValue = i * markInterval\n      const position = (unitValue / length) * rulerWidthPx\n      \n      const isMajor = unitValue % 1 === 0 // Major marks every 1 unit\n      const isMedium = unitValue % 0.5 === 0 && !isMajor // Medium marks every 0.5 units\n      \n      let height = 'h-1'\n      let opacity = 0.3\n      if (isMajor) {\n        height = 'h-5'\n        opacity = 0.8\n      } else if (isMedium) {\n        height = 'h-3'\n        opacity = 0.6\n      }\n      \n      markings.push(\n        <div\n          key={`mark-${i}`}\n          className={`absolute w-[1px] ${height} bg-black transition-all duration-200`}\n          style={{\n            left: position,\n            top: -1,\n            transform: 'translateX(-50%)',\n            opacity\n          }}\n        />\n      )\n      \n      // Add labels for major marks (every 1 unit)\n      if (isMajor && unitValue > 0) {\n        markings.push(\n          <div\n            key={`label-${i}`}\n            className=\"absolute text-[10px] text-slate-600 font-medium tracking-tight\"\n            style={{\n              left: position,\n              top: -16,\n              transform: 'translateX(-50%)',\n              fontFeatureSettings: '\"tnum\"'\n            }}\n          >\n            {unitValue}\n          </div>\n        )\n      }\n    }\n    \n    return markings\n  }\n\n  return (\n    <div\n      ref={rulerRef}\n      className={`absolute select-none group ${isActive ? 'z-50' : 'z-40'}`}\n      style={{\n        left: screenPos.x,\n        top: screenPos.y,\n        transform: `rotate(${rotation}deg)`,\n        transformOrigin: '0 0'\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleTouchStart}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      {/* Ruler body with enhanced SVG styling */}\n      <div className=\"relative\" style={{ pointerEvents: 'none' }}>\n        <svg\n          width={length * pxPerUnit + 100}\n          height={40}\n          className=\"absolute\"\n          style={{ left: -50, top: -10, pointerEvents: 'auto' }}\n        >\n          <defs>\n            {/* Main plastic gradient with enhanced depth and contrast */}\n            <linearGradient id=\"rulerPlasticGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.6)\" />\n              <stop offset=\"15%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.2)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(240,245,250,0.1)\" />\n              <stop offset=\"70%\" stopColor=\"rgba(200,210,220,0.15)\" />\n              <stop offset=\"85%\" stopColor=\"rgba(150,160,170,0.2)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(100,110,120,0.25)\" />\n            </linearGradient>\n\n            {/* Secondary highlight gradient for more realistic plastic look */}\n            <linearGradient id=\"rulerHighlightGradient\" x1=\"0%\" y1=\"0%\" x2=\"60%\" y2=\"40%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.8)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"60%\" stopColor=\"rgba(255,255,255,0.1)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(255,255,255,0)\" />\n            </linearGradient>\n\n            {/* Shadow gradient for depth */}\n            <linearGradient id=\"rulerShadowGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(0,0,0,0)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(0,0,0,0.05)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(0,0,0,0.15)\" />\n            </linearGradient>\n\n            {/* Enhanced drop shadow with more depth and realism */}\n            <filter id=\"rulerSoftShadow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feDropShadow dx=\"0\" dy=\"8\" stdDeviation=\"16\" floodColor=\"#000\" floodOpacity=\"0.3\" />\n              <feDropShadow dx=\"0\" dy=\"4\" stdDeviation=\"8\" floodColor=\"#000\" floodOpacity=\"0.2\" />\n              <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"4\" floodColor=\"#000\" floodOpacity=\"0.1\" />\n            </filter>\n\n            {/* Glow effect for active state */}\n            <filter id=\"rulerGlow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/>\n              </feMerge>\n            </filter>\n          </defs>\n          \n          {/* Ruler plastic look: base fill, shine gradient overlay, and stroke */}\n          <g filter={isActive ? \"url(#rulerGlow)\" : \"url(#rulerSoftShadow)\"}>\n            {/* Base fill with enhanced opacity for better depth */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"rgba(240,245,250,0.25)\" />\n            {/* Shadow gradient for depth */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"url(#rulerShadowGradient)\" />\n            {/* Main plastic gradient overlay */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"url(#rulerPlasticGradient)\" />\n            {/* Highlight gradient for realistic plastic shine */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"url(#rulerHighlightGradient)\" />\n            {/* Enhanced outline with subtle inner shadow */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\"/>\n          </g>\n          \n          {/* Enhanced ruler markings with 0.1cm precision */}\n          {(() => {\n            const markings = []\n            const rulerWidthPx = length * pxPerUnit\n            const pxPerCm = pxPerUnit\n            const maxCm = Math.floor(length)\n            \n            // Create markings every 0.1cm (1mm)\n            for (let cm = 0; cm <= maxCm; cm++) {\n              const x = 50 + cm * pxPerCm\n              const isFive = cm % 5 === 0\n              const majorLen = isFive ? 18 : 12\n              \n              // Main centimeter tick mark\n              markings.push(\n                <rect\n                  key={`cm-${cm}`}\n                  x={x - 0.5}\n                  y={10}\n                  width={1}\n                  height={majorLen}\n                  fill=\"#000\"\n                />\n              )\n              \n              // Millimeter marks (9 small ticks between each centimeter)\n              if (cm < maxCm) {\n                for (let mm = 1; mm < 10; mm++) {\n                  const xx = x + (pxPerCm * mm) / 10\n                  const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n                  \n                  markings.push(\n                    <rect\n                      key={`mm-${cm}-${mm}`}\n                      x={xx - 0.25}\n                      y={10}\n                      width={0.5}\n                      height={mmLen}\n                      fill=\"#000\"\n                      opacity=\"0.75\"\n                    />\n                  )\n                }\n              }\n            }\n            \n            // Add millimeter marks between last whole centimeter and final length value\n            if (length % 1 !== 0) {\n              const lastWholeCm = Math.floor(length)\n              const finalX = 50 + length * pxPerCm\n              \n              // Add millimeter marks from last whole cm to final length\n              for (let mm = 1; mm <= Math.floor((length - lastWholeCm) * 10); mm++) {\n                const xx = 50 + (lastWholeCm + mm / 10) * pxPerCm\n                const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n                \n                markings.push(\n                  <rect\n                    key={`mm-final-${mm}`}\n                    x={xx - 0.25}\n                    y={10}\n                    width={0.5}\n                    height={mmLen}\n                    fill=\"#000\"\n                    opacity=\"0.75\"\n                  />\n                )\n              }\n              \n              // Add final marking at exact length value\n              markings.push(\n                <rect\n                  key={`cm-final`}\n                  x={finalX - 0.5}\n                  y={10}\n                  width={1}\n                  height={12}\n                  fill=\"#000\"\n                />\n              )\n            }\n            \n            return markings\n          })()}\n        </svg>\n        \n        {/* Ruler numbers - positioned as HTML elements like in the triangle component */}\n        {(() => {\n          const pxPerCm = pxPerUnit\n          const maxCm = Math.floor(length)\n          const numbers = []\n          \n          for (let cm = 1; cm <= maxCm; cm++) {\n            const x = cm * pxPerCm\n            const isFive = cm % 5 === 0\n            \n            numbers.push(\n              <div\n                key={`ruler-number-${cm}`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: x, // Direct positioning without SVG offset\n                  top: -25, // Position above the ruler\n                  transform: 'translateX(-50%)',\n                  fontWeight: isFive ? 'bold' : 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {cm}\n              </div>\n            )\n          }\n\n          // Add final number at exact length value (only if not a whole number)\n          if (length % 1 !== 0) {\n            const finalX = length * pxPerCm\n            numbers.push(\n              <div\n                key={`ruler-number-final`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: finalX, // Direct positioning without SVG offset\n                  top: -25, // Position above the ruler\n                  transform: 'translateX(-50%)',\n                  fontWeight: 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {length.toFixed(1)}\n              </div>\n            )\n          }\n          \n          return numbers\n        })()}\n        \n        {/* Rotation handle - enhanced styling to match triangle */}\n        <div\n          className=\"rotation-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-emerald-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like triangle\n            left: length * pxPerUnit - 2,\n            top: 2,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 20\n          }}\n          title=\"Otočit pravítko\"\n        >\n          <div className=\"w-2 h-2 bg-emerald-500 rounded-full\" />\n        </div>\n        \n        {/* Resize handle - enhanced styling to match triangle */}\n        <div\n          className=\"resize-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-amber-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like triangle\n            left: length * pxPerUnit - 2,\n            top: 14,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 15\n          }}\n          title=\"Změnit délku\"\n        >\n          <div className=\"w-2 h-2 bg-amber-500 rounded-full\" />\n        </div>\n      </div>\n      \n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 950, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/DraggableTriangle.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react'\nimport { useBoardScale } from '../hooks/useBoardScale'\n\ninterface DraggableTriangleProps {\n  x: number\n  y: number\n  rotation: number\n  size: number\n  type: '45-45-90' | '30-60-90'\n  onPositionChange: (x: number, y: number, rotation: number, size: number) => void\n  isActive: boolean\n  onActivate: () => void\n  onUiBusyChange: (busy: boolean) => void\n}\n\nexport default function DraggableTriangle({\n  x,\n  y,\n  rotation,\n  size,\n  type,\n  onPositionChange,\n  isActive,\n  onActivate,\n  onUiBusyChange\n}: DraggableTriangleProps) {\n  const [isDragging, setIsDragging] = useState(false)\n  const [isRotating, setIsRotating] = useState(false)\n  const [isResizing, setIsResizing] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 })\n  const [rotationStart, setRotationStart] = useState({ x: 0, y: 0, rotation: 0, initialAngle: 0 })\n  const [resizeStart, setResizeStart] = useState({ x: 0, y: 0, size: 0 })\n  const triangleRef = useRef<HTMLDivElement>(null)\n  const getScale = useBoardScale(triangleRef)\n  const { pxPerUnitX, pxPerUnitY } = getScale()\n  const pxPerUnit = Math.min(pxPerUnitX, pxPerUnitY)\n\n  // Memoized coordinate conversion functions for better performance\n  const coordinateConverter = useMemo(() => {\n    const boardLeft = -1\n    const boardTop = 8\n    const boardRight = 11\n    const boardBottom = -1\n    const boardWidth = boardRight - boardLeft // 12\n    const boardHeight = boardTop - boardBottom // 9\n    \n    return {\n      boardToScreen: (boardX: number, boardY: number) => {\n        // Get actual container dimensions\n        const container = triangleRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const screenX = ((boardX - boardLeft) / boardWidth) * containerWidth\n        const screenY = containerHeight - ((boardY - boardBottom) / boardHeight) * containerHeight\n        \n        return { x: screenX, y: screenY }\n      },\n      screenToBoard: (screenX: number, screenY: number) => {\n        const container = triangleRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const boardX = (screenX / containerWidth) * boardWidth + boardLeft\n        const boardY = boardTop - (screenY / containerHeight) * boardHeight\n        \n        return { x: boardX, y: boardY }\n      }\n    }\n  }, [])\n\n  const boardToScreen = coordinateConverter.boardToScreen\n  const screenToBoard = coordinateConverter.screenToBoard\n\n  const screenPos = boardToScreen(x, y)\n\n  // Smooth movement without grid snapping\n  const smoothPosition = (boardX: number, boardY: number) => {\n    return { x: boardX, y: boardY }\n  }\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from triangle center to mouse position\n      const currentScreenPos = boardToScreen(x, y)\n      const centerX = currentScreenPos.x\n      const centerY = currentScreenPos.y\n      const initialAngle = Math.atan2(e.clientY - centerY, e.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: e.clientX, y: e.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: e.clientX, y: e.clientY, size })\n    } else if (target.classList.contains('drag-handle') || target.closest('.drag-handle')) {\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    } else {\n      // Allow dragging from anywhere on the triangle\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    }\n  }\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const touch = e.touches[0]\n    if (!touch) return\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from triangle center to touch position\n      const currentScreenPos = boardToScreen(x, y)\n      const centerX = currentScreenPos.x\n      const centerY = currentScreenPos.y\n      const initialAngle = Math.atan2(touch.clientY - centerY, touch.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: touch.clientX, y: touch.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: touch.clientX, y: touch.clientY, size })\n    } else if (target.classList.contains('drag-handle') || target.closest('.drag-handle')) {\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    } else {\n      // Allow dragging from anywhere on the triangle\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    }\n  }\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDragging) {\n      const newScreenX = e.clientX - dragStart.x\n      const newScreenY = e.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      // Get the current screen position of the triangle center\n      const currentScreenPos = boardToScreen(x, y)\n      const centerX = currentScreenPos.x\n      const centerY = currentScreenPos.y\n      \n      // Calculate current angle from center to mouse\n      const currentAngle = Math.atan2(e.clientY - centerY, e.clientX - centerX) * (180 / Math.PI)\n      \n      // Calculate the difference from the initial angle\n      let deltaAngle = currentAngle - rotationStart.initialAngle\n      \n      // Handle angle wrapping (ensure we take the shorter path)\n      while (deltaAngle > 180) deltaAngle -= 360\n      while (deltaAngle < -180) deltaAngle += 360\n      \n      const newRotation = rotationStart.rotation + deltaAngle\n      onPositionChange(x, y, newRotation, size)\n    } else if (isResizing) {\n      const deltaX = e.clientX - resizeStart.x\n      const deltaY = e.clientY - resizeStart.y\n      \n      // Project the delta vector onto the triangle's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const triangleAxisX = Math.cos(rotationRad)\n      const triangleAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the triangle axis\n      const projection = deltaX * triangleAxisX + deltaY * triangleAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const proposedSize = resizeStart.size + deltaSize\n      \n      // Calculate height based on triangle type\n      const height = type === '45-45-90' ? proposedSize : proposedSize * Math.sqrt(3) / 2\n      \n      // Enforce height constraints: minimum 3cm, maximum 10cm\n      let constrainedSize = proposedSize\n      if (height < 3) {\n        // Calculate size needed for 3cm height\n        constrainedSize = type === '45-45-90' ? 3 : 3 / (Math.sqrt(3) / 2)\n      } else if (height > 10) {\n        // Calculate size needed for 10cm height\n        constrainedSize = type === '45-45-90' ? 10 : 10 / (Math.sqrt(3) / 2)\n      }\n      \n      onPositionChange(x, y, rotation, constrainedSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, x, y, rotation, size, type, onPositionChange, screenToBoard, boardToScreen])\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    const touch = e.touches[0]\n    if (!touch) return\n    \n    if (isDragging) {\n      const newScreenX = touch.clientX - dragStart.x\n      const newScreenY = touch.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      // Get the current screen position of the triangle center\n      const currentScreenPos = boardToScreen(x, y)\n      const centerX = currentScreenPos.x\n      const centerY = currentScreenPos.y\n      \n      // Calculate current angle from center to touch\n      const currentAngle = Math.atan2(touch.clientY - centerY, touch.clientX - centerX) * (180 / Math.PI)\n      \n      // Calculate the difference from the initial angle\n      let deltaAngle = currentAngle - rotationStart.initialAngle\n      \n      // Handle angle wrapping (ensure we take the shorter path)\n      while (deltaAngle > 180) deltaAngle -= 360\n      while (deltaAngle < -180) deltaAngle += 360\n      \n      const newRotation = rotationStart.rotation + deltaAngle\n      onPositionChange(x, y, newRotation, size)\n    } else if (isResizing) {\n      const deltaX = touch.clientX - resizeStart.x\n      const deltaY = touch.clientY - resizeStart.y\n      \n      // Project the delta vector onto the triangle's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const triangleAxisX = Math.cos(rotationRad)\n      const triangleAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the triangle axis\n      const projection = deltaX * triangleAxisX + deltaY * triangleAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const proposedSize = resizeStart.size + deltaSize\n      \n      // Calculate height based on triangle type\n      const height = type === '45-45-90' ? proposedSize : proposedSize * Math.sqrt(3) / 2\n      \n      // Enforce height constraints: minimum 3cm, maximum 10cm\n      let constrainedSize = proposedSize\n      if (height < 3) {\n        // Calculate size needed for 3cm height\n        constrainedSize = type === '45-45-90' ? 3 : 3 / (Math.sqrt(3) / 2)\n      } else if (height > 10) {\n        // Calculate size needed for 10cm height\n        constrainedSize = type === '45-45-90' ? 10 : 10 / (Math.sqrt(3) / 2)\n      }\n      \n      onPositionChange(x, y, rotation, constrainedSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, x, y, rotation, size, type, onPositionChange, screenToBoard, boardToScreen])\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  useEffect(() => {\n    if (isDragging || isRotating || isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      document.addEventListener('touchmove', handleTouchMove, { passive: false })\n      document.addEventListener('touchend', handleTouchEnd)\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.removeEventListener('touchmove', handleTouchMove, { passive: false } as any)\n        document.removeEventListener('touchend', handleTouchEnd)\n      }\n    }\n  }, [isDragging, isRotating, isResizing, handleMouseMove, handleTouchMove, handleMouseUp, handleTouchEnd])\n\n  // ResizeObserver to handle container size changes\n  useEffect(() => {\n    const el = triangleRef.current?.closest('.jxgbox')\n    if (!el) return\n    \n    const ro = new ResizeObserver(() => {\n      // Force a light refresh by updating dragStart state\n      setDragStart(s => ({ ...s }))\n    })\n    ro.observe(el)\n    return () => ro.disconnect()\n  }, [])\n\n  // Generate triangle points based on type\n  const getTrianglePoints = () => {\n    const screenSize = size * pxPerUnit\n    const halfSize = screenSize / 2\n    \n    if (type === '45-45-90') {\n      // Right triangle with 45-45-90 angles\n      return [\n        { x: 0, y: 0 },           // Right angle vertex\n        { x: screenSize, y: 0 },  // Bottom right\n        { x: 0, y: screenSize }   // Top left\n      ]\n    } else {\n      // Right triangle with 30-60-90 angles\n      const height = screenSize * Math.sqrt(3) / 2\n      return [\n        { x: 0, y: 0 },           // Right angle vertex\n        { x: screenSize, y: 0 },  // Bottom right\n        { x: 0, y: height }       // Top left (60° angle)\n      ]\n    }\n  }\n\n  // Generate enhanced ruler markings as SVG elements matching the detailed specifications\n  const renderRulerMarkingsSvg = () => {\n    const screenSize = size * pxPerUnit\n    const pxPerCm = pxPerUnit // 1 cm = pxPerUnit pixels\n    const verticalLength = type === '45-45-90' ? screenSize : (screenSize * Math.sqrt(3)) / 2\n    const maxCm = Math.min(16, Math.floor(size)) // Use floor to stop at or before actual size\n    const maxVerticalCm = Math.min(16, Math.floor(type === '45-45-90' ? size : size * Math.sqrt(3) / 2))\n\n    // Horizontal ruler (bottom edge) - 0 to maxCm\n    const horizontalTicks: React.ReactNode[] = []\n    for (let cm = 0; cm <= maxCm; cm++) {\n      const x = cm * pxPerCm\n      const isFive = cm % 5 === 0\n      const majorLen = isFive ? 18 : 12 // Length of tick mark\n      \n      // Main centimeter tick mark\n      horizontalTicks.push(\n        <rect\n          key={`h-cm-${cm}`}\n          x={x - 0.75}\n          y={0}\n          width={1.5}\n          height={majorLen}\n          fill=\"#000\"\n        />\n      )\n      \n      // Number labels will be handled separately as HTML elements\n      \n      // Millimeter marks (9 small ticks between each centimeter)\n      if (cm < maxCm) {\n        for (let mm = 1; mm < 10; mm++) {\n          const xx = x + (pxPerCm * mm) / 10\n          const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n          \n          horizontalTicks.push(\n            <rect\n              key={`h-mm-${cm}-${mm}`}\n              x={xx - 0.5}\n              y={0}\n              width={1}\n              height={mmLen}\n              fill=\"#000\"\n              opacity=\"0.75\"\n            />\n          )\n        }\n      }\n    }\n\n    // Add millimeter marks between last whole centimeter and final size value\n    if (size % 1 !== 0) {\n      const lastWholeCm = Math.floor(size)\n      const finalX = size * pxPerCm\n      \n      // Add millimeter marks from last whole cm to final size\n      for (let mm = 1; mm <= Math.floor((size - lastWholeCm) * 10); mm++) {\n        const xx = (lastWholeCm + mm / 10) * pxPerCm\n        const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n        \n        horizontalTicks.push(\n          <rect\n            key={`h-mm-final-${mm}`}\n            x={xx - 0.5}\n            y={0}\n            width={1}\n            height={mmLen}\n            fill=\"#000\"\n            opacity=\"0.75\"\n          />\n        )\n      }\n      \n      // Add final marking at exact size value\n      horizontalTicks.push(\n        <rect\n          key={`h-cm-final`}\n          x={finalX - 0.75}\n          y={0}\n          width={1.5}\n          height={12}\n          fill=\"#000\"\n        />\n      )\n    }\n\n    // Vertical ruler (left edge) - 0 to maxVerticalCm\n    const verticalTicks: React.ReactNode[] = []\n    for (let cm = 0; cm <= maxVerticalCm; cm++) {\n      const y = cm * pxPerCm\n      const isFive = cm % 5 === 0\n      const majorLen = isFive ? 18 : 12 // Length of tick mark\n      \n      // Main centimeter tick mark (extends LEFT from the edge)\n      verticalTicks.push(\n        <rect\n          key={`v-cm-${cm}`}\n          x={-majorLen}\n          y={y - 0.75}\n          width={majorLen}\n          height={1.5}\n          fill=\"#000\"\n        />\n      )\n      \n      // No number labels on the vertical ruler (left side)\n      \n      // Millimeter marks (9 small ticks between each centimeter)\n      if (cm < maxVerticalCm) {\n        for (let mm = 1; mm < 10; mm++) {\n          const yy = y + (pxPerCm * mm) / 10\n          const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n          \n          verticalTicks.push(\n            <rect\n              key={`v-mm-${cm}-${mm}`}\n              x={-mmLen}\n              y={yy - 0.5}\n              width={mmLen}\n              height={1}\n              fill=\"#000\"\n              opacity=\"0.75\"\n            />\n          )\n        }\n      }\n    }\n\n    // Add millimeter marks between last whole centimeter and final height value\n    const actualHeight = type === '45-45-90' ? size : size * Math.sqrt(3) / 2\n    if (actualHeight % 1 !== 0) {\n      const lastWholeCm = Math.floor(actualHeight)\n      const finalY = actualHeight * pxPerCm\n      \n      // Add millimeter marks from last whole cm to final height\n      for (let mm = 1; mm <= Math.floor((actualHeight - lastWholeCm) * 10); mm++) {\n        const yy = (lastWholeCm + mm / 10) * pxPerCm\n        const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n        \n        verticalTicks.push(\n          <rect\n            key={`v-mm-final-${mm}`}\n            x={-mmLen}\n            y={yy - 0.5}\n            width={mmLen}\n            height={1}\n            fill=\"#000\"\n            opacity=\"0.75\"\n          />\n        )\n      }\n      \n      // Add final marking at exact height value\n      verticalTicks.push(\n        <rect\n          key={`v-cm-final`}\n          x={-12}\n          y={finalY - 0.75}\n          width={12}\n          height={1.5}\n          fill=\"#000\"\n        />\n      )\n    }\n\n    return (\n      <g>\n        {/* Origin label with \"0\" */}\n        <text x={4} y={-8} fontSize=\"11\" fontFamily=\"Arial, sans-serif\" fontWeight=\"bold\" fill=\"#000\">0</text>\n        \n        {/* Bottom edge ruler (horizontal) */}\n        <g transform={`translate(${points[0]?.x || 0},${points[0]?.y || 0})`}>\n          {horizontalTicks}\n        </g>\n        \n        {/* Left edge ruler (vertical) */}\n        <g transform={`translate(${points[0]?.x || 0},${points[0]?.y || 0})`}>\n          {verticalTicks}\n        </g>\n      </g>\n    )\n  }\n\n  const points = getTrianglePoints()\n  const pathData = `M ${points[0]?.x || 0} ${points[0]?.y || 0} L ${points[1]?.x || 0} ${points[1]?.y || 0} L ${points[2]?.x || 0} ${points[2]?.y || 0} Z`\n\n  // Calculate triangle dimensions for dynamic handle positioning\n  const basePx = size * pxPerUnit\n  const heightPx = type === '45-45-90' ? basePx : basePx * Math.sqrt(3) / 2\n  \n  // Calculate hypotenuse midpoint (relative to SVG origin at 50, 50)\n  const hypMidX = basePx / 2\n  const hypMidY = heightPx / 2\n\n  // Derived geometry for inner triangular cutouts (proportional to size)\n  const baseLength = size * pxPerUnit\n  const verticalLength = type === '45-45-90' ? baseLength : (baseLength * Math.sqrt(3)) / 2\n  // Diagonal unit direction (ux, uy) from right-angle vertex and its origin point\n  const origin = { x: points[0]?.x || 0, y: points[0]?.y || 0 }\n  const mDiag = verticalLength / baseLength\n  const len = Math.sqrt(1 + mDiag * mDiag)\n  const ux = 1 / len\n  const uy = mDiag / len\n  // Reflect a point across the diagonal line through origin with unit direction (ux, uy)\n  const reflectAcrossDiagonal = (px: number, py: number) => {\n    const rx = px - origin.x\n    const ry = py - origin.y\n    const dot = rx * ux + ry * uy\n    const rpx = 2 * dot * ux - rx\n    const rpy = 2 * dot * uy - ry\n    return { x: origin.x + rpx, y: origin.y + rpy }\n  }\n  \n  // Construct cutouts similar to the two half-triangles split by the diagonal\n  // Unit normal to diagonal\n  const nx = -uy\n  const ny = ux\n  // Hypotenuse unit direction (from top-left to bottom-right corner)\n  const hypX = baseLength\n  const hypY = -verticalLength\n  const hypLen = Math.hypot(hypX, hypY) || 1\n  const hx = hypX / hypLen\n  const hy = hypY / hypLen\n  // Length of diagonal segment OM (origin to hypotenuse midpoint)\n  const OMlen = 0.5 * Math.hypot(baseLength, verticalLength)\n  // Choose base length along diagonal as a fraction of OM\n  const L = OMlen * 0.7\n  // Position along diagonal from origin and small gap offset\n  const tAlong = OMlen * 0.55\n  const gap = Math.max(-11, -baseLength * 0.12) // increased perpendicular offset from diagonal; no rotation or along-diagonal change\n\n  // First cutout (similar to triangle O-P1-M): base parallel to diagonal, other sides // x-axis and // hypotenuse\n  const c1x = origin.x + ux * tAlong + nx * gap\n  const c1y = origin.y + uy * tAlong + ny * gap\n  const a1 = { x: c1x - (L / 2) * ux, y: c1y - (L / 2) * uy }\n  const b1 = { x: c1x + (L / 2) * ux, y: c1y + (L / 2) * uy }\n  // Apex c1 is intersection of: line through a1 parallel to x-axis and line through b1 parallel to hypotenuse\n  const s1 = (a1.y - b1.y) / (hy || 1e-6)\n  const c1 = { x: b1.x + s1 * hx, y: b1.y + s1 * hy }\n  const cut1 = `M ${a1.x} ${a1.y} L ${b1.x} ${b1.y} L ${c1.x} ${c1.y} Z`\n\n  // Second cutout is mirror image of the first across the diagonal (perfect symmetry)\n  const a2r = reflectAcrossDiagonal(a1.x, a1.y)\n  const b2r = reflectAcrossDiagonal(b1.x, b1.y)\n  const c2r = reflectAcrossDiagonal(c1.x, c1.y)\n  const cut2 = `M ${a2r.x} ${a2r.y} L ${b2r.x} ${b2r.y} L ${c2r.x} ${c2r.y} Z`\n\n  // Diagonal from right-angle vertex to the midpoint of the hypotenuse\n  const hypMid = {\n    x: ((points[1]?.x || 0) + (points[2]?.x || 0)) / 2,\n    y: ((points[1]?.y || 0) + (points[2]?.y || 0)) / 2\n  }\n\n  return (\n    <div\n      ref={triangleRef}\n      className={`absolute select-none group ${isActive ? 'z-50' : 'z-40'}`}\n      style={{\n        left: screenPos.x,\n        top: screenPos.y,\n        transform: `rotate(${rotation}deg)`,\n        transformOrigin: '0 0',\n        // Debug: add background to see hover area\n        backgroundColor: isHovering ? 'rgba(255, 0, 0, 0.1)' : 'transparent'\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleTouchStart}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      {/* Triangle SVG */}\n      <div className=\"relative\" style={{ pointerEvents: 'auto' }}>\n        <svg\n          width={size * pxPerUnit + 100}\n          height={type === '45-45-90' ? size * pxPerUnit + 100 : size * pxPerUnit * Math.sqrt(3) / 2 + 100}\n          className=\"absolute\"\n          style={{ left: -50, top: -50, pointerEvents: 'auto' }}\n        >\n          <defs>\n            {/* Main plastic gradient with enhanced depth and contrast */}\n            <linearGradient id={`plasticGradient-${type}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.6)\" />\n              <stop offset=\"15%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.2)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(240,245,250,0.1)\" />\n              <stop offset=\"70%\" stopColor=\"rgba(200,210,220,0.15)\" />\n              <stop offset=\"85%\" stopColor=\"rgba(150,160,170,0.2)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(100,110,120,0.25)\" />\n            </linearGradient>\n\n            {/* Secondary highlight gradient for more realistic plastic look */}\n            <linearGradient id={`highlightGradient-${type}`} x1=\"0%\" y1=\"0%\" x2=\"60%\" y2=\"40%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.8)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"60%\" stopColor=\"rgba(255,255,255,0.1)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(255,255,255,0)\" />\n            </linearGradient>\n\n            {/* Shadow gradient for depth */}\n            <linearGradient id={`shadowGradient-${type}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(0,0,0,0)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(0,0,0,0.05)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(0,0,0,0.15)\" />\n            </linearGradient>\n\n            {/* Enhanced drop shadow with more depth and realism */}\n            <filter id={`softShadow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feDropShadow dx=\"0\" dy=\"8\" stdDeviation=\"16\" floodColor=\"#000\" floodOpacity=\"0.3\" />\n              <feDropShadow dx=\"0\" dy=\"4\" stdDeviation=\"8\" floodColor=\"#000\" floodOpacity=\"0.2\" />\n              <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"4\" floodColor=\"#000\" floodOpacity=\"0.1\" />\n            </filter>\n\n            {/* Enhanced inner shadow for cutout edges with more depth */}\n            <filter id={`innerShadow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feFlood floodColor=\"#000\" floodOpacity=\"0.2\" result=\"flood\"/>\n              <feComposite in=\"flood\" in2=\"SourceGraphic\" operator=\"in\" result=\"composite\"/>\n              <feGaussianBlur in=\"composite\" stdDeviation=\"3\" result=\"blur\"/>\n              <feOffset in=\"blur\" dx=\"2\" dy=\"2\" result=\"offset\"/>\n              <feComposite in=\"offset\" in2=\"SourceGraphic\" operator=\"over\"/>\n            </filter>\n\n            {/* Additional depth shadow for inner cutouts */}\n            <filter id={`deepInnerShadow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feFlood floodColor=\"#000\" floodOpacity=\"0.15\" result=\"flood\"/>\n              <feComposite in=\"flood\" in2=\"SourceGraphic\" operator=\"in\" result=\"composite\"/>\n              <feGaussianBlur in=\"composite\" stdDeviation=\"5\" result=\"blur\"/>\n              <feOffset in=\"blur\" dx=\"3\" dy=\"3\" result=\"offset\"/>\n              <feComposite in=\"offset\" in2=\"SourceGraphic\" operator=\"over\"/>\n            </filter>\n            \n            {/* Glow effect for active state */}\n            <filter id={`glow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/>\n              </feMerge>\n            </filter>\n\n            {/* Create mask for main triangle with inner cutouts as holes */}\n            <mask id={`triangle-mask-${type}`}>\n              {/* Reveal main triangle */}\n              <path d={pathData} fill=\"white\" />\n              {/* Hide inner similar triangles to make them transparent */}\n              <path d={cut1} fill=\"black\" />\n              <path d={cut2} fill=\"black\" />\n            </mask>\n          </defs>\n          \n          {/* Triangle plastic look: base fill, shine gradient overlay, and stroke */}\n          <g filter={isActive ? `url(#glow-${type})` : `url(#softShadow-${type})`}>\n            {/* Base fill with enhanced opacity for better depth */}\n            <path d={pathData} fill=\"rgba(240,245,250,0.25)\" mask={`url(#triangle-mask-${type})`} />\n            {/* Shadow gradient for depth */}\n            <path d={pathData} fill={`url(#shadowGradient-${type})`} mask={`url(#triangle-mask-${type})`} />\n            {/* Main plastic gradient overlay */}\n            <path d={pathData} fill={`url(#plasticGradient-${type})`} mask={`url(#triangle-mask-${type})`} />\n            {/* Highlight gradient for realistic plastic shine */}\n            <path d={pathData} fill={`url(#highlightGradient-${type})`} mask={`url(#triangle-mask-${type})`} />\n            {/* Enhanced outline with subtle inner shadow */}\n            <path d={pathData} fill=\"none\" stroke=\"#000000\" strokeWidth=\"2.5\"/>\n          </g>\n\n          {/* Internal diagonal (median to hypotenuse) */}\n          <line\n            x1={origin.x}\n            y1={origin.y}\n            x2={hypMid.x}\n            y2={hypMid.y}\n            stroke=\"#000000\"\n            strokeWidth=\"1.2\"\n            strokeDasharray=\"4 3\"\n          />\n          \n          {/* Right angle indicator with 90° label - properly aligned */}\n          <path\n            d={`M ${(points[0]?.x || 0) + 6} ${points[0]?.y || 0} L ${(points[0]?.x || 0) + 6} ${(points[0]?.y || 0) + 6} L ${points[0]?.x || 0} ${(points[0]?.y || 0) + 6}`}\n            fill=\"none\"\n            stroke=\"#000000\"\n            strokeWidth=\"1.2\"\n            strokeLinecap=\"round\"\n          />\n          \n          {/* 90° text label - properly positioned */}\n          <text\n            x={(points[0]?.x || 0) + 10}\n            y={(points[0]?.y || 0) + 3}\n            fontSize=\"8\"\n            fill=\"#000000\"\n            fontFamily=\"Arial, sans-serif\"\n            fontWeight=\"bold\"\n          >\n            90°\n          </text>\n\n          {/* Inner similar triangles as transparent holes: stroke only with enhanced inner shadows */}\n          <path d={cut1} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#deepInnerShadow-${type})`} />\n          <path d={cut2} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#deepInnerShadow-${type})`} />\n          {/* Additional inner shadow layer for more depth */}\n          <path d={cut1} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#innerShadow-${type})`} />\n          <path d={cut2} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#innerShadow-${type})`} />\n          {/* SVG ruler markings glued to the right-angle corner */}\n          {renderRulerMarkingsSvg()}\n        </svg>\n        \n        {/* Ruler numbers - positioned as HTML elements like in the ruler component */}\n        {(() => {\n          const screenSize = size * pxPerUnit\n          const pxPerCm = pxPerUnit\n          const maxCm = Math.min(16, Math.floor(size)) // Use floor to stop at or before actual size\n          const numbers = []\n          \n          for (let cm = 1; cm <= maxCm; cm++) {\n            const x = cm * pxPerCm\n            const isFive = cm % 5 === 0\n            \n            numbers.push(\n              <div\n                key={`h-number-${cm}`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: x - 50, // Account for SVG container offset\n                  top: -65, // Position well above the triangle\n                  transform: 'translateX(-50%)',\n                  fontWeight: isFive ? 'bold' : 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {cm}\n              </div>\n            )\n          }\n\n          // Add final number at exact size value (only if not a whole number)\n          if (size % 1 !== 0) {\n            const finalX = size * pxPerCm\n            numbers.push(\n              <div\n                key={`h-number-final`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: finalX - 50, // Account for SVG container offset\n                  top: -65, // Position well above the triangle\n                  transform: 'translateX(-50%)',\n                  fontWeight: 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {size.toFixed(1)}\n              </div>\n            )\n          }\n          \n          return numbers\n        })()}\n        \n        {/* Rotation handle - positioned relative to hypotenuse midpoint */}\n        <div\n          className=\"rotation-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-emerald-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Temporarily only show on hover\n            left: `${1.35 * hypMidX - 50 - basePx * 0.2}px`,\n            top: `${1.35 * hypMidY - 50 - heightPx * 0.2}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 20\n          }}\n          title=\"Otočit trojúhelník\"\n        >\n          <div className=\"w-2 h-2 bg-emerald-500 rounded-full\" />\n        </div>\n        \n        {/* Resize handle - positioned relative to hypotenuse midpoint */}\n        <div\n          className=\"resize-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-amber-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Temporarily only show on hover\n            left: `${0.6 * hypMidX - 50 + basePx * 0.2}px`,\n            top: `${0.6 * hypMidY - 50 + heightPx * 0.2}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 15\n          }}\n          title=\"Změnit velikost\"\n        >\n          <div className=\"w-2 h-2 bg-amber-500 rounded-full\" />\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2302, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/DraggableProtractor.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useRef, useEffect, useCallback } from 'react'\nimport { useBoardScale } from '../hooks/useBoardScale'\n\ninterface DraggableProtractorProps {\n  x: number\n  y: number\n  rotation: number\n  size: number\n  onPositionChange: (x: number, y: number, rotation: number, size: number) => void\n  isActive: boolean\n  onActivate: () => void\n  onUiBusyChange: (busy: boolean) => void\n}\n\nexport default function DraggableProtractor({\n  x,\n  y,\n  rotation,\n  size,\n  onPositionChange,\n  isActive,\n  onActivate,\n  onUiBusyChange\n}: DraggableProtractorProps) {\n  const [isDragging, setIsDragging] = useState(false)\n  const [isRotating, setIsRotating] = useState(false)\n  const [isResizing, setIsResizing] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 })\n  const [rotationStart, setRotationStart] = useState({ x: 0, y: 0, rotation: 0 })\n  const [resizeStart, setResizeStart] = useState({ x: 0, y: 0, size: 0 })\n  const protractorRef = useRef<HTMLDivElement>(null)\n  const getScale = useBoardScale(protractorRef)\n  const { pxPerUnitX, pxPerUnitY } = getScale()\n  const pxPerUnit = Math.min(pxPerUnitX, pxPerUnitY)\n\n  // Convert board coordinates to screen coordinates\n  const boardToScreen = (boardX: number, boardY: number) => {\n    // Board bounding box: [-1, 8, 11, -1] (left, top, right, bottom)\n    const boardLeft = -1\n    const boardTop = 8\n    const boardRight = 11\n    const boardBottom = -1\n    const boardWidth = boardRight - boardLeft // 12\n    const boardHeight = boardTop - boardBottom // 9\n    \n    // Get actual container dimensions\n    const container = protractorRef.current?.closest('.jxgbox') as HTMLElement\n    const containerWidth = container?.offsetWidth || 800\n    const containerHeight = container?.offsetHeight || 500\n    \n    const screenX = ((boardX - boardLeft) / boardWidth) * containerWidth\n    const screenY = containerHeight - ((boardY - boardBottom) / boardHeight) * containerHeight\n    \n    return { x: screenX, y: screenY }\n  }\n\n  const screenToBoard = (screenX: number, screenY: number) => {\n    const boardLeft = -1\n    const boardTop = 8\n    const boardRight = 11\n    const boardBottom = -1\n    const boardWidth = boardRight - boardLeft\n    const boardHeight = boardTop - boardBottom\n    \n    const container = protractorRef.current?.closest('.jxgbox') as HTMLElement\n    const containerWidth = container?.offsetWidth || 800\n    const containerHeight = container?.offsetHeight || 500\n    \n    const boardX = (screenX / containerWidth) * boardWidth + boardLeft\n    const boardY = boardTop - (screenY / containerHeight) * boardHeight\n    \n    return { x: boardX, y: boardY }\n  }\n\n  const screenPos = boardToScreen(x, y)\n\n  // Smooth movement without grid snapping\n  const smoothPosition = (boardX: number, boardY: number) => {\n    return { x: boardX, y: boardY }\n  }\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle')) {\n      setIsRotating(true)\n      setRotationStart({ x: e.clientX, y: e.clientY, rotation })\n    } else if (target.classList.contains('resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: e.clientX, y: e.clientY, size })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    }\n  }\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const touch = e.touches[0]\n    if (!touch) return\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle')) {\n      setIsRotating(true)\n      setRotationStart({ x: touch.clientX, y: touch.clientY, rotation })\n    } else if (target.classList.contains('resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: touch.clientX, y: touch.clientY, size })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    }\n  }\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDragging) {\n      const newScreenX = e.clientX - dragStart.x\n      const newScreenY = e.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const deltaX = e.clientX - centerX\n      const deltaY = e.clientY - centerY\n      const aRaw = Math.atan2(deltaY, deltaX) * 180 / Math.PI\n      const a360 = (aRaw + 360) % 360\n      const snapped = Math.round(a360 / 5) * 5\n      onPositionChange(x, y, snapped, size)\n    } else if (isResizing) {\n      const deltaX = e.clientX - resizeStart.x\n      const deltaY = e.clientY - resizeStart.y\n      \n      // Project the delta vector onto the protractor's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const protractorAxisX = Math.cos(rotationRad)\n      const protractorAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the protractor axis\n      const projection = deltaX * protractorAxisX + deltaY * protractorAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const newSize = Math.max(2, Math.min(6, resizeStart.size + deltaSize))\n      onPositionChange(x, y, rotation, newSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, screenPos, x, y, rotation, size, onPositionChange])\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    const touch = e.touches[0]\n    if (!touch) return\n    \n    if (isDragging) {\n      const newScreenX = touch.clientX - dragStart.x\n      const newScreenY = touch.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const deltaX = touch.clientX - centerX\n      const deltaY = touch.clientY - centerY\n      const aRaw = Math.atan2(deltaY, deltaX) * 180 / Math.PI\n      const a360 = (aRaw + 360) % 360\n      const snapped = Math.round(a360 / 5) * 5\n      onPositionChange(x, y, snapped, size)\n    } else if (isResizing) {\n      const deltaX = touch.clientX - resizeStart.x\n      const deltaY = touch.clientY - resizeStart.y\n      \n      // Project the delta vector onto the protractor's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const protractorAxisX = Math.cos(rotationRad)\n      const protractorAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the protractor axis\n      const projection = deltaX * protractorAxisX + deltaY * protractorAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const newSize = Math.max(2, Math.min(6, resizeStart.size + deltaSize))\n      onPositionChange(x, y, rotation, newSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, screenPos, x, y, rotation, size, onPositionChange])\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  useEffect(() => {\n    if (isDragging || isRotating || isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      document.addEventListener('touchmove', handleTouchMove, { passive: false })\n      document.addEventListener('touchend', handleTouchEnd)\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.removeEventListener('touchmove', handleTouchMove, { passive: false } as any)\n        document.removeEventListener('touchend', handleTouchEnd)\n      }\n    }\n  }, [isDragging, isRotating, isResizing, handleMouseMove, handleTouchMove, handleMouseUp, handleTouchEnd])\n\n  // ResizeObserver to handle container size changes\n  useEffect(() => {\n    const el = protractorRef.current?.closest('.jxgbox')\n    if (!el) return\n    \n    const ro = new ResizeObserver(() => {\n      // Force a light refresh by updating dragStart state\n      setDragStart(s => ({ ...s }))\n    })\n    ro.observe(el)\n    return () => ro.disconnect()\n  }, [])\n\n  // Calculate protractor dimensions\n  const radiusPx = size * pxPerUnit\n  const centerX = size * pxPerUnit * 1.2  // Adjusted for new SVG dimensions\n  const centerY = size * pxPerUnit * 1.1  // Adjusted for new SVG dimensions\n  \n  // Helper variables for improved design\n  const R = radiusPx                               // outer radius (tick tips)\n  const ring = Math.max(8, R * 0.075)              // thickness of the dark tick band\n  const innerR = R - ring                          // inner edge of the tick band (rim sits here)\n  const uid = React.useMemo(() => Math.random().toString(36).slice(2), [])\n  const arc = (rad:number) =>\n    `M ${centerX - rad} ${centerY} A ${rad} ${rad} 0 0 1 ${centerX + rad} ${centerY}`\n  \n  // Returns a closed path for the grey ring band between radii R and r (r < R), 0..180°\n  const ringBandPath = (R: number, r: number) => {\n    // Outer arc: from left outer point to right outer point (sweep=1)\n    // Then line down to the right inner point\n    // Inner arc back to the left inner point (sweep=0), and close.\n    return `\n      M ${centerX - R} ${centerY}\n      A ${R} ${R} 0 0 1 ${centerX + R} ${centerY}\n      L ${centerX + r} ${centerY}\n      A ${r} ${r} 0 0 0 ${centerX - r} ${centerY}\n      Z\n    `;\n  };\n\n  // Generate protractor markings\n  const generateMarkings = () => {\n    const markings = []\n    \n    // Generate degree markings (0-180 degrees)\n    for (let angle = 0; angle <= 180; angle += 1) {\n      const rad = (angle * Math.PI) / 180\n      \n      const isMajor = angle % 10 === 0\n      const isMedium = angle % 5 === 0 && !isMajor\n      const isMinor = angle % 1 === 0 && !isMajor && !isMedium\n      \n      // Different tick lengths for different types\n      let tickLength = 0\n      let strokeWidth = 0.5\n      \n      if (isMajor) {\n        tickLength = R - innerR  // Full length from inner to outer\n        strokeWidth = 2.5\n      } else if (isMedium) {\n        tickLength = (R - innerR) * 0.7  // 70% of full length\n        strokeWidth = 1.5\n      } else if (isMinor) {\n        tickLength = (R - innerR) * 0.4  // 40% of full length\n        strokeWidth = 0.8\n      }\n      \n      const x1 = centerX + Math.cos(rad) * (R - tickLength)\n      const y1 = centerY - Math.sin(rad) * (R - tickLength)\n      const x2 = centerX + Math.cos(rad) * R\n      const y2 = centerY - Math.sin(rad) * R\n      \n      markings.push(\n        <line\n          key={`mark-${angle}`}\n          x1={x1}\n          y1={y1}\n          x2={x2}\n          y2={y2}\n          stroke=\"#374151\"\n          strokeWidth={strokeWidth}\n        />\n      )\n      \n      // Add degree labels for every 10 degrees\n      if (isMajor) {\n        const labelDistance = R + 20 // was radiusPx + 20\n        const labelX = centerX + Math.cos(rad) * labelDistance\n        const labelY = centerY - Math.sin(rad) * labelDistance\n        \n        markings.push(\n          <text\n            key={`label-${angle}`}\n            x={labelX}\n            y={labelY}\n            fontSize=\"11\"\n            fill=\"#1f2937\"\n            fontFamily=\"Arial, sans-serif\"\n            fontWeight=\"bold\"\n            textAnchor=\"middle\"\n            dominantBaseline=\"middle\"\n          >\n            {angle}°\n          </text>\n        )\n      }\n    }\n    \n    return markings\n  }\n\n  return (\n    <div\n      ref={protractorRef}\n      className={`absolute select-none group ${isActive ? 'z-50' : 'z-40'}`}\n      style={{\n        left: screenPos.x,\n        top: screenPos.y,\n        transform: `translate(-50%, -50%) rotate(${rotation}deg)`,\n        transformOrigin: '50% 50%'\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleTouchStart}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      {/* Protractor body */}\n      <div className=\"relative\" style={{ pointerEvents: 'auto' }}>\n        <svg\n          width={size * pxPerUnit * 2.6}\n          height={size * pxPerUnit * 2.4}\n          className=\"absolute\"\n          style={{ \n            left: -size * pxPerUnit * 1.3, \n            top: -size * pxPerUnit * 1.2,\n            pointerEvents: 'auto'\n          }}\n          viewBox={`0 0 ${size * pxPerUnit * 2.6} ${size * pxPerUnit * 1.4}`}\n        >\n          <defs>\n            <filter id=\"protractorShadow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\n              <feDropShadow dx=\"1\" dy=\"1\" stdDeviation=\"2\" floodColor=\"#000\" floodOpacity=\"0.15\"/>\n            </filter>\n            <mask id={`innerArcMask-${uid}`}>\n              <rect width=\"100%\" height=\"100%\" fill=\"white\"/>\n              {/* Create a larger black rectangle to completely hide the inner arc between the lines */}\n              <rect \n                x={centerX - innerR * 2} \n                y={centerY - ring - 1} \n                width={innerR * 4} \n                height={ring + 20} \n                fill=\"black\"\n              />\n            </mask>\n          </defs>\n          \n          {/* Grey ring segment (curved band between arcs) */}\n          <path\n            d={ringBandPath(R, innerR)}\n            fill=\"rgba(107,114,128,0.22)\"\n            stroke=\"none\"\n          />\n\n          {/* Grey band between the two straight lines */}\n          <rect\n            x={centerX - innerR}\n            y={centerY - ring}\n            width={innerR * 2}\n            height={ring}\n            fill=\"rgba(107,114,128,0.22)\"\n          />\n\n          {/* outer semicircle outline */}\n          <path d={arc(R)} fill=\"none\" stroke=\"#0f172a\" strokeWidth=\"2.2\" opacity=\"0.95\" filter=\"url(#protractorShadow)\"/>\n\n          {/* baseline */}\n          <line x1={centerX - R} y1={centerY} x2={centerX + R} y2={centerY}\n                stroke=\"#000000\" strokeWidth={isActive ? 1.9 : 1} strokeLinecap=\"round\" />\n          \n          {/* inner horizontal line - positioned to match the arc distance */}\n          <line x1={centerX - innerR} y1={centerY - ring} x2={centerX + innerR} y2={centerY - ring}\n                stroke=\"#000000\" strokeWidth=\"1.4\" strokeLinecap=\"round\" />\n\n          {/* complete inner semicircle with mask to hide area between lines */}\n          <path d={`M ${centerX - innerR} ${centerY} A ${innerR} ${innerR} 0 0 1 ${centerX + innerR} ${centerY} Z`} \n                fill=\"none\" stroke=\"#000000\" strokeWidth=\"1\" mask={`url(#innerArcMask-${uid})`} />\n\n          {/* center dot */}\n          <circle cx={centerX} cy={centerY} r={isActive ? 4 : 3} fill=\"#dc2626\" stroke=\"#fff\" strokeWidth=\"2\" filter=\"url(#protractorShadow)\"/>\n\n          {/* ticks and labels LAST so they stay crisp on top */}\n          {generateMarkings()}\n          \n        </svg>\n        \n        {/* Rotation handle - positioned on the baseline, left of center */}\n        <div\n          className=\"rotation-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-emerald-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like ruler\n            left: `${0.2 * centerX - radiusPx * 0.3}px`,\n            top: `${0.36 * centerY}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 20\n          }}\n          title=\"Otočit úhloměr\"\n        >\n          <div className=\"w-2 h-2 bg-emerald-500 rounded-full\" />\n        </div>\n\n        {/* Resize handle - positioned on the baseline, right of center */}\n        <div\n          className=\"resize-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-amber-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like ruler\n            left: `${-0.37 * centerX + radiusPx * 0.3}px`,\n            top: `${0.36 * centerY}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 15\n          }}\n          title=\"Změnit velikost\"\n        >\n          <div className=\"w-2 h-2 bg-amber-500 rounded-full\" />\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2920, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/grid-manager.ts"],"sourcesContent":["// lib/grid-manager.ts\nimport JXG from 'jsxgraph'\n\nexport type GridMode = 'none' | 'major' | 'minor' | 'major-minor' | 'dot'\ntype JBoard = JXG.Board & { renderer: any }\n\nexport class GridManager {\n  private gridLines: any[] = []\n  private mode: GridMode = 'none'\n  private dotStep = 0.5 // world units\n  private container: HTMLElement\n\n  constructor(private board: JBoard, container: HTMLElement) {\n    this.container = container\n    // ensure background sits below the canvas\n    this.container.style.position = this.container.style.position || 'relative'\n  }\n\n  setMode(mode: GridMode) {\n    if (this.mode === mode) return\n    this.mode = mode\n    this.clearAll()\n    switch (mode) {\n      case 'none':\n        this.applyDot(false)\n        break\n      case 'major':\n        this.createLineGrid(1.0, '#e5e7eb', 1)\n        this.applyDot(false)\n        break\n      case 'minor':\n        this.createLineGrid(0.2, '#f3f4f6', 0.5)\n        this.applyDot(false)\n        break\n      case 'major-minor':\n        this.createLineGrid(0.2, '#f3f4f6', 0.5)\n        this.createLineGrid(1.0, '#d1d5db', 1)\n        this.applyDot(false)\n        break\n      case 'dot':\n        this.applyDot(true)\n        break\n    }\n    this.board.update()\n  }\n\n  setDotStep(stepWorldUnits: number) {\n    this.dotStep = Math.max(0.1, stepWorldUnits)\n    if (this.mode === 'dot') this.applyDot(true)\n  }\n\n  /** Keep the dot background in sync with pixel scaling */\n  sync() {\n    if (this.mode !== 'dot') return\n    this.applyDot(true)\n  }\n\n  private createLineGrid(step: number, color: string, strokeWidth: number) {\n    const bbox = this.board.getBoundingBox()\n    \n    // Create vertical lines\n    for (let x = bbox[0]; x <= bbox[2]; x += step) {\n      const line = this.board.create('line', [[x, bbox[1]], [x, bbox[3]]], {\n        strokeColor: color,\n        strokeWidth: strokeWidth,\n        fixed: true,\n        highlight: false,\n        layer: 0,\n        withLabel: false,\n        showInfobox: false\n      })\n      this.gridLines.push(line)\n    }\n    \n    // Create horizontal lines\n    for (let y = bbox[3]; y <= bbox[1]; y += step) {\n      const line = this.board.create('line', [[bbox[0], y], [bbox[2], y]], {\n        strokeColor: color,\n        strokeWidth: strokeWidth,\n        fixed: true,\n        highlight: false,\n        layer: 0,\n        withLabel: false,\n        showInfobox: false\n      })\n      this.gridLines.push(line)\n    }\n  }\n\n  private clearAll() {\n    this.gridLines.forEach(line => {\n      try { this.board.removeObject(line) } catch {}\n    })\n    this.gridLines = []\n  }\n\n  private applyDot(enabled: boolean) {\n    if (!enabled) {\n      this.container.style.backgroundImage = ''\n      this.container.style.backgroundSize = ''\n      this.container.style.backgroundPosition = ''\n      return\n    }\n    // Convert world units to pixels using board.unitX/unitY\n    const pxX = this.dotStep * this.board.unitX\n    const pxY = this.dotStep * this.board.unitY\n    // Subtle dot (1px) using radial gradient\n    this.container.style.backgroundImage =\n      'radial-gradient(circle, #e5e7eb 1px, transparent 1px)'\n    this.container.style.backgroundSize = `${pxX}px ${pxY}px`\n    // Keep the pattern aligned to the origin\n    // If you allow pan/zoom, you could compute an offset from the bbox.\n    this.container.style.backgroundPosition = `0 0`\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3052, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/undo-redo.ts"],"sourcesContent":["/**\n * Standalone Undo/Redo System for JSXGraph Geometry\n * \n * This module provides a clean, isolated undo/redo system that can be easily\n * integrated into any JSXGraph-based geometry application.\n */\n\nimport JXG from 'jsxgraph'\n\ntype JBoard = JXG.Board & { renderer: any }\n\n// Operation types\nexport type CreateOp = {\n  kind: 'create'\n  elType: 'point' | 'segment' | 'line' | 'circle'\n  payload: any\n  _id?: string\n  pointIds?: string[]\n}\n\nexport type DeleteOp = {\n  kind: 'delete'\n  elType: 'point' | 'segment' | 'line' | 'circle'\n  payload: any\n  _id?: string\n  pointIds?: string[]\n}\n\nexport type ModifyOp = {\n  kind: 'modify'\n  pointId: string\n  before: { x: number; y: number; name: string }\n  after: { x: number; y: number; name: string }\n}\n\nexport type BundleOp = {\n  kind: 'bundle'\n  ops: Operation[]\n}\n\nexport type Operation = CreateOp | DeleteOp | ModifyOp | BundleOp\n\n// Configuration for the undo/redo system\nexport interface UndoRedoConfig {\n  board: JBoard\n  onFeedback?: (message: string) => void\n  EPS?: number\n}\n\nexport class UndoRedoManager {\n  private board: JBoard\n  private undoStack: Operation[] = []\n  private redoStack: Operation[] = []\n  private onFeedback: ((message: string) => void) | undefined\n  private EPS: number\n  private txnDepth = 0\n  private pendingOps: Operation[] = []\n  private suppressTracking = false\n  private moveStarts = new Map<string, { x: number; y: number; name: string }>()\n  private trackingInterval: NodeJS.Timeout | null = null\n  private withinTol(a: number, b: number, tol = this.EPS): boolean { \n    return Math.abs(a - b) <= tol \n  }\n\n  private withSuppressed<T>(fn: () => T): T {\n    const prev = this.suppressTracking\n    this.suppressTracking = true\n    try { return fn() } finally { this.suppressTracking = prev }\n  }\n\n  constructor(config: UndoRedoConfig) {\n    this.board = config.board\n    this.onFeedback = config.onFeedback\n    this.EPS = config.EPS || 0.03\n    this.setupGlobalPointTracking()\n  }\n\n  // Public API\n  public pushOperation(op: Operation): void {\n    const frozen = structuredClone(op)\n    this.withSuppressed(() => this.performOperation(frozen))\n    if (this.txnDepth > 0) {\n      this.pendingOps.push(frozen)\n    } else {\n      this.undoStack.push(frozen)\n      this.redoStack = [] // Clear redo stack on new operation\n    }\n  }\n\n  public begin(): void { \n    this.txnDepth++ \n  }\n\n  public commit(): void {\n    if (this.txnDepth === 0) return\n    this.txnDepth--\n    if (this.txnDepth > 0) return\n    if (this.pendingOps.length === 0) return\n    // compress: push a synthetic op that replays the batch\n    const bundle = structuredClone(this.pendingOps)\n    this.pendingOps = []\n    this.undoStack.push({ kind: 'bundle', ops: bundle } as BundleOp)\n    this.redoStack = []\n  }\n\n  public undo(): void {\n    if (this.undoStack.length === 0) return\n    \n    const op = this.undoStack.pop()!\n    const frozen = structuredClone(op)\n    this.suppressTracking = true\n    try {\n      this.rollbackOperation(frozen)\n    } finally {\n      this.suppressTracking = false\n    }\n    this.redoStack.push(frozen)\n    this.board.update()\n    this.onFeedback?.('')\n  }\n\n  public redo(): void {\n    if (this.redoStack.length === 0) return\n    \n    const op = this.redoStack.pop()!\n    const frozen = structuredClone(op)\n    this.suppressTracking = true\n    try {\n      this.performOperation(frozen)\n    } finally {\n      this.suppressTracking = false\n    }\n    this.undoStack.push(frozen)\n    this.board.update()\n    this.onFeedback?.('')\n  }\n\n  public canUndo(): boolean {\n    return this.undoStack.length > 0\n  }\n\n  public canRedo(): boolean {\n    return this.redoStack.length > 0\n  }\n\n  public clear(): void {\n    this.undoStack = []\n    this.redoStack = []\n  }\n\n  public dispose(): void {\n    this.moveStarts.clear()\n    if (this.trackingInterval) {\n      clearInterval(this.trackingInterval)\n      this.trackingInterval = null\n    }\n  }\n\n  private setupGlobalPointTracking(): void {\n    // Attach tracking to all existing points\n    this.attachTrackingToAllPoints()\n    \n    // Set up a periodic check to attach tracking to any new points\n    this.trackingInterval = setInterval(() => {\n      this.attachTrackingToAllPoints()\n    }, 1000) // Check every second\n  }\n\n  private attachTrackingToAllPoints(): void {\n    const objects = Object.values(this.board.objects) as any[]\n    for (const obj of objects) {\n      if (obj?.elType === 'point' && !obj.visProp?.fixed) {\n        this.attachPointTracking(obj)\n      }\n    }\n  }\n\n  private posOf(pt: any): { x: number; y: number; name: string } {\n    return { x: pt.X(), y: pt.Y(), name: (pt as any)._rawName || '' }\n  }\n\n  private definingPointsOf(obj: any): any[] {\n    if (!obj) return []\n    if (obj.elType === 'segment' || obj.elType === 'line') {\n      const a: any = obj.point1 || obj.A || obj.points?.[0]\n      const b: any = obj.point2 || obj.B || obj.points?.[1]\n      return [a, b].filter(Boolean)\n    }\n    if (obj.elType === 'circle') {\n      const c: any = obj.center || obj.points?.[0]\n      const p: any = obj.point2 || obj.points?.[1]\n      return [c, p].filter(Boolean)\n    }\n    return []\n  }\n\n  private attachPointTracking(pt: any): void {\n    // Avoid double-binding\n    if ((pt as any)._undoRedoBound) return\n    ;(pt as any)._undoRedoBound = true\n\n    pt.on('down', () => {\n      if (this.suppressTracking) return\n      this.moveStarts.set(pt.id, this.posOf(pt))\n    })\n\n    pt.on('up', () => {\n      if (this.suppressTracking) return\n      const start = this.moveStarts.get(pt.id)\n      if (!start) return\n      const end = this.posOf(pt)\n\n      const moved = !this.withinTol(start.x, end.x) || !this.withinTol(start.y, end.y) || start.name !== end.name\n      if (moved) {\n        const op: ModifyOp = { kind: 'modify', pointId: pt.id, before: start, after: end }\n        this.pushOperation(op)\n      }\n      this.moveStarts.delete(pt.id)\n    })\n  }\n\n  private attachShapeTracking(obj: any): void {\n    // For segment/line/circle: record a BUNDLE of point moves\n    let before: Record<string, { x: number; y: number; name: string }> | null = null\n    let pts: any[] = []\n\n    const onDown = () => {\n      if (this.suppressTracking) return\n      pts = this.definingPointsOf(obj)\n      if (pts.length === 0) return\n      before = {}\n      for (const p of pts) before[p.id] = this.posOf(p)\n    }\n\n    const onUp = () => {\n      if (this.suppressTracking || !before || pts.length === 0) return\n      const ops: Operation[] = []\n      for (const p of pts) {\n        const b = before![p.id]\n        if (!b) continue\n        const a = this.posOf(p)\n        if (b.x !== a.x || b.y !== a.y || b.name !== a.name) {\n          ops.push({\n            kind: 'modify',\n            pointId: p.id,\n            before: b,\n            after: a\n          } as ModifyOp)\n        }\n      }\n      if (ops.length === 1 && ops[0]) {\n        this.pushOperation(ops[0])                 // single move\n      } else if (ops.length > 1) {\n        this.pushOperation({ kind: 'bundle', ops }) // move both endpoints / center+radius\n      }\n      before = null\n      pts = []\n    }\n\n    obj.on('down', onDown)\n    obj.on('up', onUp)\n  }\n\n  private findPointNear(xy: { x: number; y: number }, tol = this.EPS): any {\n    const objs = Object.values(this.board.objects) as any[]\n    for (const o of objs) {\n      if (o?.elType === 'point') {\n        const p = { x: o.X(), y: o.Y() }\n        if (Math.hypot(p.x - xy.x, p.y - xy.y) <= tol) return o\n      }\n    }\n    return null\n  }\n\n  private isJXGPoint(p: any): boolean {\n    return !!(\n      p &&\n      p.elType === 'point' &&\n      typeof p.X === 'function' &&\n      typeof p.Y === 'function' &&\n      p.board === this.board\n    )\n  }\n\n  private getPointByIdOrNear(prefId: string | undefined, xy: { x: number; y: number }, tol = this.EPS): any {\n    if (prefId) {\n      const byId = (this.board.objects as any)[prefId]\n      if (byId?.elType === 'point') return byId\n    }\n    // exact coordinate match first\n    for (const o of Object.values(this.board.objects) as any[]) {\n      if (o?.elType === 'point' && o.X() === xy.x && o.Y() === xy.y) return o\n    }\n    // then proximity\n    const nearPoint = this.findPointNear(xy, tol)\n    if (nearPoint) return nearPoint\n    \n    // If no point found, return null (will be handled by fallback in calling code)\n    return null\n  }\n\n  private ensurePoint(\n    xy: { x: number; y: number },\n    attr: any = { name: '', size: 2, strokeColor: '#444', fillColor: '#666' }\n  ): any | null {\n    const existing = this.findPointNear(xy)\n    if (existing) {\n      this.attachPointTracking(existing)\n      return existing\n    }\n\n    try {\n      const pt = this.board.create('point', [xy.x, xy.y], attr)\n      if (!this.isJXGPoint(pt)) throw new Error('Invalid point')\n      ;(pt as any)._rawName = attr?.name ?? ''\n      if (attr?.fixed !== undefined) pt.setAttribute({ fixed: attr.fixed })\n      if (attr?.withLabel !== undefined) pt.setAttribute({ withLabel: attr.withLabel })\n      \n      // Attach move tracking to the new point\n      this.attachPointTracking(pt)\n      \n      return pt\n    } catch (error) {\n      console.error('Failed to create point:', error)\n      return null\n    }\n  }\n\n  private performOperation(op: Operation): void {\n    if (op.kind === 'create') {\n      this.performCreate(op)\n    } else if (op.kind === 'delete') {\n      this.performDelete(op)\n    } else if (op.kind === 'modify') {\n      this.performModify(op)\n    } else if (op.kind === 'bundle') {\n      this.performBundle(op)\n    }\n  }\n\n  private rollbackOperation(op: Operation): void {\n    if (op.kind === 'create') {\n      this.rollbackCreate(op)\n    } else if (op.kind === 'delete') {\n      this.rollbackDelete(op)\n    } else if (op.kind === 'modify') {\n      this.rollbackModify(op)\n    } else if (op.kind === 'bundle') {\n      this.rollbackBundle(op)\n    }\n  }\n\n  private performCreate(op: CreateOp): void {\n    if (op.elType === 'point') {\n      const { x, y, attr } = op.payload\n      const pt = this.ensurePoint({ x, y }, attr)\n      if (!pt) return\n      op._id = pt.id\n      // Force board update to ensure point is created immediately\n      this.board.update()\n      return\n    }\n\n    if (op.elType === 'segment' || op.elType === 'line') {\n      const { p1, p2, attr } = op.payload\n      const a = this.getPointByIdOrNear(op.pointIds?.[0], p1) || this.ensurePoint(p1, attr)\n      const b = this.getPointByIdOrNear(op.pointIds?.[1], p2) || this.ensurePoint(p2, attr)\n\n      // If either isn't a real JSXGraph point, fall back to coordinate parents\n      const useCoords = !(this.isJXGPoint(a) && this.isJXGPoint(b))\n      const parents = useCoords ? [[p1.x, p1.y], [p2.x, p2.y]] : [a, b]\n\n      try {\n        const el = this.board.create(op.elType, parents as any, attr)\n        op._id = (el as any).id\n        // capture actual point ids (works for both segment & line)\n        const pA: any = (el as any).point1 || (el as any).A || (el as any).points?.[0]\n        const pB: any = (el as any).point2 || (el as any).B || (el as any).points?.[1]\n        if (this.isJXGPoint(pA) && this.isJXGPoint(pB)) {\n          op.pointIds = [pA.id, pB.id]\n          // Attach tracking to the endpoint points if they don't have it yet\n          this.attachPointTracking(pA)\n          this.attachPointTracking(pB)\n        }\n        // Attach shape tracking to the element itself\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error(`Failed to create ${op.elType}:`, e, { parents })\n      }\n      return\n    }\n\n    if (op.elType === 'circle') {\n      const { center, on, attr } = op.payload\n      const c = this.getPointByIdOrNear(op.pointIds?.[0], center) || this.ensurePoint(center, attr)\n      const p = this.getPointByIdOrNear(op.pointIds?.[1], on) || this.ensurePoint(on, attr)\n\n      const useCoords = !(this.isJXGPoint(c) && this.isJXGPoint(p))\n      const parents = useCoords ? [[center.x, center.y], [on.x, on.y]] : [c, p]\n\n      try {\n        const el = this.board.create('circle', parents as any, attr)\n        op._id = (el as any).id\n        const pc: any = (el as any).center || (el as any).points?.[0]\n        const pp: any = (el as any).point2 || (el as any).points?.[1]\n        if (this.isJXGPoint(pc) && this.isJXGPoint(pp)) {\n          op.pointIds = [pc.id, pp.id]\n          // Attach tracking to the center and on-point if they don't have it yet\n          this.attachPointTracking(pc)\n          this.attachPointTracking(pp)\n        }\n        // Attach shape tracking to the circle element itself\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error('Failed to create circle:', e, { parents })\n      }\n      return\n    }\n  }\n\n  private rollbackCreate(op: CreateOp): void {\n    if (!op._id) return\n    \n    const obj = (this.board.objects as any)[op._id]\n    if (obj) {\n      try {\n        this.board.removeObject(obj as JXG.GeometryElement)\n      } catch (error) {\n        console.error('Failed to remove object:', error, op._id)\n      }\n    } else {\n      // Try to find and remove by matching definition as fallback\n      this.removeByMatchingDefinition({\n        kind: 'delete',\n        elType: op.elType,\n        payload: op.payload,\n        _id: op._id,\n        pointIds: op.pointIds || []\n      })\n    }\n    \n    // Remove associated points if they're not used elsewhere\n    if (op.pointIds && (op.elType === 'segment' || op.elType === 'line' || op.elType === 'circle')) {\n      op.pointIds.forEach((pointId: string) => {\n        const pointObj = (this.board.objects as any)[pointId]\n        if (pointObj && !this.isPointUsedElsewhere(pointId, pointObj)) {\n          try {\n            this.board.removeObject(pointObj as JXG.GeometryElement)\n          } catch (error) {\n            console.error('Failed to remove point:', error, pointId)\n          }\n        }\n      })\n    }\n  }\n\n  private performDelete(op: DeleteOp): void {\n    if (op._id) {\n      const target = (this.board.objects as any)[op._id]\n      if (target) {\n        this.board.removeObject(target as JXG.GeometryElement)\n        // Force board update to ensure object is removed immediately\n        this.board.update()\n      }\n    } else {\n      // If _id is missing, try to find and remove by matching defining points and attributes\n      this.removeByMatchingDefinition(op)\n      // Force board update after removing by matching\n      this.board.update()\n    }\n    \n    // Remove associated points if they're not used elsewhere\n    if (op.pointIds && (op.elType === 'segment' || op.elType === 'line' || op.elType === 'circle')) {\n      op.pointIds.forEach((pointId: string) => {\n        const pointObj = (this.board.objects as any)[pointId]\n        if (pointObj && !this.isPointUsedElsewhere(pointId, pointObj)) {\n          this.board.removeObject(pointObj as JXG.GeometryElement)\n        }\n      })\n      // Force board update after removing points\n      this.board.update()\n    }\n  }\n\n  private removeByMatchingDefinition(op: DeleteOp): void {\n    const objects = Object.values(this.board.objects) as any[]\n    \n    for (const obj of objects) {\n      if (obj.elType !== op.elType) continue\n      \n      let matches = false\n      \n      if (op.elType === 'point') {\n        const { x, y } = op.payload\n        matches = Math.abs(obj.X() - x) < this.EPS && Math.abs(obj.Y() - y) < this.EPS\n      } else if (op.elType === 'segment' || op.elType === 'line') {\n        const { p1, p2 } = op.payload\n        const a = obj.point1 || obj.A || obj.points?.[0]\n        const b = obj.point2 || obj.B || obj.points?.[1]\n        if (a && b) {\n          matches = Math.abs(a.X() - p1.x) < this.EPS && Math.abs(a.Y() - p1.y) < this.EPS &&\n                   Math.abs(b.X() - p2.x) < this.EPS && Math.abs(b.Y() - p2.y) < this.EPS\n        }\n      } else if (op.elType === 'circle') {\n        const { center, on } = op.payload\n        const c = obj.center || obj.midpoint || obj.points?.[0]\n        const p = obj.point2 || obj.points?.[1]\n        if (c) {\n          const centerMatches = Math.abs(c.X() - center.x) < this.EPS && Math.abs(c.Y() - center.y) < this.EPS\n          if (p) {\n            matches = centerMatches && Math.abs(p.X() - on.x) < this.EPS && Math.abs(p.Y() - on.y) < this.EPS\n          } else {\n            // For circles defined by center and radius\n            const R = (typeof obj.R === 'function' ? obj.R() : obj.radius) ?? 1\n            const expectedRadius = Math.hypot(on.x - center.x, on.y - center.y)\n            matches = centerMatches && Math.abs(R - expectedRadius) < this.EPS\n          }\n        }\n      }\n      \n      if (matches) {\n        this.board.removeObject(obj as JXG.GeometryElement)\n        break\n      }\n    }\n  }\n\n  private rollbackDelete(op: DeleteOp): void {\n    if (op.elType === 'point') {\n      const { x, y, attr } = op.payload\n      const pt = this.ensurePoint({ x, y }, attr)\n      if (!pt) return\n      op._id = pt.id\n      // Force board update to ensure point is created immediately\n      this.board.update()\n      return\n    }\n\n    if (op.elType === 'segment' || op.elType === 'line') {\n      const { p1, p2, attr } = op.payload\n      const a = this.getPointByIdOrNear(op.pointIds?.[0], p1) || this.ensurePoint(p1, attr)\n      const b = this.getPointByIdOrNear(op.pointIds?.[1], p2) || this.ensurePoint(p2, attr)\n      \n      const useCoords = !(this.isJXGPoint(a) && this.isJXGPoint(b))\n      const parents = useCoords ? [[p1.x, p1.y], [p2.x, p2.y]] : [a, b]\n      \n      try {\n        const el = this.board.create(op.elType, parents as any, attr)\n        op._id = (el as any).id\n        const pA: any = (el as any).point1 || (el as any).A || (el as any).points?.[0]\n        const pB: any = (el as any).point2 || (el as any).B || (el as any).points?.[1]\n        if (this.isJXGPoint(pA) && this.isJXGPoint(pB)) {\n          op.pointIds = [pA.id, pB.id]\n        }\n        // Attach shape tracking to the recreated element\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error(`Failed to recreate ${op.elType}:`, e, { parents })\n      }\n      return\n    }\n\n    if (op.elType === 'circle') {\n      const { center, on, attr } = op.payload\n      const c = this.getPointByIdOrNear(op.pointIds?.[0], center) || this.ensurePoint(center, attr)\n      const p = this.getPointByIdOrNear(op.pointIds?.[1], on) || this.ensurePoint(on, attr)\n\n      const useCoords = !(this.isJXGPoint(c) && this.isJXGPoint(p))\n      const parents = useCoords ? [[center.x, center.y], [on.x, on.y]] : [c, p]\n\n      try {\n        const el = this.board.create('circle', parents as any, attr)\n        op._id = (el as any).id\n        const pc: any = (el as any).center || (el as any).points?.[0]\n        const pp: any = (el as any).point2 || (el as any).points?.[1]\n        if (this.isJXGPoint(pc) && this.isJXGPoint(pp)) {\n          op.pointIds = [pc.id, pp.id]\n        }\n        // Attach shape tracking to the recreated circle element\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error('Failed to recreate circle:', e, { parents })\n      }\n      return\n    }\n  }\n\n  private performModify(op: ModifyOp): void {\n    const pointObj = (this.board.objects as any)[op.pointId]\n    if (pointObj) {\n      // Use moveTo instead of setPosition to avoid draggable function issues\n      try {\n        pointObj.moveTo([op.after.x, op.after.y])\n      } catch (e) {\n        // Fallback to direct coordinate setting\n        pointObj.coords.setCoordinates(JXG.COORDS_BY_USER, [op.after.x, op.after.y])\n        this.board.update()\n      }\n      this.setPointName(pointObj, op.after.name)\n    }\n  }\n\n  private rollbackModify(op: ModifyOp): void {\n    const pointObj = (this.board.objects as any)[op.pointId]\n    if (pointObj) {\n      // Use moveTo instead of setPosition to avoid draggable function issues\n      try {\n        pointObj.moveTo([op.before.x, op.before.y])\n      } catch (e) {\n        // Fallback to direct coordinate setting\n        pointObj.coords.setCoordinates(JXG.COORDS_BY_USER, [op.before.x, op.before.y])\n        this.board.update()\n      }\n      this.setPointName(pointObj, op.before.name)\n    }\n  }\n\n  private performBundle(op: BundleOp): void {\n    // Execute operations in forward order\n    for (const subOp of op.ops) {\n      if (subOp) {\n        try {\n          // Create a fresh copy of the operation to avoid stale IDs\n          const freshOp = structuredClone(subOp)\n          // Keep IDs intact - don't delete them\n          this.performOperation(freshOp)\n          // Write back the realized IDs to the original operation\n          if (freshOp.kind === 'create' || freshOp.kind === 'delete') {\n            const freshOpTyped = freshOp as CreateOp | DeleteOp\n            const subOpTyped = subOp as CreateOp | DeleteOp\n            if (freshOpTyped._id !== undefined) {\n              subOpTyped._id = freshOpTyped._id\n            }\n            if (freshOpTyped.pointIds !== undefined) {\n              subOpTyped.pointIds = freshOpTyped.pointIds\n            }\n          }\n        } catch (error) {\n          console.error('Error executing bundled operation:', error, subOp)\n          // Continue with other operations even if one fails\n        }\n      }\n    }\n    // Force board update after all bundle operations\n    this.board.update()\n  }\n\n  private rollbackBundle(op: BundleOp): void {\n    // Rollback operations in reverse order\n    for (let i = op.ops.length - 1; i >= 0; i--) {\n      const subOp = op.ops[i]\n      if (subOp) {\n        try {\n          // Create a fresh copy of the operation to avoid stale IDs\n          const freshOp = structuredClone(subOp)\n          // Keep IDs intact - don't delete them\n          this.rollbackOperation(freshOp)\n          // Write back the realized IDs to the original operation\n          if (freshOp.kind === 'create' || freshOp.kind === 'delete') {\n            const freshOpTyped = freshOp as CreateOp | DeleteOp\n            const subOpTyped = subOp as CreateOp | DeleteOp\n            if (freshOpTyped._id !== undefined) {\n              subOpTyped._id = freshOpTyped._id\n            }\n            if (freshOpTyped.pointIds !== undefined) {\n              subOpTyped.pointIds = freshOpTyped.pointIds\n            }\n          }\n        } catch (error) {\n          console.error('Error rolling back bundled operation:', error, subOp)\n          // Continue with other operations even if one fails\n        }\n      }\n    }\n    // Force board update after all bundle rollback operations\n    this.board.update()\n  }\n\n  private setPointName(pointObj: any, name: string): void {\n    const trimmed = (name || '').trim()\n    const pretty = this.toSubscript(trimmed)\n    pointObj.setAttribute({ name: pretty, withLabel: !!trimmed })\n    ;(pointObj as any)._rawName = trimmed\n  }\n\n  private toSubscript(name: string): string {\n    const map: Record<string, string> = { \n      '0': '₀', '1': '₁', '2': '₂', '3': '₃', '4': '₄', \n      '5': '₅', '6': '₆', '7': '₇', '8': '₈', '9': '₉' \n    }\n    return name.replace(/_(\\d+)/g, (_, d) => d.split('').map((ch: string) => map[ch] ?? ch).join(''))\n  }\n\n  private isPointUsedElsewhere(pointId: string, pointObj: any): boolean {\n    return Object.values(this.board.objects).some((otherObj: any) => {\n      if (otherObj === pointObj || otherObj.id === pointId) return false\n      if (otherObj.point1?.id === pointId || otherObj.point2?.id === pointId) return true\n      if (otherObj.center?.id === pointId) return true\n      if (otherObj.points && Array.isArray(otherObj.points)) {\n        return otherObj.points.some((p: any) => p?.id === pointId)\n      }\n      return false\n    })\n  }\n\n  // Helper methods for creating operations\n  public createPointOperation(x: number, y: number, attr: any = { name: '', size: 2, strokeColor: '#444', fillColor: '#666' }): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'point',\n      payload: { x, y, attr }\n    }\n  }\n\n  public createSegmentOperation(p1: { x: number; y: number }, p2: { x: number; y: number }, attr: any): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'segment',\n      payload: { p1, p2, attr }\n    }\n  }\n\n  public createLineOperation(p1: { x: number; y: number }, p2: { x: number; y: number }, attr: any): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'line',\n      payload: { p1, p2, attr }\n    }\n  }\n\n  public createCircleOperation(center: { x: number; y: number }, on: { x: number; y: number }, attr: any): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'circle',\n      payload: { center, on, attr }\n    }\n  }\n\n  public createDeleteOperation(obj: any): DeleteOp | null {\n    try {\n      const attr = this.getCommonAttr(obj)\n      if (obj.elType === 'point') {\n        return {\n          kind: 'delete',\n          elType: 'point',\n          payload: { x: obj.X(), y: obj.Y(), attr },\n          _id: obj.id\n        }\n      }\n      if (obj.elType === 'segment' || obj.elType === 'line') {\n        const a: any = obj.point1 || obj.A || obj.points?.[0]\n        const b: any = obj.point2 || obj.B || obj.points?.[1]\n        if (!a || !b) return null\n        return {\n          kind: 'delete',\n          elType: obj.elType,\n          payload: { p1: { x: a.X(), y: a.Y() }, p2: { x: b.X(), y: b.Y() }, attr },\n          _id: obj.id,\n          pointIds: [a.id, b.id]\n        }\n      }\n      if (obj.elType === 'circle') {\n        const c: any = obj.center || obj.midpoint || obj.points?.[0]\n        const p: any = obj.point2 || obj.points?.[1]\n        const center = c ? { x: c.X(), y: c.Y() } : { x: obj.center?.X?.() ?? 0, y: obj.center?.Y?.() ?? 0 }\n        let on\n        if (p) {\n          on = { x: p.X(), y: p.Y() }\n        } else {\n          const R = (typeof obj.R === 'function' ? obj.R() : obj.radius) ?? 1\n          on = { x: center.x + R, y: center.y }\n        }\n        return {\n          kind: 'delete',\n          elType: 'circle',\n          payload: { center, on, attr },\n          _id: obj.id,\n          pointIds: c && p ? [c.id, p.id] : []\n        }\n      }\n    } catch {\n      return null\n    }\n    return null\n  }\n\n  private getCommonAttr(o: any): any {\n    return {\n      name: o?._rawName ?? '',\n      withLabel: !!(o?.visProp?.withlabel || o?.visProp?.withLabel),\n      fixed: !!o?.visProp?.fixed,\n      size: o?.visProp?.size,\n      strokeColor: o?.visProp?.strokecolor ?? o?.visProp?.strokeColor,\n      strokeWidth: o?.visProp?.strokewidth ?? o?.visProp?.strokeWidth,\n      fillColor: o?.visProp?.fillcolor ?? o?.visProp?.fillColor,\n      dash: o?.visProp?.dash\n    }\n  }\n\n  // Helper methods for UI integration\n  public fromBoardDeleteUnderMouse(e: any): DeleteOp | null {\n    const under = this.board.getAllObjectsUnderMouse(e)\n    const o: any = under.find((x: any) => !x?.visProp?.fixed)\n    return o ? this.createDeleteOperation(o) : null\n  }\n\n  public createModifyOperation(pointId: string, before: { x: number; y: number; name: string }, after: { x: number; y: number; name: string }): ModifyOp {\n    return {\n      kind: 'modify',\n      pointId,\n      before,\n      after\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3950, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/board-manager.ts"],"sourcesContent":["import JXG from 'jsxgraph'\nimport { GridManager, GridMode } from './grid-manager'\nimport { UndoRedoManager } from './undo-redo'\n\nexport type JBoard = JXG.Board & { renderer: any }\n\nexport interface BoardOptions {\n  boundingbox?: [number, number, number, number]\n  axis?: boolean\n  showNavigation?: boolean\n  showCopyright?: boolean\n  grid?: boolean\n  pan?: { enabled: boolean }\n  zoom?: boolean\n  keepaspectratio?: boolean\n}\n\nexport interface BoardManagerCallbacks {\n  onFeedback: (message: string) => void\n}\n\nexport class BoardManager {\n  private board: JBoard | null = null\n  private container: HTMLElement | null = null\n  private gridManager: GridManager | null = null\n  private undoRedoManager: UndoRedoManager | null = null\n  private callbacks: BoardManagerCallbacks\n\n  constructor(callbacks: BoardManagerCallbacks) {\n    this.callbacks = callbacks\n  }\n\n  init(container: HTMLElement, options: BoardOptions = {}): JBoard {\n    if (this.board) {\n      this.destroy()\n    }\n\n    this.container = container\n\n    const defaultOptions: BoardOptions = {\n      boundingbox: [-1, 8, 11, -1],\n      axis: false,\n      showNavigation: false,\n      showCopyright: false,\n      grid: false, // we'll manage grids ourselves\n      pan: { enabled: false },\n      zoom: false,\n      keepaspectratio: true,\n      ...options\n    }\n\n    this.board = JXG.JSXGraph.initBoard(container, defaultOptions) as JBoard\n\n    // Initialize grid manager\n    this.gridManager = new GridManager(this.board, container)\n\n    // Initialize undo/redo manager\n    this.undoRedoManager = new UndoRedoManager({\n      board: this.board,\n      onFeedback: this.callbacks.onFeedback,\n      EPS: 0.03\n    })\n\n    // Set global snap-to-grid defaults for points\n    JXG.Options.point.snapToGrid = true\n    JXG.Options.point.snapSizeX = 0.5\n    JXG.Options.point.snapSizeY = 0.5\n\n    return this.board\n  }\n\n  getBoard(): JBoard | null {\n    return this.board\n  }\n\n  getGridManager(): GridManager | null {\n    return this.gridManager\n  }\n\n  getUndoRedoManager(): UndoRedoManager | null {\n    return this.undoRedoManager\n  }\n\n  setGridMode(mode: GridMode): void {\n    this.gridManager?.setMode(mode)\n  }\n\n  destroy(): void {\n    if (this.board) {\n      try {\n        JXG.JSXGraph.freeBoard(this.board)\n      } catch (error) {\n        console.warn('Error freeing board:', error)\n      }\n    }\n    this.board = null\n    this.container = null\n    this.gridManager = null\n    this.undoRedoManager = null\n  }\n\n  isInitialized(): boolean {\n    return this.board !== null\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAmBO,MAAM;IACH,QAAuB,KAAI;IAC3B,YAAgC,KAAI;IACpC,cAAkC,KAAI;IACtC,kBAA0C,KAAI;IAC9C,UAAgC;IAExC,YAAY,SAAgC,CAAE;QAC5C,IAAI,CAAC,SAAS,GAAG;IACnB;IAEA,KAAK,SAAsB,EAAE,UAAwB,CAAC,CAAC,EAAU;QAC/D,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,OAAO;QACd;QAEA,IAAI,CAAC,SAAS,GAAG;QAEjB,MAAM,iBAA+B;YACnC,aAAa;gBAAC,CAAC;gBAAG;gBAAG;gBAAI,CAAC;aAAE;YAC5B,MAAM;YACN,gBAAgB;YAChB,eAAe;YACf,MAAM;YACN,KAAK;gBAAE,SAAS;YAAM;YACtB,MAAM;YACN,iBAAiB;YACjB,GAAG,OAAO;QACZ;QAEA,IAAI,CAAC,KAAK,GAAG,mLAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW;QAE/C,0BAA0B;QAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,qKAAW,CAAC,IAAI,CAAC,KAAK,EAAE;QAE/C,+BAA+B;QAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,sKAAe,CAAC;YACzC,OAAO,IAAI,CAAC,KAAK;YACjB,YAAY,IAAI,CAAC,SAAS,CAAC,UAAU;YACrC,KAAK;QACP;QAEA,8CAA8C;QAC9C,mLAAG,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG;QAC/B,mLAAG,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG;QAC9B,mLAAG,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG;QAE9B,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA,WAA0B;QACxB,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA,iBAAqC;QACnC,OAAO,IAAI,CAAC,WAAW;IACzB;IAEA,qBAA6C;QAC3C,OAAO,IAAI,CAAC,eAAe;IAC7B;IAEA,YAAY,IAAc,EAAQ;QAChC,IAAI,CAAC,WAAW,EAAE,QAAQ;IAC5B;IAEA,UAAgB;QACd,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI;gBACF,mLAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK;YACnC,EAAE,OAAO,OAAO;gBACd,QAAQ,IAAI,CAAC,wBAAwB;YACvC;QACF;QACA,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,eAAe,GAAG;IACzB;IAEA,gBAAyB;QACvB,OAAO,IAAI,CAAC,KAAK,KAAK;IACxB;AACF","debugId":null}},
    {"offset": {"line": 4040, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/constants.ts"],"sourcesContent":["// Constants used throughout the geometry application\n\nexport const EPS = 0.03\nexport const CLICK_EPS = 0.12 // world units; tweak if needed\n\n// Color palette for geometry objects\nexport const COLORS = {\n  POINT: '#444',\n  POINT_FILL: '#666',\n  SEGMENT: '#2563eb',\n  LINE: '#059669',\n  CIRCLE: '#dc2626',\n  DEFAULT_STROKE_WIDTH: 2,\n  LINE_STROKE_WIDTH: 1,\n  POINT_SIZE: 2\n} as const\n\n// Snap settings\nexport const SNAP_SETTINGS = {\n  SIZE_X: 0.5,\n  SIZE_Y: 0.5,\n  ENABLED: true\n} as const\n\n// Board default options\nexport const DEFAULT_BOARD_OPTIONS = {\n  boundingbox: [-1, 8, 11, -1] as [number, number, number, number],\n  axis: false,\n  showNavigation: false,\n  showCopyright: false,\n  grid: false,\n  pan: { enabled: false },\n  zoom: false,\n  keepaspectratio: true\n} as const\n\n// Toolbar button configurations\nexport const TOOLBAR_BUTTONS = [\n  { id: 'mouse', label: 'Myš', tool: 'mouse' as const, hotkey: 'm' },\n  { id: 'point', label: 'Bod', tool: 'point' as const, hotkey: 'p' },\n  { id: 'segment', label: 'Úsečka', tool: 'segment' as const, hotkey: 's' },\n  { id: 'line', label: 'Přímka', tool: 'line' as const, hotkey: 'l' },\n  { id: 'circle', label: 'Kružnice', tool: 'circle' as const, hotkey: 'c' },\n  { id: 'rubber', label: 'Guma', tool: 'rubber' as const, hotkey: 'r' }\n] as const\n\n// Physical tools\nexport const PHYSICAL_TOOLS = [\n  { id: 'ruler', label: 'Pravítko', hotkey: '1' },\n  { id: 'triangle', label: 'Trojúhelník', hotkey: '2' },\n  { id: 'protractor', label: 'Úhloměr', hotkey: '3' }\n] as const\n\n// Grid modes\nexport const GRID_MODES = [\n  { id: 'none', label: 'Žádná mřížka' },\n  { id: 'major', label: 'Hlavní mřížka' },\n  { id: 'minor', label: 'Vedlejší mřížka' },\n  { id: 'major-minor', label: 'Hlavní a vedlejší mřížka' },\n  { id: 'dot', label: 'Bodová mřížka' }\n] as const\n"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;;;;;;;;;;;;;AAE9C,MAAM,MAAM;AACZ,MAAM,YAAY,KAAK,+BAA+B;;AAGtD,MAAM,SAAS;IACpB,OAAO;IACP,YAAY;IACZ,SAAS;IACT,MAAM;IACN,QAAQ;IACR,sBAAsB;IACtB,mBAAmB;IACnB,YAAY;AACd;AAGO,MAAM,gBAAgB;IAC3B,QAAQ;IACR,QAAQ;IACR,SAAS;AACX;AAGO,MAAM,wBAAwB;IACnC,aAAa;QAAC,CAAC;QAAG;QAAG;QAAI,CAAC;KAAE;IAC5B,MAAM;IACN,gBAAgB;IAChB,eAAe;IACf,MAAM;IACN,KAAK;QAAE,SAAS;IAAM;IACtB,MAAM;IACN,iBAAiB;AACnB;AAGO,MAAM,kBAAkB;IAC7B;QAAE,IAAI;QAAS,OAAO;QAAO,MAAM;QAAkB,QAAQ;IAAI;IACjE;QAAE,IAAI;QAAS,OAAO;QAAO,MAAM;QAAkB,QAAQ;IAAI;IACjE;QAAE,IAAI;QAAW,OAAO;QAAU,MAAM;QAAoB,QAAQ;IAAI;IACxE;QAAE,IAAI;QAAQ,OAAO;QAAU,MAAM;QAAiB,QAAQ;IAAI;IAClE;QAAE,IAAI;QAAU,OAAO;QAAY,MAAM;QAAmB,QAAQ;IAAI;IACxE;QAAE,IAAI;QAAU,OAAO;QAAQ,MAAM;QAAmB,QAAQ;IAAI;CACrE;AAGM,MAAM,iBAAiB;IAC5B;QAAE,IAAI;QAAS,OAAO;QAAY,QAAQ;IAAI;IAC9C;QAAE,IAAI;QAAY,OAAO;QAAe,QAAQ;IAAI;IACpD;QAAE,IAAI;QAAc,OAAO;QAAW,QAAQ;IAAI;CACnD;AAGM,MAAM,aAAa;IACxB;QAAE,IAAI;QAAQ,OAAO;IAAe;IACpC;QAAE,IAAI;QAAS,OAAO;IAAgB;IACtC;QAAE,IAAI;QAAS,OAAO;IAAkB;IACxC;QAAE,IAAI;QAAe,OAAO;IAA2B;IACvD;QAAE,IAAI;QAAO,OAAO;IAAgB;CACrC","debugId":null}},
    {"offset": {"line": 4175, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/hittest.ts"],"sourcesContent":["import JXG from 'jsxgraph'\nimport { JBoard, MouseCoords, Point2D, HitTestResult } from './types'\nimport { EPS } from './constants'\n\nexport class HitTest {\n  private board: JBoard\n\n  constructor(board: JBoard) {\n    this.board = board\n  }\n\n  /**\n   * Get mouse coordinates from a JSXGraph event\n   */\n  getMouseCoords(e: any): MouseCoords {\n    const coords = this.board.getUsrCoordsOfMouse(e)\n    return { x: coords[0], y: coords[1] }\n  }\n\n  /**\n   * Get coordinates of a JSXGraph point\n   */\n  coordsOfPoint(p: any): Point2D {\n    return { x: p.X(), y: p.Y() }\n  }\n\n  /**\n   * Find a point under the mouse cursor\n   * Prefers non-fixed points\n   */\n  pointUnder(e: any): any | null {\n    const under = this.board.getAllObjectsUnderMouse(e)\n    return under.find((o: any) => o.elType === 'point') || null\n  }\n\n  /**\n   * Find the nearest free (non-fixed) point under the mouse\n   */\n  nearestFreePoint(e: any): any | null {\n    const under = this.board.getAllObjectsUnderMouse(e)\n    const pt = under.find((o: any) => o.elType === 'point' && !o.visProp.fixed)\n    return pt || null\n  }\n\n  /**\n   * Find all objects under the mouse cursor\n   */\n  getAllObjectsUnderMouse(e: any): any[] {\n    return this.board.getAllObjectsUnderMouse(e)\n  }\n\n  /**\n   * Find a nearby point within epsilon distance\n   */\n  findNearbyPoint(x: number, y: number, eps: number = EPS): any | null {\n    const objects = Object.values(this.board.objects) as any[]\n    return objects.find(o => \n      o?.elType === 'point' && \n      !o.visProp?.fixed &&\n      Math.hypot(o.X() - x, o.Y() - y) <= eps\n    ) || null\n  }\n\n  /**\n   * Check if a point is under the mouse cursor\n   */\n  isPointUnderMouse(point: any, e: any): boolean {\n    const under = this.board.getAllObjectsUnderMouse(e)\n    return under.some((o: any) => o.id === point.id)\n  }\n\n  /**\n   * Get comprehensive hit test results\n   */\n  getHitTestResult(e: any): HitTestResult {\n    const allObjects = this.getAllObjectsUnderMouse(e)\n    const point = this.pointUnder(e)\n    const nearestPoint = this.nearestFreePoint(e)\n\n    return {\n      point,\n      allObjects,\n      nearestPoint\n    }\n  }\n\n  /**\n   * Calculate distance between two points\n   */\n  distance(a: Point2D, b: Point2D): number {\n    return Math.hypot(a.x - b.x, a.y - b.y)\n  }\n\n  /**\n   * Check if two points are close enough (within epsilon)\n   */\n  isClose(a: Point2D, b: Point2D, eps: number = EPS): boolean {\n    return this.distance(a, b) <= eps\n  }\n\n  /**\n   * Check if a click is within the click threshold (not a drag)\n   */\n  isClick(downPos: Point2D, upPos: Point2D, threshold: number = 0.12): boolean {\n    return this.distance(downPos, upPos) <= threshold\n  }\n\n  /**\n   * Find all points within a given radius of a coordinate\n   */\n  findPointsInRadius(center: Point2D, radius: number): any[] {\n    const objects = Object.values(this.board.objects) as any[]\n    return objects.filter(o => \n      o?.elType === 'point' && \n      !o.visProp?.fixed &&\n      this.distance(center, { x: o.X(), y: o.Y() }) <= radius\n    )\n  }\n\n  /**\n   * Find the closest point to a given coordinate\n   */\n  findClosestPoint(target: Point2D): any | null {\n    const objects = Object.values(this.board.objects) as any[]\n    let closest: any | null = null\n    let minDistance = Infinity\n\n    for (const o of objects) {\n      if (o?.elType === 'point' && !o.visProp?.fixed) {\n        const distance = this.distance(target, { x: o.X(), y: o.Y() })\n        if (distance < minDistance) {\n          minDistance = distance\n          closest = o\n        }\n      }\n    }\n\n    return closest\n  }\n\n  /**\n   * Check if an event target is a physical tool element\n   */\n  isPhysicalToolElement(target: HTMLElement): boolean {\n    return !!(target.closest('.group') || target.classList.contains('group'))\n  }\n\n  /**\n   * Prevent default behavior for an event\n   */\n  preventDefault(e: any): void {\n    if (e?.originalEvent) {\n      e.originalEvent.preventDefault()\n      e.originalEvent.stopPropagation()\n    }\n  }\n\n  /**\n   * Stop event propagation\n   */\n  stopPropagation(e: any): void {\n    if (e?.originalEvent) {\n      e.originalEvent.stopPropagation()\n    }\n  }\n}\n\n/**\n * Utility functions for event handling\n */\nexport class EventUtils {\n  /**\n   * Create a debounced event handler\n   */\n  static debounce<T extends (...args: any[]) => void>(\n    func: T,\n    wait: number\n  ): (...args: Parameters<T>) => void {\n    let timeout: NodeJS.Timeout\n    return (...args: Parameters<T>) => {\n      clearTimeout(timeout)\n      timeout = setTimeout(() => func(...args), wait)\n    }\n  }\n\n  /**\n   * Create a throttled event handler\n   */\n  static throttle<T extends (...args: any[]) => void>(\n    func: T,\n    limit: number\n  ): (...args: Parameters<T>) => void {\n    let inThrottle: boolean\n    return (...args: Parameters<T>) => {\n      if (!inThrottle) {\n        func(...args)\n        inThrottle = true\n        setTimeout(() => inThrottle = false, limit)\n      }\n    }\n  }\n\n  /**\n   * Check if an event is a left mouse button click\n   */\n  static isLeftClick(e: MouseEvent): boolean {\n    return e.button === 0\n  }\n\n  /**\n   * Check if an event is a right mouse button click\n   */\n  static isRightClick(e: MouseEvent): boolean {\n    return e.button === 2\n  }\n\n  /**\n   * Check if modifier keys are pressed\n   */\n  static hasModifierKeys(e: KeyboardEvent | MouseEvent): boolean {\n    return e.ctrlKey || e.metaKey || e.altKey || e.shiftKey\n  }\n\n  /**\n   * Get the target element from an event\n   */\n  static getTarget(e: Event): HTMLElement | null {\n    return e.target as HTMLElement\n  }\n\n  /**\n   * Check if the target is within a specific container\n   */\n  static isWithinContainer(target: HTMLElement, container: HTMLElement): boolean {\n    return container.contains(target)\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4365, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/geometry-factory.ts"],"sourcesContent":["import JXG from 'jsxgraph'\nimport { JBoard, CreateAttrs, Point2D, GeometryFactoryOptions } from './types'\nimport { COLORS, SNAP_SETTINGS, EPS } from './constants'\n\nexport class GeometryFactory {\n  private board: JBoard\n  private options: GeometryFactoryOptions\n\n  constructor(board: JBoard, options: GeometryFactoryOptions = {}) {\n    this.board = board\n    this.options = {\n      snapToGrid: true,\n      defaultAttrs: {},\n      ...options\n    }\n  }\n\n  /**\n   * Create a point with consistent attributes\n   */\n  point(x: number, y: number, snap?: boolean, attrs: CreateAttrs = {}): JXG.Point {\n    const snapToGrid = snap !== undefined ? snap : this.options.snapToGrid\n    const defaultAttrs: CreateAttrs = {\n      name: '',\n      size: COLORS.POINT_SIZE,\n      strokeColor: COLORS.POINT,\n      fillColor: COLORS.POINT_FILL,\n      snapToGrid,\n      snapSizeX: SNAP_SETTINGS.SIZE_X,\n      snapSizeY: SNAP_SETTINGS.SIZE_Y,\n      ...this.options.defaultAttrs,\n      ...attrs\n    }\n\n    const pt = this.board.create('point', [x, y], defaultAttrs) as JXG.Point\n    ;(pt as any)._rawName = ''\n    return pt\n  }\n\n  /**\n   * Create a segment with consistent attributes\n   */\n  segment(a: any, b: any, attrs: CreateAttrs = {}): JXG.Segment {\n    const defaultAttrs: CreateAttrs = {\n      strokeColor: COLORS.SEGMENT,\n      strokeWidth: COLORS.DEFAULT_STROKE_WIDTH,\n      ...this.options.defaultAttrs,\n      ...attrs\n    }\n\n    return this.board.create('segment', [a, b], defaultAttrs) as JXG.Segment\n  }\n\n  /**\n   * Create a line with consistent attributes\n   */\n  line(a: any, b: any, attrs: CreateAttrs = {}): JXG.Line {\n    const defaultAttrs: CreateAttrs = {\n      strokeColor: COLORS.LINE,\n      strokeWidth: COLORS.LINE_STROKE_WIDTH,\n      dash: 1,\n      ...this.options.defaultAttrs,\n      ...attrs\n    }\n\n    return this.board.create('line', [a, b], defaultAttrs) as JXG.Line\n  }\n\n  /**\n   * Create a circle with consistent attributes\n   */\n  circle(center: any, on: any, attrs: CreateAttrs = {}): JXG.Circle {\n    const defaultAttrs: CreateAttrs = {\n      strokeColor: COLORS.CIRCLE,\n      strokeWidth: COLORS.DEFAULT_STROKE_WIDTH,\n      ...this.options.defaultAttrs,\n      ...attrs\n    }\n\n    return this.board.create('circle', [center, on], defaultAttrs) as JXG.Circle\n  }\n\n  /**\n   * Find a nearby point within epsilon distance\n   */\n  findNearbyPoint(x: number, y: number, eps: number = EPS): any | null {\n    const objects = Object.values(this.board.objects) as any[]\n    return objects.find(o => \n      o?.elType === 'point' && \n      !o.visProp?.fixed &&\n      Math.hypot(o.X() - x, o.Y() - y) <= eps\n    ) || null\n  }\n\n  /**\n   * Get or create a point at the given coordinates\n   * Reuses existing points if they're close enough\n   */\n  getOrCreatePoint(xy: Point2D, snap?: boolean, attrs: CreateAttrs = {}): any {\n    // Try to reuse an existing non-fixed point near the coordinates\n    const existing = this.findNearbyPoint(xy.x, xy.y, EPS)\n    if (existing) {\n      return existing\n    }\n\n    // Create new point\n    return this.point(xy.x, xy.y, snap, attrs)\n  }\n\n  /**\n   * Create multiple points from an array of coordinates\n   */\n  createPoints(coordinates: Point2D[], snap?: boolean, attrs: CreateAttrs = {}): JXG.Point[] {\n    return coordinates.map(coord => this.point(coord.x, coord.y, snap, attrs))\n  }\n\n  /**\n   * Create a segment from two coordinate points\n   */\n  createSegmentFromCoords(p1: Point2D, p2: Point2D, snap?: boolean, attrs: CreateAttrs = {}): JXG.Segment {\n    const point1 = this.getOrCreatePoint(p1, snap)\n    const point2 = this.getOrCreatePoint(p2, snap)\n    return this.segment(point1, point2, attrs)\n  }\n\n  /**\n   * Create a line from two coordinate points\n   */\n  createLineFromCoords(p1: Point2D, p2: Point2D, snap?: boolean, attrs: CreateAttrs = {}): JXG.Line {\n    const point1 = this.getOrCreatePoint(p1, snap)\n    const point2 = this.getOrCreatePoint(p2, snap)\n    return this.line(point1, point2, attrs)\n  }\n\n  /**\n   * Create a circle from center and point on circle coordinates\n   */\n  createCircleFromCoords(center: Point2D, onCircle: Point2D, snap?: boolean, attrs: CreateAttrs = {}): JXG.Circle {\n    const centerPoint = this.getOrCreatePoint(center, snap)\n    const onPoint = this.getOrCreatePoint(onCircle, snap)\n    return this.circle(centerPoint, onPoint, attrs)\n  }\n\n  /**\n   * Update the factory options\n   */\n  updateOptions(options: Partial<GeometryFactoryOptions>): void {\n    this.options = { ...this.options, ...options }\n  }\n\n  /**\n   * Get current factory options\n   */\n  getOptions(): GeometryFactoryOptions {\n    return { ...this.options }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4511, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/tools/controller.ts"],"sourcesContent":["import { Tool, ToolStrategy, JBoard } from '../types'\nimport { HitTest } from '../hittest'\nimport { SelectionManager } from '../selection-manager'\nimport { GeometryFactory } from '../geometry-factory'\nimport { UndoRedoManager } from '../undo-redo'\n\nexport interface ToolControllerCallbacks {\n  onFeedback: (message: string) => void\n  onSelectionChange: (selected: any[]) => void\n}\n\nexport class ToolController {\n  private board: JBoard\n  private hitTest: HitTest\n  private selectionManager: SelectionManager\n  private geometryFactory: GeometryFactory\n  private undoRedoManager: UndoRedoManager | null = null\n  private callbacks: ToolControllerCallbacks\n  private currentTool: Tool = 'mouse'\n  private toolStrategies: Map<Tool, ToolStrategy> = new Map()\n\n  constructor(\n    board: JBoard,\n    selectionManager: SelectionManager,\n    callbacks: ToolControllerCallbacks\n  ) {\n    this.board = board\n    this.hitTest = new HitTest(board)\n    this.selectionManager = selectionManager\n    this.geometryFactory = new GeometryFactory(board)\n    this.callbacks = callbacks\n  }\n\n  /**\n   * Set the undo/redo manager\n   */\n  setUndoRedoManager(manager: UndoRedoManager): void {\n    this.undoRedoManager = manager\n  }\n\n  /**\n   * Set the current tool\n   */\n  setTool(tool: Tool): void {\n    this.currentTool = tool\n    this.selectionManager.clear()\n  }\n\n  /**\n   * Get the current tool\n   */\n  getCurrentTool(): Tool {\n    return this.currentTool\n  }\n\n  /**\n   * Register a tool strategy\n   */\n  registerTool(tool: Tool, strategy: ToolStrategy): void {\n    this.toolStrategies.set(tool, strategy)\n  }\n\n  /**\n   * Handle click events\n   */\n  handleClick(e: any): void {\n    // Check if the click is on a physical tool\n    const target = e.originalEvent?.target as HTMLElement\n    if (target && this.hitTest.isPhysicalToolElement(target)) {\n      return // Let the physical tool handle the interaction\n    }\n\n    const strategy = this.toolStrategies.get(this.currentTool)\n    if (strategy) {\n      strategy.onClick(e)\n    }\n  }\n\n  /**\n   * Handle mouse down events\n   */\n  handleDown(e: any): void {\n    const strategy = this.toolStrategies.get(this.currentTool)\n    if (strategy && strategy.onDown) {\n      strategy.onDown(e)\n    }\n  }\n\n  /**\n   * Handle mouse up events\n   */\n  handleUp(e: any): void {\n    const strategy = this.toolStrategies.get(this.currentTool)\n    if (strategy && strategy.onUp) {\n      strategy.onUp(e)\n    }\n  }\n\n  /**\n   * Get the hit test utility\n   */\n  getHitTest(): HitTest {\n    return this.hitTest\n  }\n\n  /**\n   * Get the selection manager\n   */\n  getSelectionManager(): SelectionManager {\n    return this.selectionManager\n  }\n\n  /**\n   * Get the geometry factory\n   */\n  getGeometryFactory(): GeometryFactory {\n    return this.geometryFactory\n  }\n\n  /**\n   * Get the undo/redo manager\n   */\n  getUndoRedoManager(): UndoRedoManager | null {\n    return this.undoRedoManager\n  }\n\n  /**\n   * Get the board\n   */\n  getBoard(): JBoard {\n    return this.board\n  }\n\n  /**\n   * Get callbacks\n   */\n  getCallbacks(): ToolControllerCallbacks {\n    return this.callbacks\n  }\n\n  /**\n   * Reset the tool controller\n   */\n  reset(): void {\n    this.currentTool = 'mouse'\n    this.selectionManager.clear()\n    this.toolStrategies.clear()\n  }\n}\n"],"names":[],"mappings":";;;;AACA;AAEA;;;AAQO,MAAM;IACH,MAAa;IACb,QAAgB;IAChB,iBAAkC;IAClC,gBAAgC;IAChC,kBAA0C,KAAI;IAC9C,UAAkC;IAClC,cAAoB,QAAO;IAC3B,iBAA0C,IAAI,MAAK;IAE3D,YACE,KAAa,EACb,gBAAkC,EAClC,SAAkC,CAClC;QACA,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,OAAO,GAAG,IAAI,yJAAO,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,eAAe,GAAG,IAAI,6KAAe,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG;IACnB;IAEA;;GAEC,GACD,mBAAmB,OAAwB,EAAQ;QACjD,IAAI,CAAC,eAAe,GAAG;IACzB;IAEA;;GAEC,GACD,QAAQ,IAAU,EAAQ;QACxB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,gBAAgB,CAAC,KAAK;IAC7B;IAEA;;GAEC,GACD,iBAAuB;QACrB,OAAO,IAAI,CAAC,WAAW;IACzB;IAEA;;GAEC,GACD,aAAa,IAAU,EAAE,QAAsB,EAAQ;QACrD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM;IAChC;IAEA;;GAEC,GACD,YAAY,CAAM,EAAQ;QACxB,2CAA2C;QAC3C,MAAM,SAAS,EAAE,aAAa,EAAE;QAChC,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,SAAS;YACxD,QAAO,+CAA+C;QACxD;QAEA,MAAM,WAAW,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW;QACzD,IAAI,UAAU;YACZ,SAAS,OAAO,CAAC;QACnB;IACF;IAEA;;GAEC,GACD,WAAW,CAAM,EAAQ;QACvB,MAAM,WAAW,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW;QACzD,IAAI,YAAY,SAAS,MAAM,EAAE;YAC/B,SAAS,MAAM,CAAC;QAClB;IACF;IAEA;;GAEC,GACD,SAAS,CAAM,EAAQ;QACrB,MAAM,WAAW,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW;QACzD,IAAI,YAAY,SAAS,IAAI,EAAE;YAC7B,SAAS,IAAI,CAAC;QAChB;IACF;IAEA;;GAEC,GACD,aAAsB;QACpB,OAAO,IAAI,CAAC,OAAO;IACrB;IAEA;;GAEC,GACD,sBAAwC;QACtC,OAAO,IAAI,CAAC,gBAAgB;IAC9B;IAEA;;GAEC,GACD,qBAAsC;QACpC,OAAO,IAAI,CAAC,eAAe;IAC7B;IAEA;;GAEC,GACD,qBAA6C;QAC3C,OAAO,IAAI,CAAC,eAAe;IAC7B;IAEA;;GAEC,GACD,WAAmB;QACjB,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA;;GAEC,GACD,eAAwC;QACtC,OAAO,IAAI,CAAC,SAAS;IACvB;IAEA;;GAEC,GACD,QAAc;QACZ,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,gBAAgB,CAAC,KAAK;QAC3B,IAAI,CAAC,cAAc,CAAC,KAAK;IAC3B;AACF","debugId":null}},
    {"offset": {"line": 4627, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/tools/tool-mouse.ts"],"sourcesContent":["import { ToolStrategy } from '../../types'\nimport { ToolController } from './controller'\n\nexport class MouseToolStrategy implements ToolStrategy {\n  constructor(private controller: ToolController) {}\n\n  onClick(e: any): void {\n    const hitTest = this.controller.getHitTest()\n    const callbacks = this.controller.getCallbacks()\n    \n    // Check if clicking on a point and prevent default behavior\n    const under = hitTest.getAllObjectsUnderMouse(e)\n    const clickedPoint = under.find((o: any) => o.elType === 'point' && !o.visProp.fixed)\n    \n    if (clickedPoint) {\n      // Prevent default JSXGraph behavior for points when using mouse tool\n      hitTest.preventDefault(e)\n      callbacks.onFeedback('Bod vybrán')\n    } else {\n      callbacks.onFeedback('')\n    }\n  }\n}\n"],"names":[],"mappings":";;;;AAGO,MAAM;;IACX,YAAY,AAAQ,UAA0B,CAAE;aAA5B,aAAA;IAA6B;IAEjD,QAAQ,CAAM,EAAQ;QACpB,MAAM,UAAU,IAAI,CAAC,UAAU,CAAC,UAAU;QAC1C,MAAM,YAAY,IAAI,CAAC,UAAU,CAAC,YAAY;QAE9C,4DAA4D;QAC5D,MAAM,QAAQ,QAAQ,uBAAuB,CAAC;QAC9C,MAAM,eAAe,MAAM,IAAI,CAAC,CAAC,IAAW,EAAE,MAAM,KAAK,WAAW,CAAC,EAAE,OAAO,CAAC,KAAK;QAEpF,IAAI,cAAc;YAChB,qEAAqE;YACrE,QAAQ,cAAc,CAAC;YACvB,UAAU,UAAU,CAAC;QACvB,OAAO;YACL,UAAU,UAAU,CAAC;QACvB;IACF;AACF","debugId":null}},
    {"offset": {"line": 4655, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/tools/tool-point.ts"],"sourcesContent":["import { ToolStrategy } from '../../types'\nimport { ToolController } from './controller'\n\nexport class PointToolStrategy implements ToolStrategy {\n  constructor(private controller: ToolController) {}\n\n  onClick(e: any): void {\n    const hitTest = this.controller.getHitTest()\n    const undoRedoManager = this.controller.getUndoRedoManager()\n    const callbacks = this.controller.getCallbacks()\n    \n    const xy = hitTest.getMouseCoords(e)\n    const attr = { name: '', size: 2, strokeColor: '#444', fillColor: '#666' }\n    \n    const op = undoRedoManager?.createPointOperation(xy.x, xy.y, attr)\n    if (op) {\n      undoRedoManager?.pushOperation(op)\n    }\n    \n    callbacks.onFeedback('Bod vytvořen')\n  }\n}\n"],"names":[],"mappings":";;;;AAGO,MAAM;;IACX,YAAY,AAAQ,UAA0B,CAAE;aAA5B,aAAA;IAA6B;IAEjD,QAAQ,CAAM,EAAQ;QACpB,MAAM,UAAU,IAAI,CAAC,UAAU,CAAC,UAAU;QAC1C,MAAM,kBAAkB,IAAI,CAAC,UAAU,CAAC,kBAAkB;QAC1D,MAAM,YAAY,IAAI,CAAC,UAAU,CAAC,YAAY;QAE9C,MAAM,KAAK,QAAQ,cAAc,CAAC;QAClC,MAAM,OAAO;YAAE,MAAM;YAAI,MAAM;YAAG,aAAa;YAAQ,WAAW;QAAO;QAEzE,MAAM,KAAK,iBAAiB,qBAAqB,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE;QAC7D,IAAI,IAAI;YACN,iBAAiB,cAAc;QACjC;QAEA,UAAU,UAAU,CAAC;IACvB;AACF","debugId":null}},
    {"offset": {"line": 4686, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/tools/tool-segment.ts"],"sourcesContent":["import { ToolStrategy } from '../../types'\nimport { ToolController } from './controller'\n\nexport class SegmentToolStrategy implements ToolStrategy {\n  constructor(private controller: ToolController) {}\n\n  onClick(e: any): void {\n    const hitTest = this.controller.getHitTest()\n    const selectionManager = this.controller.getSelectionManager()\n    const geometryFactory = this.controller.getGeometryFactory()\n    const undoRedoManager = this.controller.getUndoRedoManager()\n    const callbacks = this.controller.getCallbacks()\n    \n    const xy = hitTest.getMouseCoords(e)\n    const first = selectionManager.getFirst()\n\n    if (!first) {\n      // First click\n      undoRedoManager?.begin()\n      const p = geometryFactory.getOrCreatePoint(xy)\n      if (!p) { \n        undoRedoManager?.commit()\n        return\n      }\n      \n      selectionManager.startMultiStepSelection(p)\n      callbacks.onFeedback('Klikněte na druhý bod')\n      return\n    }\n\n    // Second click\n    const a = first\n    const b = geometryFactory.getOrCreatePoint(xy)\n    if (!b) { \n      undoRedoManager?.commit()\n      selectionManager.clear()\n      return\n    }\n\n    const p1 = { x: a.X(), y: a.Y() }\n    const p2 = { x: b.X(), y: b.Y() }\n    const attr = { strokeColor: '#2563eb', strokeWidth: 2 }\n    \n    const op = undoRedoManager?.createSegmentOperation(p1, p2, attr)\n    if (op) {\n      op.pointIds = [a.id, b.id]\n      undoRedoManager?.pushOperation(op)\n    }\n    \n    undoRedoManager?.commit()\n    selectionManager.completeMultiStepSelection()\n    callbacks.onFeedback('Úsečka vytvořena')\n  }\n}\n"],"names":[],"mappings":";;;;AAGO,MAAM;;IACX,YAAY,AAAQ,UAA0B,CAAE;aAA5B,aAAA;IAA6B;IAEjD,QAAQ,CAAM,EAAQ;QACpB,MAAM,UAAU,IAAI,CAAC,UAAU,CAAC,UAAU;QAC1C,MAAM,mBAAmB,IAAI,CAAC,UAAU,CAAC,mBAAmB;QAC5D,MAAM,kBAAkB,IAAI,CAAC,UAAU,CAAC,kBAAkB;QAC1D,MAAM,kBAAkB,IAAI,CAAC,UAAU,CAAC,kBAAkB;QAC1D,MAAM,YAAY,IAAI,CAAC,UAAU,CAAC,YAAY;QAE9C,MAAM,KAAK,QAAQ,cAAc,CAAC;QAClC,MAAM,QAAQ,iBAAiB,QAAQ;QAEvC,IAAI,CAAC,OAAO;YACV,cAAc;YACd,iBAAiB;YACjB,MAAM,IAAI,gBAAgB,gBAAgB,CAAC;YAC3C,IAAI,CAAC,GAAG;gBACN,iBAAiB;gBACjB;YACF;YAEA,iBAAiB,uBAAuB,CAAC;YACzC,UAAU,UAAU,CAAC;YACrB;QACF;QAEA,eAAe;QACf,MAAM,IAAI;QACV,MAAM,IAAI,gBAAgB,gBAAgB,CAAC;QAC3C,IAAI,CAAC,GAAG;YACN,iBAAiB;YACjB,iBAAiB,KAAK;YACtB;QACF;QAEA,MAAM,KAAK;YAAE,GAAG,EAAE,CAAC;YAAI,GAAG,EAAE,CAAC;QAAG;QAChC,MAAM,KAAK;YAAE,GAAG,EAAE,CAAC;YAAI,GAAG,EAAE,CAAC;QAAG;QAChC,MAAM,OAAO;YAAE,aAAa;YAAW,aAAa;QAAE;QAEtD,MAAM,KAAK,iBAAiB,uBAAuB,IAAI,IAAI;QAC3D,IAAI,IAAI;YACN,GAAG,QAAQ,GAAG;gBAAC,EAAE,EAAE;gBAAE,EAAE,EAAE;aAAC;YAC1B,iBAAiB,cAAc;QACjC;QAEA,iBAAiB;QACjB,iBAAiB,0BAA0B;QAC3C,UAAU,UAAU,CAAC;IACvB;AACF","debugId":null}},
    {"offset": {"line": 4752, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/tools/tool-line.ts"],"sourcesContent":["import { ToolStrategy } from '../../types'\nimport { ToolController } from './controller'\n\nexport class LineToolStrategy implements ToolStrategy {\n  constructor(private controller: ToolController) {}\n\n  onClick(e: any): void {\n    const hitTest = this.controller.getHitTest()\n    const selectionManager = this.controller.getSelectionManager()\n    const geometryFactory = this.controller.getGeometryFactory()\n    const undoRedoManager = this.controller.getUndoRedoManager()\n    const callbacks = this.controller.getCallbacks()\n    \n    const xy = hitTest.getMouseCoords(e)\n    const first = selectionManager.getFirst()\n\n    if (!first) {\n      // First click\n      undoRedoManager?.begin()\n      const p = geometryFactory.getOrCreatePoint(xy)\n      if (!p) { \n        undoRedoManager?.commit()\n        return\n      }\n      \n      selectionManager.startMultiStepSelection(p)\n      callbacks.onFeedback('Klikněte na druhý bod')\n      return\n    }\n\n    // Second click\n    const a = first\n    const b = geometryFactory.getOrCreatePoint(xy)\n    if (!b) { \n      undoRedoManager?.commit()\n      selectionManager.clear()\n      return\n    }\n\n    const p1 = { x: a.X(), y: a.Y() }\n    const p2 = { x: b.X(), y: b.Y() }\n    const attr = { strokeColor: '#059669', strokeWidth: 1, dash: 1 }\n    \n    const op = undoRedoManager?.createLineOperation(p1, p2, attr)\n    if (op) {\n      op.pointIds = [a.id, b.id]\n      undoRedoManager?.pushOperation(op)\n    }\n    \n    undoRedoManager?.commit()\n    selectionManager.completeMultiStepSelection()\n    callbacks.onFeedback('Přímka vytvořena')\n  }\n}\n"],"names":[],"mappings":";;;;AAGO,MAAM;;IACX,YAAY,AAAQ,UAA0B,CAAE;aAA5B,aAAA;IAA6B;IAEjD,QAAQ,CAAM,EAAQ;QACpB,MAAM,UAAU,IAAI,CAAC,UAAU,CAAC,UAAU;QAC1C,MAAM,mBAAmB,IAAI,CAAC,UAAU,CAAC,mBAAmB;QAC5D,MAAM,kBAAkB,IAAI,CAAC,UAAU,CAAC,kBAAkB;QAC1D,MAAM,kBAAkB,IAAI,CAAC,UAAU,CAAC,kBAAkB;QAC1D,MAAM,YAAY,IAAI,CAAC,UAAU,CAAC,YAAY;QAE9C,MAAM,KAAK,QAAQ,cAAc,CAAC;QAClC,MAAM,QAAQ,iBAAiB,QAAQ;QAEvC,IAAI,CAAC,OAAO;YACV,cAAc;YACd,iBAAiB;YACjB,MAAM,IAAI,gBAAgB,gBAAgB,CAAC;YAC3C,IAAI,CAAC,GAAG;gBACN,iBAAiB;gBACjB;YACF;YAEA,iBAAiB,uBAAuB,CAAC;YACzC,UAAU,UAAU,CAAC;YACrB;QACF;QAEA,eAAe;QACf,MAAM,IAAI;QACV,MAAM,IAAI,gBAAgB,gBAAgB,CAAC;QAC3C,IAAI,CAAC,GAAG;YACN,iBAAiB;YACjB,iBAAiB,KAAK;YACtB;QACF;QAEA,MAAM,KAAK;YAAE,GAAG,EAAE,CAAC;YAAI,GAAG,EAAE,CAAC;QAAG;QAChC,MAAM,KAAK;YAAE,GAAG,EAAE,CAAC;YAAI,GAAG,EAAE,CAAC;QAAG;QAChC,MAAM,OAAO;YAAE,aAAa;YAAW,aAAa;YAAG,MAAM;QAAE;QAE/D,MAAM,KAAK,iBAAiB,oBAAoB,IAAI,IAAI;QACxD,IAAI,IAAI;YACN,GAAG,QAAQ,GAAG;gBAAC,EAAE,EAAE;gBAAE,EAAE,EAAE;aAAC;YAC1B,iBAAiB,cAAc;QACjC;QAEA,iBAAiB;QACjB,iBAAiB,0BAA0B;QAC3C,UAAU,UAAU,CAAC;IACvB;AACF","debugId":null}},
    {"offset": {"line": 4819, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/tools/tool-circle.ts"],"sourcesContent":["import { ToolStrategy } from '../../types'\nimport { ToolController } from './controller'\n\nexport class CircleToolStrategy implements ToolStrategy {\n  constructor(private controller: ToolController) {}\n\n  onClick(e: any): void {\n    const hitTest = this.controller.getHitTest()\n    const selectionManager = this.controller.getSelectionManager()\n    const geometryFactory = this.controller.getGeometryFactory()\n    const undoRedoManager = this.controller.getUndoRedoManager()\n    const callbacks = this.controller.getCallbacks()\n    \n    const xy = hitTest.getMouseCoords(e)\n    const first = selectionManager.getFirst()\n\n    if (!first) {\n      // First click - center\n      undoRedoManager?.begin()\n      const c = geometryFactory.getOrCreatePoint(xy)\n      if (!c) { \n        undoRedoManager?.commit()\n        return\n      }\n      \n      selectionManager.startMultiStepSelection(c)\n      callbacks.onFeedback('Klikněte na bod na kružnici')\n      return\n    }\n\n    // Second click - point on circle\n    const center = first\n    const p = geometryFactory.getOrCreatePoint(xy)\n    if (!p) { \n      undoRedoManager?.commit()\n      selectionManager.clear()\n      return\n    }\n\n    const centerCoords = { x: center.X(), y: center.Y() }\n    const onCoords = { x: p.X(), y: p.Y() }\n    const attr = { strokeColor: '#dc2626', strokeWidth: 2 }\n    \n    const op = undoRedoManager?.createCircleOperation(centerCoords, onCoords, attr)\n    if (op) {\n      op.pointIds = [center.id, p.id]\n      undoRedoManager?.pushOperation(op)\n    }\n    \n    undoRedoManager?.commit()\n    selectionManager.completeMultiStepSelection()\n    callbacks.onFeedback('Kružnice vytvořena')\n  }\n}\n"],"names":[],"mappings":";;;;AAGO,MAAM;;IACX,YAAY,AAAQ,UAA0B,CAAE;aAA5B,aAAA;IAA6B;IAEjD,QAAQ,CAAM,EAAQ;QACpB,MAAM,UAAU,IAAI,CAAC,UAAU,CAAC,UAAU;QAC1C,MAAM,mBAAmB,IAAI,CAAC,UAAU,CAAC,mBAAmB;QAC5D,MAAM,kBAAkB,IAAI,CAAC,UAAU,CAAC,kBAAkB;QAC1D,MAAM,kBAAkB,IAAI,CAAC,UAAU,CAAC,kBAAkB;QAC1D,MAAM,YAAY,IAAI,CAAC,UAAU,CAAC,YAAY;QAE9C,MAAM,KAAK,QAAQ,cAAc,CAAC;QAClC,MAAM,QAAQ,iBAAiB,QAAQ;QAEvC,IAAI,CAAC,OAAO;YACV,uBAAuB;YACvB,iBAAiB;YACjB,MAAM,IAAI,gBAAgB,gBAAgB,CAAC;YAC3C,IAAI,CAAC,GAAG;gBACN,iBAAiB;gBACjB;YACF;YAEA,iBAAiB,uBAAuB,CAAC;YACzC,UAAU,UAAU,CAAC;YACrB;QACF;QAEA,iCAAiC;QACjC,MAAM,SAAS;QACf,MAAM,IAAI,gBAAgB,gBAAgB,CAAC;QAC3C,IAAI,CAAC,GAAG;YACN,iBAAiB;YACjB,iBAAiB,KAAK;YACtB;QACF;QAEA,MAAM,eAAe;YAAE,GAAG,OAAO,CAAC;YAAI,GAAG,OAAO,CAAC;QAAG;QACpD,MAAM,WAAW;YAAE,GAAG,EAAE,CAAC;YAAI,GAAG,EAAE,CAAC;QAAG;QACtC,MAAM,OAAO;YAAE,aAAa;YAAW,aAAa;QAAE;QAEtD,MAAM,KAAK,iBAAiB,sBAAsB,cAAc,UAAU;QAC1E,IAAI,IAAI;YACN,GAAG,QAAQ,GAAG;gBAAC,OAAO,EAAE;gBAAE,EAAE,EAAE;aAAC;YAC/B,iBAAiB,cAAc;QACjC;QAEA,iBAAiB;QACjB,iBAAiB,0BAA0B;QAC3C,UAAU,UAAU,CAAC;IACvB;AACF","debugId":null}},
    {"offset": {"line": 4885, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/tools/tool-rubber.ts"],"sourcesContent":["import { ToolStrategy } from '../../types'\nimport { ToolController } from './controller'\n\nexport class RubberToolStrategy implements ToolStrategy {\n  constructor(private controller: ToolController) {}\n\n  onClick(e: any): void {\n    const hitTest = this.controller.getHitTest()\n    const undoRedoManager = this.controller.getUndoRedoManager()\n    const callbacks = this.controller.getCallbacks()\n    \n    const under = hitTest.getAllObjectsUnderMouse(e)\n    const toRemove = under.find((o: any) => !o.visProp?.fixed)\n    \n    if (toRemove) {\n      const delOp = undoRedoManager?.createDeleteOperation(toRemove)\n      if (delOp) {\n        undoRedoManager?.pushOperation(delOp)\n        callbacks.onFeedback('Objekt smazán')\n      } else {\n        // Fallback: hard remove (won't be undoable)\n        this.controller.getBoard().removeObject(toRemove)\n        callbacks.onFeedback('Objekt smazán (bez historie)')\n      }\n    }\n  }\n}\n"],"names":[],"mappings":";;;;AAGO,MAAM;;IACX,YAAY,AAAQ,UAA0B,CAAE;aAA5B,aAAA;IAA6B;IAEjD,QAAQ,CAAM,EAAQ;QACpB,MAAM,UAAU,IAAI,CAAC,UAAU,CAAC,UAAU;QAC1C,MAAM,kBAAkB,IAAI,CAAC,UAAU,CAAC,kBAAkB;QAC1D,MAAM,YAAY,IAAI,CAAC,UAAU,CAAC,YAAY;QAE9C,MAAM,QAAQ,QAAQ,uBAAuB,CAAC;QAC9C,MAAM,WAAW,MAAM,IAAI,CAAC,CAAC,IAAW,CAAC,EAAE,OAAO,EAAE;QAEpD,IAAI,UAAU;YACZ,MAAM,QAAQ,iBAAiB,sBAAsB;YACrD,IAAI,OAAO;gBACT,iBAAiB,cAAc;gBAC/B,UAAU,UAAU,CAAC;YACvB,OAAO;gBACL,4CAA4C;gBAC5C,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,YAAY,CAAC;gBACxC,UAAU,UAAU,CAAC;YACvB;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 4917, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/tools/index.ts"],"sourcesContent":["export { ToolController } from './controller'\nexport { MouseToolStrategy } from './tool-mouse'\nexport { PointToolStrategy } from './tool-point'\nexport { SegmentToolStrategy } from './tool-segment'\nexport { LineToolStrategy } from './tool-line'\nexport { CircleToolStrategy } from './tool-circle'\nexport { RubberToolStrategy } from './tool-rubber'\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 4936, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/selection-manager.ts"],"sourcesContent":["import { SelectionState } from './types'\n\nexport class SelectionManager {\n  private state: SelectionState = {\n    selected: [],\n    firstClick: null\n  }\n\n  private listeners: Array<(state: SelectionState) => void> = []\n\n  /**\n   * Get the current selection state\n   */\n  getState(): SelectionState {\n    return { ...this.state }\n  }\n\n  /**\n   * Get the currently selected objects\n   */\n  getSelected(): any[] {\n    return [...this.state.selected]\n  }\n\n  /**\n   * Get the first click object (for multi-step tools)\n   */\n  getFirst(): any | null {\n    return this.state.firstClick\n  }\n\n  /**\n   * Check if there's a first click waiting\n   */\n  hasFirstClick(): boolean {\n    return this.state.firstClick !== null\n  }\n\n  /**\n   * Set the selected objects\n   */\n  setSelected(selected: any[]): void {\n    this.state.selected = [...selected]\n    this.notifyListeners()\n  }\n\n  /**\n   * Set the first click object\n   */\n  setFirst(first: any | null): void {\n    this.state.firstClick = first\n    this.notifyListeners()\n  }\n\n  /**\n   * Add an object to the selection\n   */\n  addToSelection(obj: any): void {\n    if (!this.state.selected.includes(obj)) {\n      this.state.selected.push(obj)\n      this.notifyListeners()\n    }\n  }\n\n  /**\n   * Remove an object from the selection\n   */\n  removeFromSelection(obj: any): void {\n    const index = this.state.selected.indexOf(obj)\n    if (index > -1) {\n      this.state.selected.splice(index, 1)\n      this.notifyListeners()\n    }\n  }\n\n  /**\n   * Toggle an object in the selection\n   */\n  toggleSelection(obj: any): void {\n    if (this.state.selected.includes(obj)) {\n      this.removeFromSelection(obj)\n    } else {\n      this.addToSelection(obj)\n    }\n  }\n\n  /**\n   * Clear the entire selection\n   */\n  clear(): void {\n    this.state.selected = []\n    this.state.firstClick = null\n    this.notifyListeners()\n  }\n\n  /**\n   * Clear only the selected objects (keep first click)\n   */\n  clearSelected(): void {\n    this.state.selected = []\n    this.notifyListeners()\n  }\n\n  /**\n   * Clear only the first click (keep selected objects)\n   */\n  clearFirst(): void {\n    this.state.firstClick = null\n    this.notifyListeners()\n  }\n\n  /**\n   * Check if an object is selected\n   */\n  isSelected(obj: any): boolean {\n    return this.state.selected.includes(obj)\n  }\n\n  /**\n   * Check if the first click is a specific object\n   */\n  isFirstClick(obj: any): boolean {\n    return this.state.firstClick === obj\n  }\n\n  /**\n   * Get the count of selected objects\n   */\n  getSelectedCount(): number {\n    return this.state.selected.length\n  }\n\n  /**\n   * Check if selection is empty\n   */\n  isEmpty(): boolean {\n    return this.state.selected.length === 0 && this.state.firstClick === null\n  }\n\n  /**\n   * Start a multi-step selection (for tools like segment, line, circle)\n   */\n  startMultiStepSelection(firstObj: any): void {\n    this.state.firstClick = firstObj\n    this.state.selected = [firstObj]\n    this.notifyListeners()\n  }\n\n  /**\n   * Complete a multi-step selection\n   */\n  completeMultiStepSelection(): void {\n    this.state.firstClick = null\n    this.state.selected = []\n    this.notifyListeners()\n  }\n\n  /**\n   * Cancel a multi-step selection\n   */\n  cancelMultiStepSelection(): void {\n    this.state.firstClick = null\n    this.state.selected = []\n    this.notifyListeners()\n  }\n\n  /**\n   * Get the first selected object\n   */\n  getFirstSelected(): any | null {\n    return this.state.selected[0] || null\n  }\n\n  /**\n   * Get the last selected object\n   */\n  getLastSelected(): any | null {\n    return this.state.selected[this.state.selected.length - 1] || null\n  }\n\n  /**\n   * Replace the entire selection with new objects\n   */\n  replaceSelection(newSelection: any[]): void {\n    this.state.selected = [...newSelection]\n    this.notifyListeners()\n  }\n\n  /**\n   * Add a listener for selection changes\n   */\n  addListener(listener: (state: SelectionState) => void): () => void {\n    this.listeners.push(listener)\n    \n    // Return unsubscribe function\n    return () => {\n      const index = this.listeners.indexOf(listener)\n      if (index > -1) {\n        this.listeners.splice(index, 1)\n      }\n    }\n  }\n\n  /**\n   * Notify all listeners of state changes\n   */\n  private notifyListeners(): void {\n    this.listeners.forEach(listener => listener(this.getState()))\n  }\n\n  /**\n   * Reset the selection manager to initial state\n   */\n  reset(): void {\n    this.state = {\n      selected: [],\n      firstClick: null\n    }\n    this.notifyListeners()\n  }\n\n  /**\n   * Get a snapshot of the current state for debugging\n   */\n  getSnapshot(): {\n    selectedIds: string[]\n    firstClickId: string | null\n    count: number\n  } {\n    return {\n      selectedIds: this.state.selected.map(obj => obj.id || 'unknown'),\n      firstClickId: this.state.firstClick?.id || null,\n      count: this.state.selected.length\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5130, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/rename-manager.ts"],"sourcesContent":["import { JBoard, RenameArm, Point2D } from './types'\nimport { HitTest } from './hittest'\nimport { CLICK_EPS } from './constants'\n\nexport class RenameManager {\n  private board: JBoard\n  private hitTest: HitTest\n  private renameMode: boolean = false\n  private renameArm: RenameArm = { pt: null, wasFixed: false, wasDraggable: true }\n  private downPos: Point2D | null = null\n  private listeners: Array<(mode: boolean) => void> = []\n\n  constructor(board: JBoard) {\n    this.board = board\n    this.hitTest = new HitTest(board)\n  }\n\n  /**\n   * Get current rename mode\n   */\n  isRenameMode(): boolean {\n    return this.renameMode\n  }\n\n  /**\n   * Toggle rename mode\n   */\n  toggleRenameMode(): void {\n    this.renameMode = !this.renameMode\n    this.notifyListeners()\n  }\n\n  /**\n   * Set rename mode\n   */\n  setRenameMode(mode: boolean): void {\n    this.renameMode = mode\n    this.notifyListeners()\n  }\n\n  /**\n   * Convert name to subscript format (A_12 -> A₁₂)\n   */\n  toSubscript(name: string): string {\n    const map: Record<string, string> = { \n      '0': '₀', '1': '₁', '2': '₂', '3': '₃', '4': '₄', \n      '5': '₅', '6': '₆', '7': '₇', '8': '₈', '9': '₉' \n    }\n    return name.replace(/_(\\d+)/g, (_, d) => \n      d.split('').map((ch: string) => map[ch] ?? ch).join('')\n    )\n  }\n\n  /**\n   * Check if a name is already taken by another point\n   */\n  isNameTaken(raw: string, exceptId?: string): boolean {\n    for (const k in this.board.objects) {\n      const o: any = (this.board.objects as any)[k]\n      if (o.elType === 'point' && o.id !== exceptId) {\n        if ((o._rawName ?? '') === raw) return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * Generate a unique name by appending a number if needed\n   */\n  generateUniqueName(baseName: string, exceptId?: string): string {\n    if (!this.isNameTaken(baseName, exceptId)) {\n      return baseName\n    }\n\n    let i = 2\n    while (this.isNameTaken(`${baseName}_${i}`, exceptId)) {\n      i++\n    }\n    return `${baseName}_${i}`\n  }\n\n  /**\n   * Rename a point with the given name\n   */\n  renamePoint(pt: any, newName: string): void {\n    const trimmed = (newName || '').trim()\n    const pretty = this.toSubscript(trimmed)\n    \n    pt.setAttribute({ name: pretty, withLabel: !!trimmed })\n    ;(pt as any)._rawName = trimmed\n  }\n\n  /**\n   * Handle mouse down event for rename mode\n   */\n  handleDown(e: any): boolean {\n    if (!this.renameMode) return false\n\n    const pt = this.hitTest.pointUnder(e)\n    if (!pt) return false\n\n    // Freeze the point before any drag begins\n    const wasFixed = !!(pt as any).visProp.fixed\n    const wasDraggable = !!(pt as any).draggable\n    ;(pt as any).setAttribute({ fixed: true })\n    ;(pt as any).draggable = false\n\n    this.renameArm = { pt, wasFixed, wasDraggable }\n    this.downPos = this.hitTest.getMouseCoords(e)\n\n    // Prevent default behavior in rename mode\n    this.hitTest.preventDefault(e)\n    return true\n  }\n\n  /**\n   * Handle mouse up event for rename mode\n   */\n  handleUp(e: any): boolean {\n    if (!this.renameArm.pt) return false\n\n    const up = this.hitTest.getMouseCoords(e)\n    const down = this.downPos || up\n    const moved = this.hitTest.distance(up, down)\n\n    // Only treat as rename if it was a click, not a drag\n    if (moved <= CLICK_EPS) {\n      this.openPrompt(this.renameArm.pt, e)\n      return true\n    }\n\n    // If it was a drag, restore the point and abort rename\n    this.restorePoint(this.renameArm.pt)\n    this.clearArm()\n    return true\n  }\n\n  /**\n   * Open the rename prompt for a point\n   */\n  private openPrompt(pt: any, e: any): void {\n    const currentRaw = (pt as any)._rawName || ''\n    const proposed = (window.prompt('Název bodu (např. A, B, C, A_1, A_2):', currentRaw) ?? '').trim()\n    \n    const finalName = this.generateUniqueName(proposed, (pt as any).id)\n    this.renamePoint(pt, finalName)\n\n    // Restore mobility\n    this.restorePoint(pt)\n\n    // Stop further board interaction from this click\n    this.hitTest.preventDefault(e)\n    this.board.update()\n\n    if (!finalName) {\n      this.setRenameMode(false)\n    }\n\n    this.clearArm()\n  }\n\n  /**\n   * Restore a point's original mobility settings\n   */\n  private restorePoint(pt: any): void {\n    const arm = this.renameArm\n    ;(pt as any).setAttribute({ fixed: arm.wasFixed })\n    ;(pt as any).draggable = arm.wasDraggable\n  }\n\n  /**\n   * Clear the rename arm state\n   */\n  private clearArm(): void {\n    this.renameArm = { pt: null, wasFixed: false, wasDraggable: true }\n    this.downPos = null\n  }\n\n  /**\n   * Get the current rename arm state\n   */\n  getRenameArm(): RenameArm {\n    return { ...this.renameArm }\n  }\n\n  /**\n   * Check if a rename operation is in progress\n   */\n  isRenaming(): boolean {\n    return this.renameArm.pt !== null\n  }\n\n  /**\n   * Cancel any ongoing rename operation\n   */\n  cancelRename(): void {\n    if (this.renameArm.pt) {\n      this.restorePoint(this.renameArm.pt)\n      this.clearArm()\n    }\n  }\n\n  /**\n   * Add a listener for rename mode changes\n   */\n  addListener(listener: (mode: boolean) => void): () => void {\n    this.listeners.push(listener)\n    \n    // Return unsubscribe function\n    return () => {\n      const index = this.listeners.indexOf(listener)\n      if (index > -1) {\n        this.listeners.splice(index, 1)\n      }\n    }\n  }\n\n  /**\n   * Notify all listeners of rename mode changes\n   */\n  private notifyListeners(): void {\n    this.listeners.forEach(listener => listener(this.renameMode))\n  }\n\n  /**\n   * Reset the rename manager to initial state\n   */\n  reset(): void {\n    this.renameMode = false\n    this.clearArm()\n    this.notifyListeners()\n  }\n\n  /**\n   * Get a snapshot of the current state for debugging\n   */\n  getSnapshot(): {\n    renameMode: boolean\n    isRenaming: boolean\n    armedPointId: string | null\n  } {\n    return {\n      renameMode: this.renameMode,\n      isRenaming: this.isRenaming(),\n      armedPointId: this.renameArm.pt?.id || null\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5355, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/hotkeys.ts"],"sourcesContent":["import { HotkeyConfig, Tool, PhysicalTool } from './types'\nimport { TOOLBAR_BUTTONS, PHYSICAL_TOOLS } from './constants'\n\nexport class HotkeyManager {\n  private config: HotkeyConfig\n  private isEnabled: boolean = true\n  private listeners: Array<() => void> = []\n\n  constructor(config: HotkeyConfig) {\n    this.config = config\n  }\n\n  /**\n   * Register all hotkeys\n   */\n  register(): () => void {\n    const handler = (e: KeyboardEvent) => {\n      if (!this.isEnabled) return\n\n      // Prevent hotkeys when typing in input fields\n      if (this.isInputElement(e.target as HTMLElement)) return\n\n      this.handleKeyPress(e)\n    }\n\n    window.addEventListener('keydown', handler)\n    \n    // Return cleanup function\n    return () => window.removeEventListener('keydown', handler)\n  }\n\n  /**\n   * Handle key press events\n   */\n  private handleKeyPress(e: KeyboardEvent): void {\n    const key = e.key.toLowerCase()\n\n    // Tool shortcuts (1-6)\n    if (key >= '1' && key <= '6') {\n      const toolIndex = parseInt(key) - 1\n      if (toolIndex < TOOLBAR_BUTTONS.length) {\n        const tool = TOOLBAR_BUTTONS[toolIndex].tool\n        if (tool && this.config.onToolChange) {\n          this.config.onToolChange(tool)\n          e.preventDefault()\n        }\n      }\n      return\n    }\n\n    // Physical tool shortcuts (7-9)\n    if (key >= '7' && key <= '9') {\n      const toolIndex = parseInt(key) - 7\n      if (toolIndex < PHYSICAL_TOOLS.length) {\n        const physicalTool = PHYSICAL_TOOLS[toolIndex].id as PhysicalTool\n        if (this.config.onPhysicalToolToggle) {\n          this.config.onPhysicalToolToggle(physicalTool)\n          e.preventDefault()\n        }\n      }\n      return\n    }\n\n    // Individual hotkeys\n    switch (key) {\n      case 'n':\n        // Toggle rename mode\n        this.config.onToggleRename()\n        e.preventDefault()\n        break\n\n      case 'z':\n        // Undo (Ctrl+Z or Cmd+Z)\n        if (e.ctrlKey || e.metaKey) {\n          if (this.config.onUndo) {\n            this.config.onUndo()\n            e.preventDefault()\n          }\n        }\n        break\n\n      case 'y':\n        // Redo (Ctrl+Y or Cmd+Y)\n        if (e.ctrlKey || e.metaKey) {\n          if (this.config.onRedo) {\n            this.config.onRedo()\n            e.preventDefault()\n          }\n        }\n        break\n\n      case 'escape':\n        // Escape key - could be used to cancel operations\n        this.handleEscape()\n        break\n\n      case 'delete':\n      case 'backspace':\n        // Delete key - could be used to delete selected objects\n        this.handleDelete()\n        break\n\n      default:\n        // Check for specific tool shortcuts\n        this.handleToolShortcuts(key)\n        break\n    }\n  }\n\n  /**\n   * Handle tool-specific shortcuts\n   */\n  private handleToolShortcuts(key: string): void {\n    const toolMap: Record<string, Tool> = {\n      'm': 'mouse',\n      'p': 'point',\n      's': 'segment',\n      'l': 'line',\n      'c': 'circle',\n      'r': 'rubber'\n    }\n\n    const tool = toolMap[key]\n    if (tool && this.config.onToolChange) {\n      this.config.onToolChange(tool)\n    }\n  }\n\n  /**\n   * Handle escape key\n   */\n  private handleEscape(): void {\n    // Could be extended to cancel ongoing operations\n    // For now, just a placeholder\n  }\n\n  /**\n   * Handle delete key\n   */\n  private handleDelete(): void {\n    // Could be extended to delete selected objects\n    // For now, just a placeholder\n  }\n\n  /**\n   * Check if the target element is an input element\n   */\n  private isInputElement(element: HTMLElement): boolean {\n    const tagName = element.tagName.toLowerCase()\n    const inputTypes = ['input', 'textarea', 'select']\n    \n    if (inputTypes.includes(tagName)) return true\n    \n    // Check for contenteditable\n    if (element.contentEditable === 'true') return true\n    \n    // Check if element is inside a form\n    if (element.closest('form')) return true\n    \n    return false\n  }\n\n  /**\n   * Enable hotkeys\n   */\n  enable(): void {\n    this.isEnabled = true\n  }\n\n  /**\n   * Disable hotkeys\n   */\n  disable(): void {\n    this.isEnabled = false\n  }\n\n  /**\n   * Check if hotkeys are enabled\n   */\n  isHotkeysEnabled(): boolean {\n    return this.isEnabled\n  }\n\n  /**\n   * Update hotkey configuration\n   */\n  updateConfig(newConfig: Partial<HotkeyConfig>): void {\n    this.config = { ...this.config, ...newConfig }\n  }\n\n  /**\n   * Get current hotkey configuration\n   */\n  getConfig(): HotkeyConfig {\n    return { ...this.config }\n  }\n\n  /**\n   * Get help text for available hotkeys\n   */\n  getHelpText(): string[] {\n    return [\n      'Klávesové zkratky:',\n      '• N - Přejmenovat bod',\n      '• M - Nástroj myš',\n      '• P - Nástroj bod',\n      '• S - Nástroj úsečka',\n      '• L - Nástroj přímka',\n      '• C - Nástroj kružnice',\n      '• R - Nástroj guma',\n      '• 1-6 - Přepnutí nástroje',\n      '• 7-9 - Fyzické nástroje',\n      '• Ctrl+Z - Zpět',\n      '• Ctrl+Y - Znovu',\n      '• Escape - Zrušit operaci',\n      '• Delete - Smazat vybrané'\n    ]\n  }\n\n  /**\n   * Add a listener for hotkey events\n   */\n  addListener(listener: () => void): () => void {\n    this.listeners.push(listener)\n    \n    // Return unsubscribe function\n    return () => {\n      const index = this.listeners.indexOf(listener)\n      if (index > -1) {\n        this.listeners.splice(index, 1)\n      }\n    }\n  }\n\n  /**\n   * Notify all listeners\n   */\n  private notifyListeners(): void {\n    this.listeners.forEach(listener => listener())\n  }\n\n  /**\n   * Reset hotkey manager\n   */\n  reset(): void {\n    this.isEnabled = true\n    this.listeners = []\n  }\n}\n\n/**\n * Simple hotkey registration function for basic use cases\n */\nexport function registerHotkeys(config: HotkeyConfig): () => void {\n  const manager = new HotkeyManager(config)\n  return manager.register()\n}\n\n/**\n * Create a hotkey manager with default configuration\n */\nexport function createHotkeyManager(config: HotkeyConfig): HotkeyManager {\n  return new HotkeyManager(config)\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5582, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/serializer.ts"],"sourcesContent":["import JXG from 'jsxgraph'\nimport { JBoard, SavedConstruction, SerializerOptions, Point2D } from './types'\nimport { GeometryFactory } from './geometry-factory'\n\nexport class Serializer {\n  private board: JBoard\n  private geometryFactory: GeometryFactory\n  private options: SerializerOptions\n\n  constructor(board: JBoard, options: SerializerOptions = {}) {\n    this.board = board\n    this.geometryFactory = new GeometryFactory(board)\n    this.options = {\n      includeMetadata: true,\n      compress: false,\n      ...options\n    }\n  }\n\n  /**\n   * Create a snapshot of the current construction\n   */\n  snapshot(): SavedConstruction {\n    const timestamp = new Date().toISOString()\n    const objects = Object.values(this.board.objects).map((obj: any) => ({\n      id: obj.id,\n      type: obj.elType,\n      name: obj.name,\n      properties: this.extractObjectProperties(obj)\n    }))\n\n    return {\n      timestamp,\n      objects,\n      ...(this.options.includeMetadata && {\n        metadata: {\n          version: '1.0',\n          boardBounds: this.board.getBoundingBox(),\n          objectCount: objects.length\n        }\n      })\n    }\n  }\n\n  /**\n   * Extract properties from a JSXGraph object\n   */\n  private extractObjectProperties(obj: any): any {\n    const props: any = {\n      visProp: obj.visProp,\n      _rawName: (obj as any)._rawName\n    }\n\n    // Extract specific properties based on object type\n    switch (obj.elType) {\n      case 'point':\n        props.coords = [obj.X(), obj.Y()]\n        break\n      case 'segment':\n      case 'line':\n        if (obj.point1 && obj.point2) {\n          props.point1 = { id: obj.point1.id, coords: [obj.point1.X(), obj.point1.Y()] }\n          props.point2 = { id: obj.point2.id, coords: [obj.point2.X(), obj.point2.Y()] }\n        }\n        break\n      case 'circle':\n        if (obj.center && obj.point) {\n          props.center = { id: obj.center.id, coords: [obj.center.X(), obj.center.Y()] }\n          props.point = { id: obj.point.id, coords: [obj.point.X(), obj.point.Y()] }\n        }\n        break\n    }\n\n    return props\n  }\n\n  /**\n   * Restore a construction from saved data\n   */\n  restore(construction: SavedConstruction): boolean {\n    try {\n      // Clear current construction\n      this.clearBoard()\n\n      // Create objects in dependency order\n      const points = new Map<string, any>()\n      \n      // First pass: create all points\n      for (const obj of construction.objects) {\n        if (obj.type === 'point') {\n          const point = this.createPointFromData(obj)\n          if (point) {\n            points.set(obj.id, point)\n          }\n        }\n      }\n\n      // Second pass: create other objects\n      for (const obj of construction.objects) {\n        if (obj.type !== 'point') {\n          this.createObjectFromData(obj, points)\n        }\n      }\n\n      this.board.update()\n      return true\n    } catch (error) {\n      console.error('Error restoring construction:', error)\n      return false\n    }\n  }\n\n  /**\n   * Create a point from saved data\n   */\n  private createPointFromData(obj: any): any | null {\n    try {\n      const coords = obj.properties.coords\n      if (!coords || coords.length < 2) return null\n\n      const point = this.geometryFactory.point(coords[0], coords[1], false, {\n        name: obj.name,\n        ...obj.properties.visProp\n      })\n\n      // Restore raw name\n      if (obj.properties._rawName) {\n        ;(point as any)._rawName = obj.properties._rawName\n      }\n\n      return point\n    } catch (error) {\n      console.error('Error creating point:', error)\n      return null\n    }\n  }\n\n  /**\n   * Create an object from saved data\n   */\n  private createObjectFromData(obj: any, points: Map<string, any>): any | null {\n    try {\n      switch (obj.type) {\n        case 'segment':\n          return this.createSegmentFromData(obj, points)\n        case 'line':\n          return this.createLineFromData(obj, points)\n        case 'circle':\n          return this.createCircleFromData(obj, points)\n        default:\n          console.warn('Unknown object type:', obj.type)\n          return null\n      }\n    } catch (error) {\n      console.error('Error creating object:', error)\n      return null\n    }\n  }\n\n  /**\n   * Create a segment from saved data\n   */\n  private createSegmentFromData(obj: any, points: Map<string, any>): any | null {\n    const point1 = points.get(obj.properties.point1?.id)\n    const point2 = points.get(obj.properties.point2?.id)\n    \n    if (!point1 || !point2) return null\n\n    return this.geometryFactory.segment(point1, point2, obj.properties.visProp)\n  }\n\n  /**\n   * Create a line from saved data\n   */\n  private createLineFromData(obj: any, points: Map<string, any>): any | null {\n    const point1 = points.get(obj.properties.point1?.id)\n    const point2 = points.get(obj.properties.point2?.id)\n    \n    if (!point1 || !point2) return null\n\n    return this.geometryFactory.line(point1, point2, obj.properties.visProp)\n  }\n\n  /**\n   * Create a circle from saved data\n   */\n  private createCircleFromData(obj: any, points: Map<string, any>): any | null {\n    const center = points.get(obj.properties.center?.id)\n    const point = points.get(obj.properties.point?.id)\n    \n    if (!center || !point) return null\n\n    return this.geometryFactory.circle(center, point, obj.properties.visProp)\n  }\n\n  /**\n   * Clear all objects from the board\n   */\n  private clearBoard(): void {\n    const toRemove: any[] = []\n    for (const key in this.board.objects) {\n      const o: any = this.board.objects[key]\n      if (!o?.visProp?.fixed) {\n        toRemove.push(o)\n      }\n    }\n    toRemove.forEach(o => this.board.removeObject(o))\n  }\n\n  /**\n   * Export construction to JSON string\n   */\n  exportToJSON(construction: SavedConstruction): string {\n    return JSON.stringify(construction, null, this.options.compress ? 0 : 2)\n  }\n\n  /**\n   * Import construction from JSON string\n   */\n  importFromJSON(jsonString: string): SavedConstruction | null {\n    try {\n      return JSON.parse(jsonString) as SavedConstruction\n    } catch (error) {\n      console.error('Error parsing JSON:', error)\n      return null\n    }\n  }\n\n  /**\n   * Download construction as a file\n   */\n  downloadConstruction(construction: SavedConstruction, filename?: string): void {\n    const jsonString = this.exportToJSON(construction)\n    const blob = new Blob([jsonString], { type: 'application/json' })\n    const url = URL.createObjectURL(blob)\n    \n    const link = document.createElement('a')\n    link.href = url\n    link.download = filename || `construction_${new Date().toISOString().split('T')[0]}.json`\n    link.click()\n    \n    URL.revokeObjectURL(url)\n  }\n\n  /**\n   * Load construction from file\n   */\n  loadFromFile(file: File): Promise<SavedConstruction | null> {\n    return new Promise((resolve) => {\n      const reader = new FileReader()\n      reader.onload = (e) => {\n        try {\n          const result = e.target?.result as string\n          const construction = this.importFromJSON(result)\n          resolve(construction)\n        } catch (error) {\n          console.error('Error loading file:', error)\n          resolve(null)\n        }\n      }\n      reader.onerror = () => {\n        console.error('Error reading file')\n        resolve(null)\n      }\n      reader.readAsText(file)\n    })\n  }\n\n  /**\n   * Validate construction data\n   */\n  validateConstruction(construction: SavedConstruction): { valid: boolean; errors: string[] } {\n    const errors: string[] = []\n\n    if (!construction.timestamp) {\n      errors.push('Missing timestamp')\n    }\n\n    if (!construction.objects || !Array.isArray(construction.objects)) {\n      errors.push('Missing or invalid objects array')\n    } else {\n      for (let i = 0; i < construction.objects.length; i++) {\n        const obj = construction.objects[i]\n        if (!obj.id) errors.push(`Object ${i} missing id`)\n        if (!obj.type) errors.push(`Object ${i} missing type`)\n        if (!obj.properties) errors.push(`Object ${i} missing properties`)\n      }\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors\n    }\n  }\n\n  /**\n   * Get construction statistics\n   */\n  getConstructionStats(construction: SavedConstruction): {\n    totalObjects: number\n    points: number\n    segments: number\n    lines: number\n    circles: number\n    other: number\n  } {\n    const stats = {\n      totalObjects: construction.objects.length,\n      points: 0,\n      segments: 0,\n      lines: 0,\n      circles: 0,\n      other: 0\n    }\n\n    for (const obj of construction.objects) {\n      switch (obj.type) {\n        case 'point': stats.points++; break\n        case 'segment': stats.segments++; break\n        case 'line': stats.lines++; break\n        case 'circle': stats.circles++; break\n        default: stats.other++; break\n      }\n    }\n\n    return stats\n  }\n\n  /**\n   * Update serializer options\n   */\n  updateOptions(options: Partial<SerializerOptions>): void {\n    this.options = { ...this.options, ...options }\n  }\n\n  /**\n   * Get current serializer options\n   */\n  getOptions(): SerializerOptions {\n    return { ...this.options }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5912, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/GeneralGeometryTester.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect, useRef, useState, useCallback } from 'react'\nimport { Save, Trash2, Circle, Pencil, RotateCcw, RotateCw, Eraser, Ruler, Triangle, Gauge, ZoomIn, ZoomOut, Download, Upload, Info, Settings, ChevronUp } from 'lucide-react'\nimport DraggableRuler from './DraggableRuler'\nimport DraggableTriangle from './DraggableTriangle'\nimport DraggableProtractor from './DraggableProtractor'\nimport { BoardManager } from '../../lib/board-manager'\nimport { GridMode } from '../../lib/grid-manager'\nimport { ToolController, MouseToolStrategy, PointToolStrategy, SegmentToolStrategy, LineToolStrategy, CircleToolStrategy, RubberToolStrategy } from '../../lib/tools'\nimport { SelectionManager } from '../../lib/selection-manager'\nimport { RenameManager } from '../../lib/rename-manager'\nimport { HotkeyManager } from '../../lib/hotkeys'\nimport { Serializer } from '../../lib/serializer'\nimport { Tool, PhysicalTool, SavedConstruction } from '../../lib/types'\nimport { TOOLBAR_BUTTONS, PHYSICAL_TOOLS, GRID_MODES } from '../../lib/constants'\n\n\nexport default function GeneralGeometryTester() {\n  // Refs for managers\n  const containerRef = useRef<HTMLDivElement | null>(null)\n  const boardManagerRef = useRef<BoardManager | null>(null)\n  const toolControllerRef = useRef<ToolController | null>(null)\n  const selectionManagerRef = useRef<SelectionManager | null>(null)\n  const renameManagerRef = useRef<RenameManager | null>(null)\n  const hotkeyManagerRef = useRef<HotkeyManager | null>(null)\n  const serializerRef = useRef<Serializer | null>(null)\n\n  // State\n  const [tool, setTool] = useState<Tool>('mouse')\n  const [feedback, setFeedback] = useState('')\n  const [data, setData] = useState<SavedConstruction | null>(null)\n  const [showHelp, setShowHelp] = useState(false)\n  const [constructionHistory, setConstructionHistory] = useState<SavedConstruction[]>([])\n  \n  // Physical tools state\n  const [rulerVisible, setRulerVisible] = useState(false)\n  const [triangleVisible, setTriangleVisible] = useState(false)\n  const [protractorVisible, setProtractorVisible] = useState(false)\n  const [rulerPosition, setRulerPosition] = useState({ x: 5, y: 4, rotation: 0, length: 6 })\n  const [trianglePosition, setTrianglePosition] = useState({ x: 7, y: 4, rotation: 0, size: 3 })\n  const [protractorPosition, setProtractorPosition] = useState({ x: 6, y: 3, rotation: 0, size: 3 })\n  const [activeTool, setActiveTool] = useState<PhysicalTool>(null)\n  const [uiBusy, setUiBusy] = useState(false)\n  \n  // Grid settings state\n  const [showSettings, setShowSettings] = useState(false)\n  const [gridOption, setGridOption] = useState<GridMode>('major')\n\n  // Callbacks for managers\n  const handleFeedback = useCallback((message: string) => {\n    setFeedback(message)\n  }, [])\n\n  const handleSelectionChange = useCallback((selected: any[]) => {\n    // Selection is now managed by SelectionManager\n  }, [])\n\n  const handleToggleRename = useCallback(() => {\n    renameManagerRef.current?.toggleRenameMode()\n  }, [])\n\n  const handleUndo = useCallback(() => {\n    boardManagerRef.current?.getUndoRedoManager()?.undo()\n  }, [])\n\n  const handleRedo = useCallback(() => {\n    boardManagerRef.current?.getUndoRedoManager()?.redo()\n  }, [])\n\n  const handleToolChange = useCallback((newTool: Tool) => {\n    setTool(newTool)\n  }, [])\n\n  const handlePhysicalToolToggle = useCallback((physicalTool: PhysicalTool) => {\n    // Handle physical tool toggles\n    if (physicalTool === 'ruler') {\n      setRulerVisible(!rulerVisible)\n      setActiveTool(rulerVisible ? null : 'ruler')\n    } else if (physicalTool === 'triangle') {\n      setTriangleVisible(!triangleVisible)\n      setActiveTool(triangleVisible ? null : 'triangle')\n    } else if (physicalTool === 'protractor') {\n      setProtractorVisible(!protractorVisible)\n      setActiveTool(protractorVisible ? null : 'protractor')\n    }\n  }, [rulerVisible, triangleVisible, protractorVisible])\n\n  // Initialize managers\n  useEffect(() => {\n    if (!containerRef.current) return\n\n    // Initialize board manager\n    const boardManager = new BoardManager({ onFeedback: handleFeedback })\n    const board = boardManager.init(containerRef.current)\n    boardManagerRef.current = boardManager\n\n    // Initialize selection manager\n    const selectionManager = new SelectionManager()\n    selectionManagerRef.current = selectionManager\n\n    // Initialize tool controller\n    const toolController = new ToolController(\n      board,\n      selectionManager,\n      { onFeedback: handleFeedback, onSelectionChange: handleSelectionChange }\n    )\n    toolController.setUndoRedoManager(boardManager.getUndoRedoManager()!)\n    toolControllerRef.current = toolController\n\n    // Register tool strategies\n    toolController.registerTool('mouse', new MouseToolStrategy(toolController))\n    toolController.registerTool('point', new PointToolStrategy(toolController))\n    toolController.registerTool('segment', new SegmentToolStrategy(toolController))\n    toolController.registerTool('line', new LineToolStrategy(toolController))\n    toolController.registerTool('circle', new CircleToolStrategy(toolController))\n    toolController.registerTool('rubber', new RubberToolStrategy(toolController))\n\n    // Initialize rename manager\n    const renameManager = new RenameManager(board)\n    renameManagerRef.current = renameManager\n\n    // Initialize hotkey manager\n    const hotkeyManager = new HotkeyManager({\n      onToggleRename: handleToggleRename,\n      onUndo: handleUndo,\n      onRedo: handleRedo,\n      onToolChange: handleToolChange,\n      onPhysicalToolToggle: handlePhysicalToolToggle\n    })\n    hotkeyManagerRef.current = hotkeyManager\n\n    // Initialize serializer\n    const serializer = new Serializer(board)\n    serializerRef.current = serializer\n\n    // Set initial grid mode\n    boardManager.setGridMode(gridOption)\n\n    // Register hotkeys\n    const cleanupHotkeys = hotkeyManager.register()\n\n    return () => {\n      cleanupHotkeys()\n      boardManager.destroy()\n    }\n  }, [handleFeedback, handleSelectionChange, handleToggleRename, handleUndo, handleRedo, handleToolChange, handlePhysicalToolToggle, gridOption])\n\n  // Update tool controller when tool changes\n  useEffect(() => {\n    toolControllerRef.current?.setTool(tool)\n  }, [tool])\n\n  // Update grid mode when it changes\n  useEffect(() => {\n    boardManagerRef.current?.setGridMode(gridOption)\n  }, [gridOption])\n\n  // Handle ruler position changes\n  const handleRulerPositionChange = (x: number, y: number, rotation: number, length: number) => {\n    setRulerPosition({ x, y, rotation, length })\n  }\n\n  // Handle triangle position changes\n  const handleTrianglePositionChange = (x: number, y: number, rotation: number, size: number) => {\n    setTrianglePosition({ x, y, rotation, size })\n  }\n\n  // Handle protractor position changes\n  const handleProtractorPositionChange = (x: number, y: number, rotation: number, size: number) => {\n    setProtractorPosition({ x, y, rotation, size })\n  }\n\n  function toggleRuler() {\n    setRulerVisible(!rulerVisible)\n    if (!rulerVisible) {\n      setActiveTool('ruler')\n      setTool('mouse') // Automatically switch to mouse mode when activating ruler\n    } else if (activeTool === 'ruler') {\n      setActiveTool(null)\n    }\n  }\n\n  function toggleTriangle() {\n    setTriangleVisible(!triangleVisible)\n    if (!triangleVisible) {\n      setActiveTool('triangle')\n      setTool('mouse') // Automatically switch to mouse mode when activating triangle\n    } else if (activeTool === 'triangle') {\n      setActiveTool(null)\n    }\n  }\n\n  function toggleProtractor() {\n    setProtractorVisible(!protractorVisible)\n    if (!protractorVisible) {\n      setActiveTool('protractor')\n      setTool('mouse') // Automatically switch to mouse mode when activating protractor\n    } else if (activeTool === 'protractor') {\n      setActiveTool(null)\n    }\n  }\n\n\n  // Close settings dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as HTMLElement\n      if (showSettings && !target.closest('.settings-dropdown')) {\n        setShowSettings(false)\n      }\n    }\n\n    if (showSettings) {\n      document.addEventListener('mousedown', handleClickOutside)\n      return () => document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [showSettings])\n\n  // Handle board events with managers\n  useEffect(() => {\n    const board = boardManagerRef.current?.getBoard()\n    const toolController = toolControllerRef.current\n    const renameManager = renameManagerRef.current\n    \n    if (!board || !toolController || !renameManager) return\n\n    const handleDown = (e: any) => {\n      if (uiBusy) return\n\n      // Try rename manager first\n      if (renameManager.handleDown(e)) {\n        return\n      }\n\n      // Otherwise use tool controller\n      toolController.handleDown(e)\n    }\n\n    const handleUp = (e: any) => {\n      if (uiBusy) return\n\n      // Try rename manager first\n      if (renameManager.handleUp(e)) {\n        return\n      }\n\n      // Otherwise use tool controller\n      toolController.handleUp(e)\n    }\n\n    const handleClick = (e: any) => {\n      if (uiBusy) return\n\n      // Prevent tools from firing while in rename mode\n      if (renameManager.isRenameMode()) return\n\n      toolController.handleClick(e)\n    }\n\n    board.on('down', handleDown)\n    board.on('up', handleUp)\n    board.on('click', handleClick)\n\n    return () => {\n      try {\n        board.off('down', handleDown)\n        board.off('up', handleUp)\n        board.off('click', handleClick)\n      } catch {}\n    }\n  }, [uiBusy])\n\n  function undoLast() {\n    boardManagerRef.current?.getUndoRedoManager()?.undo()\n  }\n\n  function redoLast() {\n    boardManagerRef.current?.getUndoRedoManager()?.redo()\n  }\n\n  function clearAll() {\n    const board = boardManagerRef.current?.getBoard()\n    if (!board) return\n    \n    const toRemove: any[] = []\n    for (const key in board.objects) {\n      const o: any = board.objects[key]\n      if (!o?.visProp?.fixed) {\n        toRemove.push(o)\n      }\n    }\n    toRemove.forEach(o => board.removeObject(o))\n    \n    selectionManagerRef.current?.clear()\n    setFeedback('')\n    setData(null)\n  }\n\n  function saveConstruction() {\n    const serializer = serializerRef.current\n    if (!serializer) return\n    \n    const constructionData = serializer.snapshot()\n    setData(constructionData)\n    setConstructionHistory(prev => [...prev, constructionData])\n    setFeedback('Konstrukce uložena')\n  }\n\n  function exportConstruction() {\n    if (!data) return\n    serializerRef.current?.downloadConstruction(data)\n    setFeedback('Konstrukce exportována')\n  }\n\n  function importConstruction(event: React.ChangeEvent<HTMLInputElement>) {\n    const file = event.target.files?.[0]\n    if (!file || !serializerRef.current) return\n\n    serializerRef.current.loadFromFile(file).then((importedData) => {\n      if (importedData) {\n        setData(importedData)\n        setFeedback('Konstrukce načtena - klikněte na \"Načíst\" pro obnovení')\n      } else {\n        setFeedback('Chyba při načítání souboru')\n      }\n    })\n  }\n\n  function loadConstruction() {\n    if (!data || !serializerRef.current) return\n    \n    const success = serializerRef.current.restore(data)\n    if (success) {\n      setFeedback('Konstrukce načtena')\n    } else {\n      setFeedback('Chyba při načítání konstrukce')\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\n          <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">\n            Obecné geometrické testování\n          </h1>\n\n          <div className=\"bg-green-50 border-l-4 border-green-500 p-4 mb-4\">\n            <p className=\"text-gray-700\">\n              Volné testovací pole pro geometrické konstrukce. Můžete používat všechny dostupné nástroje bez specifických požadavků.\n            </p>\n            <div className=\"mt-2 flex items-center gap-2\">\n              <button\n                onClick={() => setShowHelp(!showHelp)}\n                className=\"flex items-center gap-1 text-sm text-blue-600 hover:text-blue-800\"\n              >\n                <Info size={14} />\n                {showHelp ? 'Skrýt nápovědu' : 'Zobrazit nápovědu'}\n              </button>\n            </div>\n          </div>\n\n          {showHelp && (\n            <div className=\"bg-blue-50 border-l-4 border-blue-500 p-4 mb-4\">\n              <h3 className=\"font-semibold text-blue-800 mb-2\">Nápověda k nástrojům:</h3>\n              <div className=\"grid md:grid-cols-2 gap-4 text-sm text-blue-700\">\n                <div>\n                  <h4 className=\"font-medium mb-1\">Základní nástroje:</h4>\n                  <ul className=\"space-y-1\">\n                    <li>• <strong>Myš:</strong> Interakce s objekty bez vytváření</li>\n                    <li>• <strong>Bod:</strong> Vytvoření bodu kliknutím</li>\n                    <li>• <strong>Úsečka:</strong> Klikněte na dva body</li>\n                    <li>• <strong>Přímka:</strong> Klikněte na dva body</li>\n                    <li>• <strong>Kružnice:</strong> Střed a bod na kružnici</li>\n                    <li>• <strong>Guma:</strong> Smazání objektu</li>\n                  </ul>\n                </div>\n                <div>\n                  <h4 className=\"font-medium mb-1\">Fyzické nástroje:</h4>\n                  <ul className=\"space-y-1\">\n                    <li>• <strong>Pravítko:</strong> Měření vzdáleností</li>\n                    <li>• <strong>Trojúhelník:</strong> Rýsování úhlů</li>\n                    <li>• <strong>Úhloměr:</strong> Měření úhlů</li>\n                    <li>• <strong>Modrý bod:</strong> Přesun nástroje</li>\n                    <li>• <strong>Zelený bod:</strong> Otočení nástroje</li>\n                    <li>• <strong>Oranžový bod:</strong> Změna velikosti</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Toolbar */}\n          <div className=\"flex flex-wrap gap-2 mb-4 p-4 bg-gray-100 rounded-lg\">\n            <button \n              onClick={() => setTool('mouse')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'mouse' ? 'bg-gray-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <path d=\"M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z\"/>\n                <path d=\"M13 13l6 6\"/>\n              </svg>\n              Myš\n            </button>\n            <button \n              onClick={() => setTool('point')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'point' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Circle size={18}/> Bod\n            </button>\n            <button \n              onClick={() => setTool('segment')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'segment' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Pencil size={18}/> Úsečka\n            </button>\n            <button \n              onClick={() => setTool('line')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'line' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Pencil size={18}/> Přímka\n            </button>\n            <button \n              onClick={() => setTool('circle')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'circle' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Circle size={18}/> Kružnice\n            </button>\n            <button \n              onClick={() => setTool('rubber')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'rubber' ? 'bg-red-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Eraser size={18}/> Guma\n            </button>\n            <button \n              onClick={() => renameManagerRef.current?.toggleRenameMode()}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                renameManagerRef.current?.isRenameMode() ? 'bg-teal-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n              title=\"Přejmenovat bod (klikněte na bod)\"\n            >\n              ✎ Název bodu\n            </button>\n            \n            <div className=\"border-l-2 border-gray-300 mx-2\"></div>\n            \n            <button \n              onClick={toggleRuler}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                rulerVisible ? 'bg-yellow-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Ruler size={18}/> Pravítko\n            </button>\n            <button \n              onClick={toggleTriangle}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                triangleVisible ? 'bg-purple-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Triangle size={18}/> Trojúhelník\n            </button>\n            <button \n              onClick={toggleProtractor}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                protractorVisible ? 'bg-orange-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Gauge size={18}/> Úhloměr\n            </button>\n\n            <div className=\"flex-1\"></div>\n\n            <button onClick={undoLast} className=\"px-3 py-2 rounded bg-gray-700 text-white hover:bg-gray-800 flex items-center gap-2\">\n              <RotateCcw size={18}/> Zpět\n            </button>\n            <button onClick={redoLast} className=\"px-3 py-2 rounded bg-gray-700 text-white hover:bg-gray-800 flex items-center gap-2\">\n              <RotateCw size={18}/> Znovu\n            </button>\n            <button onClick={clearAll} className=\"px-3 py-2 rounded bg-red-500 text-white hover:bg-red-600 flex items-center gap-2\">\n              <Trash2 size={18}/> Vymazat\n            </button>\n            <button onClick={saveConstruction} className=\"px-3 py-2 rounded bg-green-600 text-white hover:bg-green-700 flex items-center gap-2\">\n              <Save size={18}/> Uložit\n            </button>\n            <button onClick={exportConstruction} disabled={!data} className=\"px-3 py-2 rounded bg-blue-600 text-white hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2\">\n              <Download size={18}/> Export\n            </button>\n            <label className=\"px-3 py-2 rounded bg-purple-600 text-white hover:bg-purple-700 cursor-pointer flex items-center gap-2\">\n              <Upload size={18}/> Import\n              <input\n                type=\"file\"\n                accept=\".json\"\n                onChange={importConstruction}\n                className=\"hidden\"\n              />\n            </label>\n            <button onClick={loadConstruction} disabled={!data} className=\"px-3 py-2 rounded bg-orange-600 text-white hover:bg-orange-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2\">\n              <Upload size={18}/> Načíst\n            </button>\n          </div>\n\n          <div className=\"relative\">\n            {/* Settings Button - positioned outside JSXGraph container */}\n            <div className=\"absolute top-2 right-2 z-50 settings-dropdown\" style={{ zIndex: 9999 }}>\n              <button\n                onClick={() => setShowSettings(!showSettings)}\n                className=\"p-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg shadow-lg transition-colors\"\n                title=\"Nastavení mřížky\"\n                style={{ zIndex: 10000 }}\n              >\n                <Settings size={18} />\n              </button>\n              \n              {/* Settings Dropdown */}\n              {showSettings && (\n                <div className=\"absolute top-12 right-0 bg-white border border-gray-300 rounded-lg shadow-lg min-w-48 z-20\" style={{ zIndex: 10001 }}>\n                  <div className=\"p-3 border-b border-gray-200\">\n                    <div className=\"flex items-center gap-2 text-gray-700 font-medium\">\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <path d=\"M3 3h18v18H3z\"/>\n                        <path d=\"M9 9h6v6H9z\"/>\n                        <path d=\"M3 9h6\"/>\n                        <path d=\"M15 9h6\"/>\n                        <path d=\"M3 15h6\"/>\n                        <path d=\"M15 15h6\"/>\n                        <path d=\"M9 3v6\"/>\n                        <path d=\"M9 15v6\"/>\n                        <path d=\"M15 3v6\"/>\n                        <path d=\"M15 15v6\"/>\n                      </svg>\n                      Zobrazit mřížku\n                      <ChevronUp size={14} />\n                    </div>\n                  </div>\n                  <div className=\"py-1\">\n                    {GRID_MODES.map((mode) => (\n                      <button\n                        key={mode.id}\n                        onClick={() => {\n                          setGridOption(mode.id as GridMode)\n                          setShowSettings(false)\n                        }}\n                        className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${\n                          gridOption === mode.id ? 'bg-gray-100 text-gray-900' : 'text-gray-700'\n                        }`}\n                      >\n                        {mode.label}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <div \n              ref={containerRef} \n              id=\"jxgbox\" \n              className=\"w-full border-2 border-gray-300 rounded-lg bg-white jxgbox\" \n              style={{ height: 500, touchAction: 'none' }} \n            >\n            {/* Draggable Ruler */}\n            {rulerVisible && (\n              <DraggableRuler\n                x={rulerPosition.x}\n                y={rulerPosition.y}\n                rotation={rulerPosition.rotation}\n                length={rulerPosition.length}\n                onPositionChange={handleRulerPositionChange}\n                isActive={activeTool === 'ruler'}\n                onActivate={() => {\n                  setActiveTool('ruler')\n                  setTool('mouse') // Automatically switch to mouse mode when clicking ruler\n                }}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n            \n            {/* Draggable Triangle */}\n            {triangleVisible && (\n              <DraggableTriangle\n                x={trianglePosition.x}\n                y={trianglePosition.y}\n                rotation={trianglePosition.rotation}\n                size={trianglePosition.size}\n                type=\"45-45-90\"\n                onPositionChange={handleTrianglePositionChange}\n                isActive={activeTool === 'triangle'}\n                onActivate={() => {\n                  setActiveTool('triangle')\n                  setTool('mouse') // Automatically switch to mouse mode when clicking triangle\n                }}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n            \n            {/* Draggable Protractor */}\n            {protractorVisible && (\n              <DraggableProtractor\n                x={protractorPosition.x}\n                y={protractorPosition.y}\n                rotation={protractorPosition.rotation}\n                size={protractorPosition.size}\n                onPositionChange={handleProtractorPositionChange}\n                isActive={activeTool === 'protractor'}\n                onActivate={() => {\n                  setActiveTool('protractor')\n                  setTool('mouse') // Automatically switch to mouse mode when clicking protractor\n                }}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n            </div>\n          </div>\n\n          <div className=\"mt-4 p-3 bg-blue-50 border-l-4 border-blue-500 rounded-lg\">\n            <p className=\"text-blue-700 text-sm\">\n              <strong>Nápověda:</strong> Modrý bod = přesun • Zelený bod = otočení • Oranžový bod = změna velikosti\n            </p>\n          </div>\n\n          {feedback && (\n            <div className={`mt-4 p-4 rounded-lg ${\n              feedback.includes('✅') ? 'bg-green-50 border-l-4 border-green-500' : 'bg-yellow-50 border-l-4 border-yellow-500'\n            }`}>\n              <p className=\"text-gray-800\">{feedback}</p>\n            </div>\n          )}\n\n          {/* Construction History */}\n          {constructionHistory.length > 0 && (\n            <div className=\"mt-6 bg-gray-50 rounded-lg p-4\">\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-3\">Historie konstrukcí</h3>\n              <div className=\"space-y-2 max-h-40 overflow-y-auto\">\n                {constructionHistory.map((construction, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-2 bg-white rounded border\">\n                    <div>\n                      <span className=\"text-sm font-medium\">Konstrukce {index + 1}</span>\n                      <span className=\"text-xs text-gray-500 ml-2\">\n                        {new Date(construction.timestamp).toLocaleString('cs-CZ')}\n                      </span>\n                    </div>\n                    <div className=\"text-xs text-gray-500\">\n                      {construction.objects?.length || 0} objektů\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}