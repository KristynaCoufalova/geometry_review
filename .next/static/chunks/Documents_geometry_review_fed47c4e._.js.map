{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/measurement-scale.ts"],"sourcesContent":["// lib/measurement-scale.ts\n// Centralized logical measurement scale: 1 world unit = 1 cm\n\nexport const WORLD_PER_CM = 1\nexport const CM_PER_WORLD = 1 / WORLD_PER_CM\nexport const WORLD_PER_MM = WORLD_PER_CM / 10\n\nexport const UNIT_LABEL = 'cm'\n\nexport function toCm(valueInWorld: number): number {\n  return valueInWorld * CM_PER_WORLD\n}\n\nexport function fromCm(valueInCm: number): number {\n  return valueInCm * WORLD_PER_CM\n}\n\nexport function defaultBoundingBoxCm(widthCm: number, heightCm: number, marginCm = 0): [number, number, number, number] {\n  return [\n    0 - marginCm,\n    heightCm + marginCm,\n    widthCm + marginCm,\n    0 - marginCm\n  ]\n}\n\n/**\n * Calculate a bounding box in whole centimeters, centered at (0,0)\n * that fits within the given screen dimensions while maintaining aspect ratio.\n * \n * @param screenWidthPx Screen width in pixels\n * @param screenHeightPx Screen height in pixels\n * @param minSizeCm Minimum size in centimeters (default: 10cm)\n * @returns JSXGraph bounding box format: [left, top, right, bottom] where center is (0,0)\n */\nexport function calculateCenteredBoundingBoxCm(\n  screenWidthPx: number,\n  screenHeightPx: number,\n  minSizeCm: number = 10\n): [number, number, number, number] {\n  // Calculate aspect ratio\n  const screenAspect = screenWidthPx / screenHeightPx\n  \n  // Start with a reasonable default size\n  // We'll calculate whole centimeters that fit\n  const idealWidthCm = Math.max(minSizeCm, Math.floor(screenWidthPx / 30)) // ~30px per cm minimum\n  const idealHeightCm = Math.max(minSizeCm, Math.floor(screenHeightPx / 30))\n  \n  // Determine which dimension to constrain by\n  let widthCm: number\n  let heightCm: number\n  \n  if (screenAspect > 1) {\n    // Landscape: width is larger, constrain by height\n    heightCm = idealHeightCm\n    widthCm = Math.floor(heightCm * screenAspect)\n  } else {\n    // Portrait: height is larger, constrain by width\n    widthCm = idealWidthCm\n    heightCm = Math.floor(widthCm / screenAspect)\n  }\n  \n  // Ensure we have at least minSizeCm in both dimensions\n  widthCm = Math.max(widthCm, minSizeCm)\n  heightCm = Math.max(heightCm, minSizeCm)\n  \n  // Ensure both are whole centimeters (already are from Math.floor, but be explicit)\n  widthCm = Math.floor(widthCm)\n  heightCm = Math.floor(heightCm)\n  \n  // Create bounding box centered at (0,0)\n  // JSXGraph format: [left, top, right, bottom]\n  const halfWidth = widthCm / 2\n  const halfHeight = heightCm / 2\n  \n  return [\n    -halfWidth,  // left\n    halfHeight,  // top\n    halfWidth,   // right\n    -halfHeight  // bottom\n  ]\n}\n\n\n"],"names":[],"mappings":"AAAA,2BAA2B;AAC3B,6DAA6D;;;;;;;;;;;;;;;;;;;AAEtD,MAAM,eAAe;AACrB,MAAM,eAAe,IAAI;AACzB,MAAM,eAAe,eAAe;AAEpC,MAAM,aAAa;AAEnB,SAAS,KAAK,YAAoB;IACvC,OAAO,eAAe;AACxB;AAEO,SAAS,OAAO,SAAiB;IACtC,OAAO,YAAY;AACrB;AAEO,SAAS,qBAAqB,OAAe,EAAE,QAAgB;QAAE,WAAA,iEAAW;IACjF,OAAO;QACL,IAAI;QACJ,WAAW;QACX,UAAU;QACV,IAAI;KACL;AACH;AAWO,SAAS,+BACd,aAAqB,EACrB,cAAsB;QACtB,YAAA,iEAAoB;IAEpB,yBAAyB;IACzB,MAAM,eAAe,gBAAgB;IAErC,uCAAuC;IACvC,6CAA6C;IAC7C,MAAM,eAAe,KAAK,GAAG,CAAC,WAAW,KAAK,KAAK,CAAC,gBAAgB,KAAK,uBAAuB;;IAChG,MAAM,gBAAgB,KAAK,GAAG,CAAC,WAAW,KAAK,KAAK,CAAC,iBAAiB;IAEtE,4CAA4C;IAC5C,IAAI;IACJ,IAAI;IAEJ,IAAI,eAAe,GAAG;QACpB,kDAAkD;QAClD,WAAW;QACX,UAAU,KAAK,KAAK,CAAC,WAAW;IAClC,OAAO;QACL,iDAAiD;QACjD,UAAU;QACV,WAAW,KAAK,KAAK,CAAC,UAAU;IAClC;IAEA,uDAAuD;IACvD,UAAU,KAAK,GAAG,CAAC,SAAS;IAC5B,WAAW,KAAK,GAAG,CAAC,UAAU;IAE9B,mFAAmF;IACnF,UAAU,KAAK,KAAK,CAAC;IACrB,WAAW,KAAK,KAAK,CAAC;IAEtB,wCAAwC;IACxC,8CAA8C;IAC9C,MAAM,YAAY,UAAU;IAC5B,MAAM,aAAa,WAAW;IAE9B,OAAO;QACL,CAAC;QACD;QACA;QACA,CAAC,WAAY,SAAS;KACvB;AACH","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/hooks/useBoardScale.ts"],"sourcesContent":["import { useCallback } from 'react'\nimport { calculateCenteredBoundingBoxCm } from '../../lib/measurement-scale'\n\nexport function useBoardScale(ref: React.RefObject<HTMLDivElement | null>) {\n  const get = useCallback(() => {\n    const box = ref.current?.closest('.jxgbox') as HTMLElement | null\n    if (!box) {\n      // Fallback with default bounding box\n      const [left, top, right, bottom] = calculateCenteredBoundingBoxCm(800, 500)\n      const unitsX = right - left\n      const unitsY = top - bottom\n      return { \n        pxPerUnitX: 50, \n        pxPerUnitY: 50, \n        uniformScale: 50,\n        boardLeft: left,\n        boardTop: top,\n        boardRight: right,\n        boardBottom: bottom,\n        boardWidth: unitsX,\n        boardHeight: unitsY\n      }\n    }\n    \n    const { width: w, height: h } = box.getBoundingClientRect()\n    \n    // Calculate bounding box in whole centimeters, centered at (0,0)\n    const [left, top, right, bottom] = calculateCenteredBoundingBoxCm(w, h)\n    const unitsX = right - left\n    const unitsY = top - bottom\n    \n    // Calculate uniform scale to maintain aspect ratio\n    const scaleX = w / unitsX\n    const scaleY = h / unitsY\n    const uniformScale = Math.min(scaleX, scaleY)\n    \n    return { \n      pxPerUnitX: uniformScale, \n      pxPerUnitY: uniformScale, \n      uniformScale,\n      boardLeft: left,\n      boardTop: top,\n      boardRight: right,\n      boardBottom: bottom,\n      boardWidth: unitsX,\n      boardHeight: unitsY\n    }\n  }, [ref])\n  \n  return get\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEO,SAAS,cAAc,GAA2C;;IACvE,MAAM,MAAM,IAAA,4MAAW;0CAAC;gBACV;YAAZ,MAAM,OAAM,eAAA,IAAI,OAAO,cAAX,mCAAA,aAAa,OAAO,CAAC;YACjC,IAAI,CAAC,KAAK;gBACR,qCAAqC;gBACrC,MAAM,CAAC,MAAM,KAAK,OAAO,OAAO,GAAG,IAAA,gMAA8B,EAAC,KAAK;gBACvE,MAAM,SAAS,QAAQ;gBACvB,MAAM,SAAS,MAAM;gBACrB,OAAO;oBACL,YAAY;oBACZ,YAAY;oBACZ,cAAc;oBACd,WAAW;oBACX,UAAU;oBACV,YAAY;oBACZ,aAAa;oBACb,YAAY;oBACZ,aAAa;gBACf;YACF;YAEA,MAAM,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,GAAG,IAAI,qBAAqB;YAEzD,iEAAiE;YACjE,MAAM,CAAC,MAAM,KAAK,OAAO,OAAO,GAAG,IAAA,gMAA8B,EAAC,GAAG;YACrE,MAAM,SAAS,QAAQ;YACvB,MAAM,SAAS,MAAM;YAErB,mDAAmD;YACnD,MAAM,SAAS,IAAI;YACnB,MAAM,SAAS,IAAI;YACnB,MAAM,eAAe,KAAK,GAAG,CAAC,QAAQ;YAEtC,OAAO;gBACL,YAAY;gBACZ,YAAY;gBACZ;gBACA,WAAW;gBACX,UAAU;gBACV,YAAY;gBACZ,aAAa;gBACb,YAAY;gBACZ,aAAa;YACf;QACF;yCAAG;QAAC;KAAI;IAER,OAAO;AACT;GA/CgB","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/DraggableRuler.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react'\nimport { useBoardScale } from '../hooks/useBoardScale'\n\ninterface DraggableRulerProps {\n  x: number\n  y: number\n  rotation: number\n  length: number\n  onPositionChange: (x: number, y: number, rotation: number, length: number) => void\n  isActive: boolean\n  onActivate: () => void\n  onUiBusyChange: (busy: boolean) => void\n}\n\nexport default function DraggableRuler({\n  x,\n  y,\n  rotation,\n  length,\n  onPositionChange,\n  isActive,\n  onActivate,\n  onUiBusyChange\n}: DraggableRulerProps) {\n  const [isDragging, setIsDragging] = useState(false)\n  const [isRotating, setIsRotating] = useState(false)\n  const [isResizing, setIsResizing] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 })\n  const [rotationStart, setRotationStart] = useState({ x: 0, y: 0, rotation: 0, initialAngle: 0 })\n  const [resizeStart, setResizeStart] = useState({ x: 0, y: 0, length: 0 })\n  const rulerRef = useRef<HTMLDivElement>(null)\n  const getScale = useBoardScale(rulerRef)\n  const { pxPerUnitX, pxPerUnitY } = getScale()\n  const pxPerUnit = Math.min(pxPerUnitX, pxPerUnitY)\n\n  // Memoized coordinate conversion functions for better performance\n  const coordinateConverter = useMemo(() => {\n    const scaleInfo = getScale()\n    const { boardLeft, boardTop, boardRight, boardBottom, boardWidth, boardHeight } = scaleInfo\n    \n    return {\n      boardToScreen: (boardX: number, boardY: number) => {\n        // Get actual container dimensions\n        const container = rulerRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const screenX = ((boardX - boardLeft) / boardWidth) * containerWidth\n        const screenY = containerHeight - ((boardY - boardBottom) / boardHeight) * containerHeight\n        \n        return { x: screenX, y: screenY }\n      },\n      screenToBoard: (screenX: number, screenY: number) => {\n        const container = rulerRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const boardX = (screenX / containerWidth) * boardWidth + boardLeft\n        const boardY = boardTop - (screenY / containerHeight) * boardHeight\n        \n        return { x: boardX, y: boardY }\n      }\n    }\n  }, [getScale])\n\n  const boardToScreen = coordinateConverter.boardToScreen\n  const screenToBoard = coordinateConverter.screenToBoard\n\n  // Helper functions for rotation with gain\n  const shortestDelta = (a: number, b: number) => {\n    return ((b - a + 540) % 360) - 180\n  }\n\n  const angleDeg = (px: number, py: number, mx: number, my: number) => {\n    return Math.atan2(my - py, mx - px) * 180 / Math.PI\n  }\n\n  const clamp = (v: number, lo: number, hi: number) => {\n    return Math.max(lo, Math.min(hi, v))\n  }\n\n  const screenPos = boardToScreen(x, y)\n\n  // Smooth movement without grid snapping\n  const smoothPosition = (boardX: number, boardY: number) => {\n    return { x: boardX, y: boardY }\n  }\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from ruler center to mouse position\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const initialAngle = Math.atan2(e.clientY - centerY, e.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: e.clientX, y: e.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: e.clientX, y: e.clientY, length })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    }\n  }\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const touch = e.touches[0]\n    if (!touch) return\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from ruler center to touch position\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const initialAngle = Math.atan2(touch.clientY - centerY, touch.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: touch.clientX, y: touch.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: touch.clientX, y: touch.clientY, length })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    }\n  }\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDragging) {\n      const newScreenX = e.clientX - dragStart.x\n      const newScreenY = e.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, length)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      \n      // Calculate current angle from center to mouse\n      const currentAngle = angleDeg(centerX, centerY, e.clientX, e.clientY)\n      \n      // Calculate the difference from the initial angle using shortest path\n      const delta = shortestDelta(rotationStart.initialAngle, currentAngle)\n      \n      // Compute radius from center to cursor (in px)\n      const r = Math.hypot(e.clientX - centerX, e.clientY - centerY)\n      \n      // Gain: tune these numbers; e.g., 200/r gives ~2x at r=100px, ~1x at r=200px\n      const gain = clamp(200 / (r || 1), 1.2, 3.0)\n      \n      const newRotation = rotationStart.rotation + delta * gain\n      onPositionChange(x, y, newRotation, length)\n    } else if (isResizing) {\n      const deltaX = e.clientX - resizeStart.x\n      const deltaY = e.clientY - resizeStart.y\n      \n      // Project the delta vector onto the ruler's axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const rulerAxisX = Math.cos(rotationRad)\n      const rulerAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the ruler axis\n      const projection = deltaX * rulerAxisX + deltaY * rulerAxisY\n      const deltaDistance = projection / pxPerUnit\n      \n      const newLength = Math.max(2, Math.min(10, resizeStart.length + deltaDistance))\n      onPositionChange(x, y, rotation, newLength)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, screenPos, x, y, rotation, length, onPositionChange, pxPerUnit, screenToBoard])\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    const touch = e.touches[0]\n    if (!touch) return\n    \n    if (isDragging) {\n      const newScreenX = touch.clientX - dragStart.x\n      const newScreenY = touch.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, length)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      \n      // Calculate current angle from center to touch\n      const currentAngle = angleDeg(centerX, centerY, touch.clientX, touch.clientY)\n      \n      // Calculate the difference from the initial angle using shortest path\n      const delta = shortestDelta(rotationStart.initialAngle, currentAngle)\n      \n      // Compute radius from center to cursor (in px)\n      const r = Math.hypot(touch.clientX - centerX, touch.clientY - centerY)\n      \n      // Gain: tune these numbers; e.g., 200/r gives ~2x at r=100px, ~1x at r=200px\n      const gain = clamp(200 / (r || 1), 1.2, 3.0)\n      \n      const newRotation = rotationStart.rotation + delta * gain\n      onPositionChange(x, y, newRotation, length)\n    } else if (isResizing) {\n      const deltaX = touch.clientX - resizeStart.x\n      const deltaY = touch.clientY - resizeStart.y\n      \n      // Project the delta vector onto the ruler's axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const rulerAxisX = Math.cos(rotationRad)\n      const rulerAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the ruler axis\n      const projection = deltaX * rulerAxisX + deltaY * rulerAxisY\n      const deltaDistance = projection / pxPerUnit\n      \n      const newLength = Math.max(2, Math.min(10, resizeStart.length + deltaDistance))\n      onPositionChange(x, y, rotation, newLength)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, screenPos, x, y, rotation, length, onPositionChange, pxPerUnit, screenToBoard])\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  useEffect(() => {\n    if (isDragging || isRotating || isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      document.addEventListener('touchmove', handleTouchMove, { passive: false })\n      document.addEventListener('touchend', handleTouchEnd)\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.removeEventListener('touchmove', handleTouchMove, { passive: false } as any)\n        document.removeEventListener('touchend', handleTouchEnd)\n      }\n    }\n  }, [isDragging, isRotating, isResizing, handleMouseMove, handleTouchMove, handleMouseUp, handleTouchEnd])\n\n  // ResizeObserver to handle container size changes\n  useEffect(() => {\n    const el = rulerRef.current?.closest('.jxgbox')\n    if (!el) return\n    \n    const ro = new ResizeObserver(() => {\n      // Force a light refresh by updating dragStart state\n      setDragStart(s => ({ ...s }))\n    })\n    ro.observe(el)\n    return () => ro.disconnect()\n  }, [])\n\n  // Generate ruler markings based on actual length units\n  const generateMarkings = () => {\n    const markings = []\n    const rulerWidthPx = length * pxPerUnit\n    \n    // Create markings every 0.1 units, with major marks at 1.0 and medium at 0.5\n    const markInterval = 0.1 // Mark every 0.1 units\n    const numMarks = Math.floor(length / markInterval)\n    \n    for (let i = 0; i <= numMarks; i++) {\n      const unitValue = i * markInterval\n      const position = (unitValue / length) * rulerWidthPx\n      \n      const isMajor = unitValue % 1 === 0 // Major marks every 1 unit\n      const isMedium = unitValue % 0.5 === 0 && !isMajor // Medium marks every 0.5 units\n      \n      let height = 'h-1'\n      let opacity = 0.3\n      if (isMajor) {\n        height = 'h-5'\n        opacity = 0.8\n      } else if (isMedium) {\n        height = 'h-3'\n        opacity = 0.6\n      }\n      \n      markings.push(\n        <div\n          key={`mark-${i}`}\n          className={`absolute w-[1px] ${height} bg-black transition-all duration-200`}\n          style={{\n            left: position,\n            top: -1,\n            transform: 'translateX(-50%)',\n            opacity\n          }}\n        />\n      )\n      \n      // Add labels for major marks (every 1 unit)\n      if (isMajor && unitValue > 0) {\n        markings.push(\n          <div\n            key={`label-${i}`}\n            className=\"absolute text-[10px] text-slate-600 font-medium tracking-tight\"\n            style={{\n              left: position,\n              top: -16,\n              transform: 'translateX(-50%)',\n              fontFeatureSettings: '\"tnum\"'\n            }}\n          >\n            {unitValue}\n          </div>\n        )\n      }\n    }\n    \n    return markings\n  }\n\n  return (\n    <div\n      ref={rulerRef}\n      className={`absolute select-none group ${isActive ? 'z-50' : 'z-40'}`}\n      style={{\n        left: screenPos.x,\n        top: screenPos.y,\n        transform: `rotate(${rotation}deg)`,\n        transformOrigin: '0 0'\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleTouchStart}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      {/* Ruler body with enhanced SVG styling */}\n      <div className=\"relative\" style={{ pointerEvents: 'none' }}>\n        <svg\n          width={length * pxPerUnit + 100}\n          height={40}\n          className=\"absolute\"\n          style={{ left: -50, top: -10, pointerEvents: 'auto' }}\n        >\n          <defs>\n            {/* Main plastic gradient with enhanced depth and contrast */}\n            <linearGradient id=\"rulerPlasticGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.6)\" />\n              <stop offset=\"15%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.2)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(240,245,250,0.1)\" />\n              <stop offset=\"70%\" stopColor=\"rgba(200,210,220,0.15)\" />\n              <stop offset=\"85%\" stopColor=\"rgba(150,160,170,0.2)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(100,110,120,0.25)\" />\n            </linearGradient>\n\n            {/* Secondary highlight gradient for more realistic plastic look */}\n            <linearGradient id=\"rulerHighlightGradient\" x1=\"0%\" y1=\"0%\" x2=\"60%\" y2=\"40%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.8)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"60%\" stopColor=\"rgba(255,255,255,0.1)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(255,255,255,0)\" />\n            </linearGradient>\n\n            {/* Shadow gradient for depth */}\n            <linearGradient id=\"rulerShadowGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(0,0,0,0)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(0,0,0,0.05)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(0,0,0,0.15)\" />\n            </linearGradient>\n\n            {/* Enhanced drop shadow with more depth and realism */}\n            <filter id=\"rulerSoftShadow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feDropShadow dx=\"0\" dy=\"8\" stdDeviation=\"16\" floodColor=\"#000\" floodOpacity=\"0.3\" />\n              <feDropShadow dx=\"0\" dy=\"4\" stdDeviation=\"8\" floodColor=\"#000\" floodOpacity=\"0.2\" />\n              <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"4\" floodColor=\"#000\" floodOpacity=\"0.1\" />\n            </filter>\n\n            {/* Glow effect for active state */}\n            <filter id=\"rulerGlow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/>\n              </feMerge>\n            </filter>\n          </defs>\n          \n          {/* Ruler plastic look: base fill, shine gradient overlay, and stroke */}\n          <g filter={isActive ? \"url(#rulerGlow)\" : \"url(#rulerSoftShadow)\"}>\n            {/* Base fill with enhanced opacity for better depth */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"rgba(240,245,250,0.25)\" />\n            {/* Shadow gradient for depth */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"url(#rulerShadowGradient)\" />\n            {/* Main plastic gradient overlay */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"url(#rulerPlasticGradient)\" />\n            {/* Highlight gradient for realistic plastic shine */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"url(#rulerHighlightGradient)\" />\n            {/* Enhanced outline with subtle inner shadow */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\"/>\n          </g>\n          \n          {/* Enhanced ruler markings with 0.1cm precision */}\n          {(() => {\n            const markings = []\n            const rulerWidthPx = length * pxPerUnit\n            const pxPerCm = pxPerUnit\n            const maxCm = Math.floor(length)\n            \n            // Create markings every 0.1cm (1mm)\n            for (let cm = 0; cm <= maxCm; cm++) {\n              const x = 50 + cm * pxPerCm\n              const isFive = cm % 5 === 0\n              const majorLen = isFive ? 18 : 12\n              \n              // Main centimeter tick mark\n              markings.push(\n                <rect\n                  key={`cm-${cm}`}\n                  x={x - 0.5}\n                  y={10}\n                  width={1}\n                  height={majorLen}\n                  fill=\"#000\"\n                />\n              )\n              \n              // Millimeter marks (9 small ticks between each centimeter)\n              if (cm < maxCm) {\n                for (let mm = 1; mm < 10; mm++) {\n                  const xx = x + (pxPerCm * mm) / 10\n                  const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n                  \n                  markings.push(\n                    <rect\n                      key={`mm-${cm}-${mm}`}\n                      x={xx - 0.25}\n                      y={10}\n                      width={0.5}\n                      height={mmLen}\n                      fill=\"#000\"\n                      opacity=\"0.75\"\n                    />\n                  )\n                }\n              }\n            }\n            \n            // Add millimeter marks between last whole centimeter and final length value\n            if (length % 1 !== 0) {\n              const lastWholeCm = Math.floor(length)\n              const finalX = 50 + length * pxPerCm\n              \n              // Add millimeter marks from last whole cm to final length\n              for (let mm = 1; mm <= Math.floor((length - lastWholeCm) * 10); mm++) {\n                const xx = 50 + (lastWholeCm + mm / 10) * pxPerCm\n                const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n                \n                markings.push(\n                  <rect\n                    key={`mm-final-${mm}`}\n                    x={xx - 0.25}\n                    y={10}\n                    width={0.5}\n                    height={mmLen}\n                    fill=\"#000\"\n                    opacity=\"0.75\"\n                  />\n                )\n              }\n              \n              // Add final marking at exact length value\n              markings.push(\n                <rect\n                  key={`cm-final`}\n                  x={finalX - 0.5}\n                  y={10}\n                  width={1}\n                  height={12}\n                  fill=\"#000\"\n                />\n              )\n            }\n            \n            return markings\n          })()}\n        </svg>\n        \n        {/* Ruler numbers - positioned as HTML elements like in the triangle component */}\n        {(() => {\n          const pxPerCm = pxPerUnit\n          const maxCm = Math.floor(length)\n          const numbers = []\n          \n          for (let cm = 1; cm <= maxCm; cm++) {\n            const x = cm * pxPerCm\n            const isFive = cm % 5 === 0\n            \n            numbers.push(\n              <div\n                key={`ruler-number-${cm}`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: x, // Direct positioning without SVG offset\n                  top: -25, // Position above the ruler\n                  transform: 'translateX(-50%)',\n                  fontWeight: isFive ? 'bold' : 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {cm}\n              </div>\n            )\n          }\n\n          // Add final number at exact length value (only if not a whole number)\n          if (length % 1 !== 0) {\n            const finalX = length * pxPerCm\n            numbers.push(\n              <div\n                key={`ruler-number-final`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: finalX, // Direct positioning without SVG offset\n                  top: -25, // Position above the ruler\n                  transform: 'translateX(-50%)',\n                  fontWeight: 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {length.toFixed(1)}\n              </div>\n            )\n          }\n          \n          return numbers\n        })()}\n        \n        {/* Rotation handle - enhanced styling to match triangle */}\n        <div\n          className=\"rotation-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-emerald-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like triangle\n            left: length * pxPerUnit - 2,\n            top: 2,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 20\n          }}\n          title=\"Otočit pravítko\"\n        >\n          <div className=\"w-2 h-2 bg-emerald-500 rounded-full\" />\n        </div>\n        \n        {/* Resize handle - enhanced styling to match triangle */}\n        <div\n          className=\"resize-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-amber-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like triangle\n            left: length * pxPerUnit - 2,\n            top: 14,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 15\n          }}\n          title=\"Změnit délku\"\n        >\n          <div className=\"w-2 h-2 bg-amber-500 rounded-full\" />\n        </div>\n      </div>\n      \n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1105, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/DraggableTriangle.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react'\nimport { useBoardScale } from '../hooks/useBoardScale'\n\ninterface DraggableTriangleProps {\n  x: number\n  y: number\n  rotation: number\n  size: number\n  type: '45-45-90' | '30-60-90'\n  onPositionChange: (x: number, y: number, rotation: number, size: number) => void\n  isActive: boolean\n  onActivate: () => void\n  onUiBusyChange: (busy: boolean) => void\n}\n\nexport default function DraggableTriangle({\n  x,\n  y,\n  rotation,\n  size,\n  type,\n  onPositionChange,\n  isActive,\n  onActivate,\n  onUiBusyChange\n}: DraggableTriangleProps) {\n  const [isDragging, setIsDragging] = useState(false)\n  const [isRotating, setIsRotating] = useState(false)\n  const [isResizing, setIsResizing] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 })\n  const [rotationStart, setRotationStart] = useState({ x: 0, y: 0, rotation: 0, initialAngle: 0 })\n  const [resizeStart, setResizeStart] = useState({ x: 0, y: 0, size: 0 })\n  const triangleRef = useRef<HTMLDivElement>(null)\n  const getScale = useBoardScale(triangleRef)\n  const { pxPerUnitX, pxPerUnitY } = getScale()\n  const pxPerUnit = Math.min(pxPerUnitX, pxPerUnitY)\n  \n  // Pivot offset: the right-angle vertex sits at (50, 50) in wrapper coords\n  // due to SVG offset of (-50, -50), matching where (0, 0) in SVG coords is\n  const PIVOT_OFFSET = { x: 50, y: 50 }\n\n  // Memoized coordinate conversion functions for better performance\n  const coordinateConverter = useMemo(() => {\n    const scaleInfo = getScale()\n    const { boardLeft, boardTop, boardRight, boardBottom, boardWidth, boardHeight } = scaleInfo\n    \n    return {\n      boardToScreen: (boardX: number, boardY: number) => {\n        // Get actual container dimensions\n        const container = triangleRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const screenX = ((boardX - boardLeft) / boardWidth) * containerWidth\n        const screenY = containerHeight - ((boardY - boardBottom) / boardHeight) * containerHeight\n        \n        return { x: screenX, y: screenY }\n      },\n      screenToBoard: (screenX: number, screenY: number) => {\n        const container = triangleRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const boardX = (screenX / containerWidth) * boardWidth + boardLeft\n        const boardY = boardTop - (screenY / containerHeight) * boardHeight\n        \n        return { x: boardX, y: boardY }\n      }\n    }\n  }, [getScale])\n\n  const boardToScreen = coordinateConverter.boardToScreen\n  const screenToBoard = coordinateConverter.screenToBoard\n\n  // Helper functions for rotation with gain\n  const shortestDelta = (a: number, b: number) => {\n    return ((b - a + 540) % 360) - 180\n  }\n\n  const angleDeg = (px: number, py: number, mx: number, my: number) => {\n    return Math.atan2(my - py, mx - px) * 180 / Math.PI\n  }\n\n  const clamp = (v: number, lo: number, hi: number) => {\n    return Math.max(lo, Math.min(hi, v))\n  }\n\n  // Calculate screen position with state to ensure it updates after mount\n  const [screenPos, setScreenPos] = useState(() => {\n    const pos = boardToScreen(x, y)\n    // Ensure valid numbers\n    return {\n      x: isNaN(pos.x) ? 0 : pos.x,\n      y: isNaN(pos.y) ? 0 : pos.y\n    }\n  })\n\n  // Update screen position when coordinates or scale changes\n  useEffect(() => {\n    const pos = boardToScreen(x, y)\n    // Ensure valid numbers\n    setScreenPos({\n      x: isNaN(pos.x) ? 0 : pos.x,\n      y: isNaN(pos.y) ? 0 : pos.y\n    })\n  }, [x, y, boardToScreen])\n\n  // Ensure position is recalculated after mount when ref is ready\n  useEffect(() => {\n    // Use a small timeout to ensure the DOM is fully mounted\n    const timeoutId = setTimeout(() => {\n      if (triangleRef.current) {\n        const pos = boardToScreen(x, y)\n        // Ensure valid numbers\n        setScreenPos({\n          x: isNaN(pos.x) ? 0 : pos.x,\n          y: isNaN(pos.y) ? 0 : pos.y\n        })\n      }\n    }, 0)\n    return () => clearTimeout(timeoutId)\n  }, [boardToScreen, x, y])\n\n  // Smooth movement without grid snapping\n  const smoothPosition = (boardX: number, boardY: number) => {\n    return { x: boardX, y: boardY }\n  }\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from pivot (right-angle vertex) to mouse position\n      const pivot = boardToScreen(x, y)\n      const pivotX = pivot.x\n      const pivotY = pivot.y\n      const initialAngle = Math.atan2(e.clientY - pivotY, e.clientX - pivotX) * (180 / Math.PI)\n      setRotationStart({ x: e.clientX, y: e.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: e.clientX, y: e.clientY, size })\n    } else if (target.classList.contains('drag-handle') || target.closest('.drag-handle')) {\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    } else {\n      // Allow dragging from anywhere on the triangle\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    }\n  }\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const touch = e.touches[0]\n    if (!touch) return\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from pivot (right-angle vertex) to touch position\n      const pivot = boardToScreen(x, y)\n      const pivotX = pivot.x\n      const pivotY = pivot.y\n      const initialAngle = Math.atan2(touch.clientY - pivotY, touch.clientX - pivotX) * (180 / Math.PI)\n      setRotationStart({ x: touch.clientX, y: touch.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: touch.clientX, y: touch.clientY, size })\n    } else if (target.classList.contains('drag-handle') || target.closest('.drag-handle')) {\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    } else {\n      // Allow dragging from anywhere on the triangle\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    }\n  }\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDragging) {\n      const newScreenX = e.clientX - dragStart.x\n      const newScreenY = e.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      // Use the pivot (right-angle vertex) in screen coords\n      const pivot = boardToScreen(x, y)\n      \n      // Calculate current angle from pivot to mouse\n      const currentAngle = angleDeg(pivot.x, pivot.y, e.clientX, e.clientY)\n      \n      // Calculate the difference from the initial angle using shortest path\n      const delta = shortestDelta(rotationStart.initialAngle, currentAngle)\n      \n      // Compute radius from pivot to cursor (in px)\n      const r = Math.hypot(e.clientX - pivot.x, e.clientY - pivot.y)\n      \n      // Gain: tune these numbers; e.g., 200/r gives ~2x at r=100px, ~1x at r=200px\n      const gain = clamp(120 / (r || 1), 1.2, 3.0)\n      \n      const newRotation = rotationStart.rotation + delta * gain\n      onPositionChange(x, y, newRotation, size)\n    } else if (isResizing) {\n      const deltaX = e.clientX - resizeStart.x\n      const deltaY = e.clientY - resizeStart.y\n      \n      // Project the delta vector onto the triangle's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const triangleAxisX = Math.cos(rotationRad)\n      const triangleAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the triangle axis\n      const projection = deltaX * triangleAxisX + deltaY * triangleAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const proposedSize = resizeStart.size + deltaSize\n      \n      // Calculate height based on triangle type\n      const height = type === '45-45-90' ? proposedSize : proposedSize * Math.sqrt(3) / 2\n      \n      // Enforce height constraints: minimum 3cm, maximum 10cm\n      let constrainedSize = proposedSize\n      if (height < 3) {\n        // Calculate size needed for 3cm height\n        constrainedSize = type === '45-45-90' ? 3 : 3 / (Math.sqrt(3) / 2)\n      } else if (height > 10) {\n        // Calculate size needed for 10cm height\n        constrainedSize = type === '45-45-90' ? 10 : 10 / (Math.sqrt(3) / 2)\n      }\n      \n      onPositionChange(x, y, rotation, constrainedSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, x, y, rotation, size, type, onPositionChange, screenToBoard, boardToScreen])\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    const touch = e.touches[0]\n    if (!touch) return\n    \n    if (isDragging) {\n      const newScreenX = touch.clientX - dragStart.x\n      const newScreenY = touch.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      // Use the pivot (right-angle vertex) in screen coords\n      const pivot = boardToScreen(x, y)\n      \n      // Calculate current angle from pivot to touch\n      const currentAngle = angleDeg(pivot.x, pivot.y, touch.clientX, touch.clientY)\n      \n      // Calculate the difference from the initial angle using shortest path\n      const delta = shortestDelta(rotationStart.initialAngle, currentAngle)\n      \n      // Compute radius from pivot to cursor (in px)\n      const r = Math.hypot(touch.clientX - pivot.x, touch.clientY - pivot.y)\n      \n      // Gain: tune these numbers; e.g., 200/r gives ~2x at r=100px, ~1x at r=200px\n      const gain = clamp(200 / (r || 1), 1.2, 3.0)\n      \n      const newRotation = rotationStart.rotation + delta * gain\n      onPositionChange(x, y, newRotation, size)\n    } else if (isResizing) {\n      const deltaX = touch.clientX - resizeStart.x\n      const deltaY = touch.clientY - resizeStart.y\n      \n      // Project the delta vector onto the triangle's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const triangleAxisX = Math.cos(rotationRad)\n      const triangleAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the triangle axis\n      const projection = deltaX * triangleAxisX + deltaY * triangleAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const proposedSize = resizeStart.size + deltaSize\n      \n      // Calculate height based on triangle type\n      const height = type === '45-45-90' ? proposedSize : proposedSize * Math.sqrt(3) / 2\n      \n      // Enforce height constraints: minimum 3cm, maximum 10cm\n      let constrainedSize = proposedSize\n      if (height < 3) {\n        // Calculate size needed for 3cm height\n        constrainedSize = type === '45-45-90' ? 3 : 3 / (Math.sqrt(3) / 2)\n      } else if (height > 10) {\n        // Calculate size needed for 10cm height\n        constrainedSize = type === '45-45-90' ? 10 : 10 / (Math.sqrt(3) / 2)\n      }\n      \n      onPositionChange(x, y, rotation, constrainedSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, x, y, rotation, size, type, onPositionChange, screenToBoard, boardToScreen])\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  useEffect(() => {\n    if (isDragging || isRotating || isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      document.addEventListener('touchmove', handleTouchMove, { passive: false })\n      document.addEventListener('touchend', handleTouchEnd)\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.removeEventListener('touchmove', handleTouchMove, { passive: false } as any)\n        document.removeEventListener('touchend', handleTouchEnd)\n      }\n    }\n  }, [isDragging, isRotating, isResizing, handleMouseMove, handleTouchMove, handleMouseUp, handleTouchEnd])\n\n  // ResizeObserver to handle container size changes\n  useEffect(() => {\n    const el = triangleRef.current?.closest('.jxgbox')\n    if (!el) return\n    \n    const ro = new ResizeObserver(() => {\n      // Recalculate screen position when container resizes\n      const pos = boardToScreen(x, y)\n      setScreenPos({\n        x: isNaN(pos.x) ? 0 : pos.x,\n        y: isNaN(pos.y) ? 0 : pos.y\n      })\n      // Force a light refresh by updating dragStart state\n      setDragStart(s => ({ ...s }))\n    })\n    ro.observe(el)\n    return () => ro.disconnect()\n  }, [x, y, boardToScreen])\n\n  // Generate triangle points based on type\n  const getTrianglePoints = () => {\n    const screenSize = size * pxPerUnit\n    const halfSize = screenSize / 2\n    \n    if (type === '45-45-90') {\n      // Right triangle with 45-45-90 angles\n      return [\n        { x: 0, y: 0 },           // Right angle vertex\n        { x: screenSize, y: 0 },  // Bottom right\n        { x: 0, y: screenSize }   // Top left\n      ]\n    } else {\n      // Right triangle with 30-60-90 angles\n      const height = screenSize * Math.sqrt(3) / 2\n      return [\n        { x: 0, y: 0 },           // Right angle vertex\n        { x: screenSize, y: 0 },  // Bottom right\n        { x: 0, y: height }       // Top left (60° angle)\n      ]\n    }\n  }\n\n  // Generate enhanced ruler markings as SVG elements matching the detailed specifications\n  const renderRulerMarkingsSvg = () => {\n    const screenSize = size * pxPerUnit\n    const pxPerCm = pxPerUnit // 1 cm = pxPerUnit pixels\n    const verticalLength = type === '45-45-90' ? screenSize : (screenSize * Math.sqrt(3)) / 2\n    const maxCm = Math.min(16, Math.floor(size)) // Use floor to stop at or before actual size\n    const maxVerticalCm = Math.min(16, Math.floor(type === '45-45-90' ? size : size * Math.sqrt(3) / 2))\n\n    // Horizontal ruler (bottom edge) - 0 to maxCm\n    const horizontalTicks: React.ReactNode[] = []\n    for (let cm = 0; cm <= maxCm; cm++) {\n      const x = cm * pxPerCm\n      const isFive = cm % 5 === 0\n      const majorLen = isFive ? 18 : 12 // Length of tick mark\n      \n      // Main centimeter tick mark\n      horizontalTicks.push(\n        <rect\n          key={`h-cm-${cm}`}\n          x={x - 0.75}\n          y={0}\n          width={1.5}\n          height={majorLen}\n          fill=\"#000\"\n        />\n      )\n      \n      // Number labels will be handled separately as HTML elements\n      \n      // Millimeter marks (9 small ticks between each centimeter)\n      if (cm < maxCm) {\n        for (let mm = 1; mm < 10; mm++) {\n          const xx = x + (pxPerCm * mm) / 10\n          const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n          \n          horizontalTicks.push(\n            <rect\n              key={`h-mm-${cm}-${mm}`}\n              x={xx - 0.5}\n              y={0}\n              width={1}\n              height={mmLen}\n              fill=\"#000\"\n              opacity=\"0.75\"\n            />\n          )\n        }\n      }\n    }\n\n    // Add millimeter marks between last whole centimeter and final size value\n    if (size % 1 !== 0) {\n      const lastWholeCm = Math.floor(size)\n      const finalX = size * pxPerCm\n      \n      // Add millimeter marks from last whole cm to final size\n      for (let mm = 1; mm <= Math.floor((size - lastWholeCm) * 10); mm++) {\n        const xx = (lastWholeCm + mm / 10) * pxPerCm\n        const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n        \n        horizontalTicks.push(\n          <rect\n            key={`h-mm-final-${mm}`}\n            x={xx - 0.5}\n            y={0}\n            width={1}\n            height={mmLen}\n            fill=\"#000\"\n            opacity=\"0.75\"\n          />\n        )\n      }\n      \n      // Add final marking at exact size value\n      horizontalTicks.push(\n        <rect\n          key={`h-cm-final`}\n          x={finalX - 0.75}\n          y={0}\n          width={1.5}\n          height={12}\n          fill=\"#000\"\n        />\n      )\n    }\n\n    // Vertical ruler (left edge) - 0 to maxVerticalCm\n    const verticalTicks: React.ReactNode[] = []\n    for (let cm = 0; cm <= maxVerticalCm; cm++) {\n      const y = cm * pxPerCm\n      const isFive = cm % 5 === 0\n      const majorLen = isFive ? 18 : 12 // Length of tick mark\n      \n      // Main centimeter tick mark (extends LEFT from the edge)\n      verticalTicks.push(\n        <rect\n          key={`v-cm-${cm}`}\n          x={-majorLen}\n          y={y - 0.75}\n          width={majorLen}\n          height={1.5}\n          fill=\"#000\"\n        />\n      )\n      \n      // No number labels on the vertical ruler (left side)\n      \n      // Millimeter marks (9 small ticks between each centimeter)\n      if (cm < maxVerticalCm) {\n        for (let mm = 1; mm < 10; mm++) {\n          const yy = y + (pxPerCm * mm) / 10\n          const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n          \n          verticalTicks.push(\n            <rect\n              key={`v-mm-${cm}-${mm}`}\n              x={-mmLen}\n              y={yy - 0.5}\n              width={mmLen}\n              height={1}\n              fill=\"#000\"\n              opacity=\"0.75\"\n            />\n          )\n        }\n      }\n    }\n\n    // Add millimeter marks between last whole centimeter and final height value\n    const actualHeight = type === '45-45-90' ? size : size * Math.sqrt(3) / 2\n    if (actualHeight % 1 !== 0) {\n      const lastWholeCm = Math.floor(actualHeight)\n      const finalY = actualHeight * pxPerCm\n      \n      // Add millimeter marks from last whole cm to final height\n      for (let mm = 1; mm <= Math.floor((actualHeight - lastWholeCm) * 10); mm++) {\n        const yy = (lastWholeCm + mm / 10) * pxPerCm\n        const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n        \n        verticalTicks.push(\n          <rect\n            key={`v-mm-final-${mm}`}\n            x={-mmLen}\n            y={yy - 0.5}\n            width={mmLen}\n            height={1}\n            fill=\"#000\"\n            opacity=\"0.75\"\n          />\n        )\n      }\n      \n      // Add final marking at exact height value\n      verticalTicks.push(\n        <rect\n          key={`v-cm-final`}\n          x={-12}\n          y={finalY - 0.75}\n          width={12}\n          height={1.5}\n          fill=\"#000\"\n        />\n      )\n    }\n\n    return (\n      <g>\n        {/* Origin label with \"0\" */}\n        <text x={4} y={-8} fontSize=\"11\" fontFamily=\"Arial, sans-serif\" fontWeight=\"bold\" fill=\"#000\">0</text>\n        \n        {/* Bottom edge ruler (horizontal) */}\n        <g transform={`translate(${points[0]?.x || 0},${points[0]?.y || 0})`}>\n          {horizontalTicks}\n        </g>\n        \n        {/* Left edge ruler (vertical) */}\n        <g transform={`translate(${points[0]?.x || 0},${points[0]?.y || 0})`}>\n          {verticalTicks}\n        </g>\n      </g>\n    )\n  }\n\n  const points = getTrianglePoints()\n  const pathData = `M ${points[0]?.x || 0} ${points[0]?.y || 0} L ${points[1]?.x || 0} ${points[1]?.y || 0} L ${points[2]?.x || 0} ${points[2]?.y || 0} Z`\n\n  // Calculate triangle dimensions for dynamic handle positioning\n  const basePx = size * pxPerUnit\n  const heightPx = type === '45-45-90' ? basePx : basePx * Math.sqrt(3) / 2\n  \n  // Calculate hypotenuse midpoint (relative to SVG origin at 50, 50)\n  const hypMidX = basePx / 2\n  const hypMidY = heightPx / 2\n\n  // Derived geometry for inner triangular cutouts (proportional to size)\n  const baseLength = size * pxPerUnit\n  const verticalLength = type === '45-45-90' ? baseLength : (baseLength * Math.sqrt(3)) / 2\n  // Diagonal unit direction (ux, uy) from right-angle vertex and its origin point\n  const origin = { x: points[0]?.x || 0, y: points[0]?.y || 0 }\n  const mDiag = verticalLength / baseLength\n  const len = Math.sqrt(1 + mDiag * mDiag)\n  const ux = 1 / len\n  const uy = mDiag / len\n  // Reflect a point across the diagonal line through origin with unit direction (ux, uy)\n  const reflectAcrossDiagonal = (px: number, py: number) => {\n    const rx = px - origin.x\n    const ry = py - origin.y\n    const dot = rx * ux + ry * uy\n    const rpx = 2 * dot * ux - rx\n    const rpy = 2 * dot * uy - ry\n    return { x: origin.x + rpx, y: origin.y + rpy }\n  }\n  \n  // Construct cutouts similar to the two half-triangles split by the diagonal\n  // Unit normal to diagonal\n  const nx = -uy\n  const ny = ux\n  // Hypotenuse unit direction (from top-left to bottom-right corner)\n  const hypX = baseLength\n  const hypY = -verticalLength\n  const hypLen = Math.hypot(hypX, hypY) || 1\n  const hx = hypX / hypLen\n  const hy = hypY / hypLen\n  // Length of diagonal segment OM (origin to hypotenuse midpoint)\n  const OMlen = 0.5 * Math.hypot(baseLength, verticalLength)\n  // Choose base length along diagonal as a fraction of OM\n  const L = OMlen * 0.7\n  // Position along diagonal from origin and small gap offset\n  const tAlong = OMlen * 0.55\n  const gap = Math.max(-11, -baseLength * 0.12) // increased perpendicular offset from diagonal; no rotation or along-diagonal change\n\n  // First cutout (similar to triangle O-P1-M): base parallel to diagonal, other sides // x-axis and // hypotenuse\n  const c1x = origin.x + ux * tAlong + nx * gap\n  const c1y = origin.y + uy * tAlong + ny * gap\n  const a1 = { x: c1x - (L / 2) * ux, y: c1y - (L / 2) * uy }\n  const b1 = { x: c1x + (L / 2) * ux, y: c1y + (L / 2) * uy }\n  // Apex c1 is intersection of: line through a1 parallel to x-axis and line through b1 parallel to hypotenuse\n  const s1 = (a1.y - b1.y) / (hy || 1e-6)\n  const c1 = { x: b1.x + s1 * hx, y: b1.y + s1 * hy }\n  const cut1 = `M ${a1.x} ${a1.y} L ${b1.x} ${b1.y} L ${c1.x} ${c1.y} Z`\n\n  // Second cutout is mirror image of the first across the diagonal (perfect symmetry)\n  const a2r = reflectAcrossDiagonal(a1.x, a1.y)\n  const b2r = reflectAcrossDiagonal(b1.x, b1.y)\n  const c2r = reflectAcrossDiagonal(c1.x, c1.y)\n  const cut2 = `M ${a2r.x} ${a2r.y} L ${b2r.x} ${b2r.y} L ${c2r.x} ${c2r.y} Z`\n\n  // Diagonal from right-angle vertex to the midpoint of the hypotenuse\n  const hypMid = {\n    x: ((points[1]?.x || 0) + (points[2]?.x || 0)) / 2,\n    y: ((points[1]?.y || 0) + (points[2]?.y || 0)) / 2\n  }\n\n  return (\n    <div\n      ref={triangleRef}\n      className={`absolute select-none group ${isActive ? 'z-50' : 'z-40'}`}\n      style={{\n        // (x,y) is the right-angle vertex in BOARD coords.\n        // Place the wrapper so that this vertex lands at the wrapper's transform origin.\n        left: screenPos.x - PIVOT_OFFSET.x,\n        top: screenPos.y - PIVOT_OFFSET.y,\n        // rotate around the right-angle vertex\n        transform: `rotate(${rotation}deg)`,\n        transformOrigin: `${-PIVOT_OFFSET.x}px ${-PIVOT_OFFSET.y}px`,\n        // Debug: add background to see hover area\n        backgroundColor: isHovering ? 'rgba(255, 0, 0, 0.1)' : 'transparent'\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleTouchStart}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      {/* Triangle SVG */}\n      <div className=\"relative\" style={{ pointerEvents: 'auto' }}>\n        <svg\n          width={size * pxPerUnit + 100}\n          height={type === '45-45-90' ? size * pxPerUnit + 100 : size * pxPerUnit * Math.sqrt(3) / 2 + 100}\n          className=\"absolute\"\n          style={{ left: -50, top: -50, pointerEvents: 'auto' }}\n        >\n          <defs>\n            {/* Main plastic gradient with enhanced depth and contrast */}\n            <linearGradient id={`plasticGradient-${type}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.6)\" />\n              <stop offset=\"15%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.2)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(240,245,250,0.1)\" />\n              <stop offset=\"70%\" stopColor=\"rgba(200,210,220,0.15)\" />\n              <stop offset=\"85%\" stopColor=\"rgba(150,160,170,0.2)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(100,110,120,0.25)\" />\n            </linearGradient>\n\n            {/* Secondary highlight gradient for more realistic plastic look */}\n            <linearGradient id={`highlightGradient-${type}`} x1=\"0%\" y1=\"0%\" x2=\"60%\" y2=\"40%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.8)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"60%\" stopColor=\"rgba(255,255,255,0.1)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(255,255,255,0)\" />\n            </linearGradient>\n\n            {/* Shadow gradient for depth */}\n            <linearGradient id={`shadowGradient-${type}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(0,0,0,0)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(0,0,0,0.05)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(0,0,0,0.15)\" />\n            </linearGradient>\n\n            {/* Enhanced drop shadow with more depth and realism */}\n            <filter id={`softShadow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feDropShadow dx=\"0\" dy=\"8\" stdDeviation=\"16\" floodColor=\"#000\" floodOpacity=\"0.3\" />\n              <feDropShadow dx=\"0\" dy=\"4\" stdDeviation=\"8\" floodColor=\"#000\" floodOpacity=\"0.2\" />\n              <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"4\" floodColor=\"#000\" floodOpacity=\"0.1\" />\n            </filter>\n\n            {/* Enhanced inner shadow for cutout edges with more depth */}\n            <filter id={`innerShadow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feFlood floodColor=\"#000\" floodOpacity=\"0.2\" result=\"flood\"/>\n              <feComposite in=\"flood\" in2=\"SourceGraphic\" operator=\"in\" result=\"composite\"/>\n              <feGaussianBlur in=\"composite\" stdDeviation=\"3\" result=\"blur\"/>\n              <feOffset in=\"blur\" dx=\"2\" dy=\"2\" result=\"offset\"/>\n              <feComposite in=\"offset\" in2=\"SourceGraphic\" operator=\"over\"/>\n            </filter>\n\n            {/* Additional depth shadow for inner cutouts */}\n            <filter id={`deepInnerShadow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feFlood floodColor=\"#000\" floodOpacity=\"0.15\" result=\"flood\"/>\n              <feComposite in=\"flood\" in2=\"SourceGraphic\" operator=\"in\" result=\"composite\"/>\n              <feGaussianBlur in=\"composite\" stdDeviation=\"5\" result=\"blur\"/>\n              <feOffset in=\"blur\" dx=\"3\" dy=\"3\" result=\"offset\"/>\n              <feComposite in=\"offset\" in2=\"SourceGraphic\" operator=\"over\"/>\n            </filter>\n            \n            {/* Glow effect for active state */}\n            <filter id={`glow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/>\n              </feMerge>\n            </filter>\n\n            {/* Create mask for main triangle with inner cutouts as holes */}\n            <mask id={`triangle-mask-${type}`}>\n              {/* Reveal main triangle */}\n              <path d={pathData} fill=\"white\" />\n              {/* Hide inner similar triangles to make them transparent */}\n              <path d={cut1} fill=\"black\" />\n              <path d={cut2} fill=\"black\" />\n            </mask>\n          </defs>\n          \n          {/* Triangle plastic look: base fill, shine gradient overlay, and stroke */}\n          <g filter={isActive ? `url(#glow-${type})` : `url(#softShadow-${type})`}>\n            {/* Base fill with enhanced opacity for better depth */}\n            <path d={pathData} fill=\"rgba(240,245,250,0.25)\" mask={`url(#triangle-mask-${type})`} />\n            {/* Shadow gradient for depth */}\n            <path d={pathData} fill={`url(#shadowGradient-${type})`} mask={`url(#triangle-mask-${type})`} />\n            {/* Main plastic gradient overlay */}\n            <path d={pathData} fill={`url(#plasticGradient-${type})`} mask={`url(#triangle-mask-${type})`} />\n            {/* Highlight gradient for realistic plastic shine */}\n            <path d={pathData} fill={`url(#highlightGradient-${type})`} mask={`url(#triangle-mask-${type})`} />\n            {/* Enhanced outline with subtle inner shadow */}\n            <path d={pathData} fill=\"none\" stroke=\"#000000\" strokeWidth=\"2.5\"/>\n          </g>\n\n          {/* Internal diagonal (median to hypotenuse) */}\n          <line\n            x1={origin.x}\n            y1={origin.y}\n            x2={hypMid.x}\n            y2={hypMid.y}\n            stroke=\"#000000\"\n            strokeWidth=\"1.2\"\n            strokeDasharray=\"4 3\"\n          />\n          \n          {/* Right angle indicator with 90° label - properly aligned */}\n          <path\n            d={`M ${(points[0]?.x || 0) + 6} ${points[0]?.y || 0} L ${(points[0]?.x || 0) + 6} ${(points[0]?.y || 0) + 6} L ${points[0]?.x || 0} ${(points[0]?.y || 0) + 6}`}\n            fill=\"none\"\n            stroke=\"#000000\"\n            strokeWidth=\"1.2\"\n            strokeLinecap=\"round\"\n          />\n          \n          {/* 90° text label - properly positioned */}\n          <text\n            x={(points[0]?.x || 0) + 10}\n            y={(points[0]?.y || 0) + 3}\n            fontSize=\"8\"\n            fill=\"#000000\"\n            fontFamily=\"Arial, sans-serif\"\n            fontWeight=\"bold\"\n          >\n            90°\n          </text>\n\n          {/* Inner similar triangles as transparent holes: stroke only with enhanced inner shadows */}\n          <path d={cut1} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#deepInnerShadow-${type})`} />\n          <path d={cut2} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#deepInnerShadow-${type})`} />\n          {/* Additional inner shadow layer for more depth */}\n          <path d={cut1} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#innerShadow-${type})`} />\n          <path d={cut2} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#innerShadow-${type})`} />\n          {/* SVG ruler markings glued to the right-angle corner */}\n          {renderRulerMarkingsSvg()}\n        </svg>\n        \n        {/* Ruler numbers - positioned as HTML elements like in the ruler component */}\n        {(() => {\n          const screenSize = size * pxPerUnit\n          const pxPerCm = pxPerUnit\n          const maxCm = Math.min(16, Math.floor(size)) // Use floor to stop at or before actual size\n          const numbers = []\n          \n          for (let cm = 1; cm <= maxCm; cm++) {\n            const x = cm * pxPerCm\n            const isFive = cm % 5 === 0\n            \n            numbers.push(\n              <div\n                key={`h-number-${cm}`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: x - 50, // Account for SVG container offset\n                  top: -65, // Position well above the triangle\n                  transform: 'translateX(-50%)',\n                  fontWeight: isFive ? 'bold' : 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {cm}\n              </div>\n            )\n          }\n\n          // Add final number at exact size value (only if not a whole number)\n          if (size % 1 !== 0) {\n            const finalX = size * pxPerCm\n            numbers.push(\n              <div\n                key={`h-number-final`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: finalX - 50, // Account for SVG container offset\n                  top: -65, // Position well above the triangle\n                  transform: 'translateX(-50%)',\n                  fontWeight: 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {size.toFixed(1)}\n              </div>\n            )\n          }\n          \n          return numbers\n        })()}\n        \n        {/* Rotation handle - positioned relative to hypotenuse midpoint */}\n        <div\n          className=\"rotation-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-emerald-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Temporarily only show on hover\n            left: `${1.35 * hypMidX - 50 - basePx * 0.2}px`,\n            top: `${1.35 * hypMidY - 50 - heightPx * 0.2}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 20\n          }}\n          title=\"Otočit trojúhelník\"\n        >\n          <div className=\"w-2 h-2 bg-emerald-500 rounded-full\" />\n        </div>\n        \n        {/* Resize handle - positioned relative to hypotenuse midpoint */}\n        <div\n          className=\"resize-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-amber-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Temporarily only show on hover\n            left: `${0.6 * hypMidX - 50 + basePx * 0.2}px`,\n            top: `${0.6 * hypMidY - 50 + heightPx * 0.2}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 15\n          }}\n          title=\"Změnit velikost\"\n        >\n          <div className=\"w-2 h-2 bg-amber-500 rounded-full\" />\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2575, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/DraggableProtractor.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useRef, useEffect, useCallback } from 'react'\nimport { useBoardScale } from '../hooks/useBoardScale'\n\ninterface DraggableProtractorProps {\n  x: number\n  y: number\n  rotation: number\n  size: number\n  onPositionChange: (x: number, y: number, rotation: number, size: number) => void\n  isActive: boolean\n  onActivate: () => void\n  onUiBusyChange: (busy: boolean) => void\n}\n\nexport default function DraggableProtractor({\n  x,\n  y,\n  rotation,\n  size,\n  onPositionChange,\n  isActive,\n  onActivate,\n  onUiBusyChange\n}: DraggableProtractorProps) {\n  const [isDragging, setIsDragging] = useState(false)\n  const [isRotating, setIsRotating] = useState(false)\n  const [isResizing, setIsResizing] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 })\n  const [rotationStart, setRotationStart] = useState({ x: 0, y: 0, rotation: 0 })\n  const [resizeStart, setResizeStart] = useState({ x: 0, y: 0, size: 0 })\n  const protractorRef = useRef<HTMLDivElement>(null)\n  const getScale = useBoardScale(protractorRef)\n  const { pxPerUnitX, pxPerUnitY } = getScale()\n  const pxPerUnit = Math.min(pxPerUnitX, pxPerUnitY)\n\n  // Get bounding box info from scale hook\n  const scaleInfo = getScale()\n  const { boardLeft, boardTop, boardRight, boardBottom, boardWidth, boardHeight } = scaleInfo\n\n  // Convert board coordinates to screen coordinates\n  const boardToScreen = (boardX: number, boardY: number) => {\n    // Get actual container dimensions\n    const container = protractorRef.current?.closest('.jxgbox') as HTMLElement\n    const containerWidth = container?.offsetWidth || 800\n    const containerHeight = container?.offsetHeight || 500\n    \n    const screenX = ((boardX - boardLeft) / boardWidth) * containerWidth\n    const screenY = containerHeight - ((boardY - boardBottom) / boardHeight) * containerHeight\n    \n    return { x: screenX, y: screenY }\n  }\n\n  const screenToBoard = (screenX: number, screenY: number) => {\n    const container = protractorRef.current?.closest('.jxgbox') as HTMLElement\n    const containerWidth = container?.offsetWidth || 800\n    const containerHeight = container?.offsetHeight || 500\n    \n    const boardX = (screenX / containerWidth) * boardWidth + boardLeft\n    const boardY = boardTop - (screenY / containerHeight) * boardHeight\n    \n    return { x: boardX, y: boardY }\n  }\n\n  const screenPos = boardToScreen(x, y)\n\n  // Smooth movement without grid snapping\n  const smoothPosition = (boardX: number, boardY: number) => {\n    return { x: boardX, y: boardY }\n  }\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle')) {\n      setIsRotating(true)\n      setRotationStart({ x: e.clientX, y: e.clientY, rotation })\n    } else if (target.classList.contains('resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: e.clientX, y: e.clientY, size })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    }\n  }\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const touch = e.touches[0]\n    if (!touch) return\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle')) {\n      setIsRotating(true)\n      setRotationStart({ x: touch.clientX, y: touch.clientY, rotation })\n    } else if (target.classList.contains('resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: touch.clientX, y: touch.clientY, size })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    }\n  }\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDragging) {\n      const newScreenX = e.clientX - dragStart.x\n      const newScreenY = e.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const deltaX = e.clientX - centerX\n      const deltaY = e.clientY - centerY\n      const aRaw = Math.atan2(deltaY, deltaX) * 180 / Math.PI\n      const a360 = (aRaw + 360) % 360\n      const snapped = Math.round(a360 / 5) * 5\n      onPositionChange(x, y, snapped, size)\n    } else if (isResizing) {\n      const deltaX = e.clientX - resizeStart.x\n      const deltaY = e.clientY - resizeStart.y\n      \n      // Project the delta vector onto the protractor's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const protractorAxisX = Math.cos(rotationRad)\n      const protractorAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the protractor axis\n      const projection = deltaX * protractorAxisX + deltaY * protractorAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const newSize = Math.max(2, Math.min(6, resizeStart.size + deltaSize))\n      onPositionChange(x, y, rotation, newSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, screenPos, x, y, rotation, size, onPositionChange])\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    const touch = e.touches[0]\n    if (!touch) return\n    \n    if (isDragging) {\n      const newScreenX = touch.clientX - dragStart.x\n      const newScreenY = touch.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const deltaX = touch.clientX - centerX\n      const deltaY = touch.clientY - centerY\n      const aRaw = Math.atan2(deltaY, deltaX) * 180 / Math.PI\n      const a360 = (aRaw + 360) % 360\n      const snapped = Math.round(a360 / 5) * 5\n      onPositionChange(x, y, snapped, size)\n    } else if (isResizing) {\n      const deltaX = touch.clientX - resizeStart.x\n      const deltaY = touch.clientY - resizeStart.y\n      \n      // Project the delta vector onto the protractor's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const protractorAxisX = Math.cos(rotationRad)\n      const protractorAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the protractor axis\n      const projection = deltaX * protractorAxisX + deltaY * protractorAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const newSize = Math.max(2, Math.min(6, resizeStart.size + deltaSize))\n      onPositionChange(x, y, rotation, newSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, screenPos, x, y, rotation, size, onPositionChange])\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  useEffect(() => {\n    if (isDragging || isRotating || isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      document.addEventListener('touchmove', handleTouchMove, { passive: false })\n      document.addEventListener('touchend', handleTouchEnd)\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.removeEventListener('touchmove', handleTouchMove, { passive: false } as any)\n        document.removeEventListener('touchend', handleTouchEnd)\n      }\n    }\n  }, [isDragging, isRotating, isResizing, handleMouseMove, handleTouchMove, handleMouseUp, handleTouchEnd])\n\n  // ResizeObserver to handle container size changes\n  useEffect(() => {\n    const el = protractorRef.current?.closest('.jxgbox')\n    if (!el) return\n    \n    const ro = new ResizeObserver(() => {\n      // Force a light refresh by updating dragStart state\n      setDragStart(s => ({ ...s }))\n    })\n    ro.observe(el)\n    return () => ro.disconnect()\n  }, [])\n\n  // Calculate protractor dimensions\n  const radiusPx = size * pxPerUnit\n  const centerX = size * pxPerUnit * 1.2  // Adjusted for new SVG dimensions\n  const centerY = size * pxPerUnit * 1.1  // Adjusted for new SVG dimensions\n  \n  // Helper variables for improved design\n  const R = radiusPx                               // outer radius (tick tips)\n  const ring = Math.max(8, R * 0.075)              // thickness of the dark tick band\n  const innerR = R - ring                          // inner edge of the tick band (rim sits here)\n  const uid = React.useMemo(() => Math.random().toString(36).slice(2), [])\n  const arc = (rad:number) =>\n    `M ${centerX - rad} ${centerY} A ${rad} ${rad} 0 0 1 ${centerX + rad} ${centerY}`\n  \n  // Returns a closed path for the grey ring band between radii R and r (r < R), 0..180°\n  const ringBandPath = (R: number, r: number) => {\n    // Outer arc: from left outer point to right outer point (sweep=1)\n    // Then line down to the right inner point\n    // Inner arc back to the left inner point (sweep=0), and close.\n    return `\n      M ${centerX - R} ${centerY}\n      A ${R} ${R} 0 0 1 ${centerX + R} ${centerY}\n      L ${centerX + r} ${centerY}\n      A ${r} ${r} 0 0 0 ${centerX - r} ${centerY}\n      Z\n    `;\n  };\n\n  // Generate protractor markings\n  const generateMarkings = () => {\n    const markings = []\n    \n    // Generate degree markings (0-180 degrees)\n    for (let angle = 0; angle <= 180; angle += 1) {\n      const rad = (angle * Math.PI) / 180\n      \n      const isMajor = angle % 10 === 0\n      const isMedium = angle % 5 === 0 && !isMajor\n      const isMinor = angle % 1 === 0 && !isMajor && !isMedium\n      \n      // Different tick lengths for different types\n      let tickLength = 0\n      let strokeWidth = 0.5\n      \n      if (isMajor) {\n        tickLength = R - innerR  // Full length from inner to outer\n        strokeWidth = 2.5\n      } else if (isMedium) {\n        tickLength = (R - innerR) * 0.7  // 70% of full length\n        strokeWidth = 1.5\n      } else if (isMinor) {\n        tickLength = (R - innerR) * 0.4  // 40% of full length\n        strokeWidth = 0.8\n      }\n      \n      const x1 = centerX + Math.cos(rad) * (R - tickLength)\n      const y1 = centerY - Math.sin(rad) * (R - tickLength)\n      const x2 = centerX + Math.cos(rad) * R\n      const y2 = centerY - Math.sin(rad) * R\n      \n      markings.push(\n        <line\n          key={`mark-${angle}`}\n          x1={x1}\n          y1={y1}\n          x2={x2}\n          y2={y2}\n          stroke=\"#374151\"\n          strokeWidth={strokeWidth}\n        />\n      )\n      \n      // Add degree labels for every 10 degrees\n      if (isMajor) {\n        const labelDistance = R + 20 // was radiusPx + 20\n        const labelX = centerX + Math.cos(rad) * labelDistance\n        const labelY = centerY - Math.sin(rad) * labelDistance\n        \n        markings.push(\n          <text\n            key={`label-${angle}`}\n            x={labelX}\n            y={labelY}\n            fontSize=\"11\"\n            fill=\"#1f2937\"\n            fontFamily=\"Arial, sans-serif\"\n            fontWeight=\"bold\"\n            textAnchor=\"middle\"\n            dominantBaseline=\"middle\"\n          >\n            {angle}°\n          </text>\n        )\n      }\n    }\n    \n    return markings\n  }\n\n  return (\n    <div\n      ref={protractorRef}\n      className={`absolute select-none group ${isActive ? 'z-50' : 'z-40'}`}\n      style={{\n        left: screenPos.x,\n        top: screenPos.y,\n        transform: `translate(-50%, -50%) rotate(${rotation}deg)`,\n        transformOrigin: '50% 50%'\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleTouchStart}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      {/* Protractor body */}\n      <div className=\"relative\" style={{ pointerEvents: 'auto' }}>\n        <svg\n          width={size * pxPerUnit * 2.6}\n          height={size * pxPerUnit * 2.4}\n          className=\"absolute\"\n          style={{ \n            left: -size * pxPerUnit * 1.3, \n            top: -size * pxPerUnit * 1.2,\n            pointerEvents: 'auto'\n          }}\n          viewBox={`0 0 ${size * pxPerUnit * 2.6} ${size * pxPerUnit * 1.4}`}\n        >\n          <defs>\n            <filter id=\"protractorShadow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\n              <feDropShadow dx=\"1\" dy=\"1\" stdDeviation=\"2\" floodColor=\"#000\" floodOpacity=\"0.15\"/>\n            </filter>\n            <mask id={`innerArcMask-${uid}`}>\n              <rect width=\"100%\" height=\"100%\" fill=\"white\"/>\n              {/* Create a larger black rectangle to completely hide the inner arc between the lines */}\n              <rect \n                x={centerX - innerR * 2} \n                y={centerY - ring - 1} \n                width={innerR * 4} \n                height={ring + 20} \n                fill=\"black\"\n              />\n            </mask>\n          </defs>\n          \n          {/* Grey ring segment (curved band between arcs) */}\n          <path\n            d={ringBandPath(R, innerR)}\n            fill=\"rgba(107,114,128,0.22)\"\n            stroke=\"none\"\n          />\n\n          {/* Grey band between the two straight lines */}\n          <rect\n            x={centerX - innerR}\n            y={centerY - ring}\n            width={innerR * 2}\n            height={ring}\n            fill=\"rgba(107,114,128,0.22)\"\n          />\n\n          {/* outer semicircle outline */}\n          <path d={arc(R)} fill=\"none\" stroke=\"#0f172a\" strokeWidth=\"2.2\" opacity=\"0.95\" filter=\"url(#protractorShadow)\"/>\n\n          {/* baseline */}\n          <line x1={centerX - R} y1={centerY} x2={centerX + R} y2={centerY}\n                stroke=\"#000000\" strokeWidth={isActive ? 1.9 : 1} strokeLinecap=\"round\" />\n          \n          {/* inner horizontal line - positioned to match the arc distance */}\n          <line x1={centerX - innerR} y1={centerY - ring} x2={centerX + innerR} y2={centerY - ring}\n                stroke=\"#000000\" strokeWidth=\"1.4\" strokeLinecap=\"round\" />\n\n          {/* complete inner semicircle with mask to hide area between lines */}\n          <path d={`M ${centerX - innerR} ${centerY} A ${innerR} ${innerR} 0 0 1 ${centerX + innerR} ${centerY} Z`} \n                fill=\"none\" stroke=\"#000000\" strokeWidth=\"1\" mask={`url(#innerArcMask-${uid})`} />\n\n          {/* center dot */}\n          <circle cx={centerX} cy={centerY} r={isActive ? 4 : 3} fill=\"#dc2626\" stroke=\"#fff\" strokeWidth=\"2\" filter=\"url(#protractorShadow)\"/>\n\n          {/* ticks and labels LAST so they stay crisp on top */}\n          {generateMarkings()}\n          \n        </svg>\n        \n        {/* Rotation handle - positioned on the baseline, left of center */}\n        <div\n          className=\"rotation-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-emerald-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like ruler\n            left: `${0.2 * centerX - radiusPx * 0.3}px`,\n            top: `${0.36 * centerY}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 20\n          }}\n          title=\"Otočit úhloměr\"\n        >\n          <div className=\"w-2 h-2 bg-emerald-500 rounded-full\" />\n        </div>\n\n        {/* Resize handle - positioned on the baseline, right of center */}\n        <div\n          className=\"resize-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-amber-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like ruler\n            left: `${-0.37 * centerX + radiusPx * 0.3}px`,\n            top: `${0.36 * centerY}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 15\n          }}\n          title=\"Změnit velikost\"\n        >\n          <div className=\"w-2 h-2 bg-amber-500 rounded-full\" />\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3214, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/undo-redo.ts"],"sourcesContent":["/**\n * Standalone Undo/Redo System for JSXGraph Geometry\n * \n * This module provides a clean, isolated undo/redo system that can be easily\n * integrated into any JSXGraph-based geometry application.\n */\n\nimport JXG from 'jsxgraph'\n\ntype JBoard = JXG.Board & { renderer: any }\n\n// Operation types\nexport type CreateOp = {\n  kind: 'create'\n  elType: 'point' | 'segment' | 'line' | 'circle'\n  payload: any\n  _id?: string\n  pointIds?: string[]\n}\n\nexport type DeleteOp = {\n  kind: 'delete'\n  elType: 'point' | 'segment' | 'line' | 'circle'\n  payload: any\n  _id?: string\n  pointIds?: string[]\n}\n\nexport type ModifyOp = {\n  kind: 'modify'\n  pointId: string\n  before: { x: number; y: number; name: string }\n  after: { x: number; y: number; name: string }\n}\n\nexport type BundleOp = {\n  kind: 'bundle'\n  ops: Operation[]\n}\n\nexport type Operation = CreateOp | DeleteOp | ModifyOp | BundleOp\n\n// Configuration for the undo/redo system\nexport interface UndoRedoConfig {\n  board: JBoard\n  onFeedback?: (message: string) => void\n  EPS?: number\n}\n\nexport class UndoRedoManager {\n  private board: JBoard\n  private undoStack: Operation[] = []\n  private redoStack: Operation[] = []\n  private onFeedback: ((message: string) => void) | undefined\n  private EPS: number\n  private txnDepth = 0\n  private pendingOps: Operation[] = []\n  private suppressTracking = false\n  private suppressShapeTracking = false\n  private moveStarts = new Map<string, { x: number; y: number; name: string }>()\n  private groupDraggedPoints = new Set<string>()\n  private trackingInterval: NodeJS.Timeout | null = null\n  private withinTol(a: number, b: number, tol = this.EPS): boolean { \n    return Math.abs(a - b) <= tol \n  }\n\n  private withSuppressed<T>(fn: () => T): T {\n    const prev = this.suppressTracking\n    this.suppressTracking = true\n    try { return fn() } finally { this.suppressTracking = prev }\n  }\n\n  constructor(config: UndoRedoConfig) {\n    this.board = config.board\n    this.onFeedback = config.onFeedback\n    this.EPS = config.EPS || 0.03\n    this.setupGlobalPointTracking()\n  }\n\n  // Public API\n  public pushOperation(op: Operation): void {\n    const frozen = structuredClone(op)\n    this.withSuppressed(() => this.performOperation(frozen))\n    if (this.txnDepth > 0) {\n      this.pendingOps.push(frozen)\n    } else {\n      this.undoStack.push(frozen)\n      this.redoStack = [] // Clear redo stack on new operation\n    }\n  }\n\n  public begin(): void { \n    this.txnDepth++ \n  }\n\n  public commit(): void {\n    if (this.txnDepth === 0) return\n    this.txnDepth--\n    if (this.txnDepth > 0) return\n    if (this.pendingOps.length === 0) return\n    // compress: push a synthetic op that replays the batch\n    const bundle = structuredClone(this.pendingOps)\n    this.pendingOps = []\n    this.undoStack.push({ kind: 'bundle', ops: bundle } as BundleOp)\n    this.redoStack = []\n  }\n\n  public undo(): void {\n    if (this.undoStack.length === 0) return\n    \n    const op = this.undoStack.pop()!\n    const frozen = structuredClone(op)\n    this.suppressTracking = true\n    try {\n      this.rollbackOperation(frozen)\n    } finally {\n      this.suppressTracking = false\n    }\n    this.redoStack.push(frozen)\n    this.board.update()\n    this.onFeedback?.('')\n  }\n\n  public redo(): void {\n    if (this.redoStack.length === 0) return\n    \n    const op = this.redoStack.pop()!\n    const frozen = structuredClone(op)\n    this.suppressTracking = true\n    try {\n      this.performOperation(frozen)\n    } finally {\n      this.suppressTracking = false\n    }\n    this.undoStack.push(frozen)\n    this.board.update()\n    this.onFeedback?.('')\n  }\n\n  public canUndo(): boolean {\n    return this.undoStack.length > 0\n  }\n\n  public canRedo(): boolean {\n    return this.redoStack.length > 0\n  }\n\n  public clear(): void {\n    this.undoStack = []\n    this.redoStack = []\n  }\n\n  public clearPendingMovesForPoints(pointIds: string[]): void {\n    for (const id of pointIds) {\n      this.moveStarts.delete(id)\n    }\n  }\n\n  public markPointsForGroupDrag(pointIds: string[]): void {\n    for (const id of pointIds) {\n      this.groupDraggedPoints.add(id)\n      // Also clear any pending move starts to be safe\n      this.moveStarts.delete(id)\n    }\n  }\n\n  public unmarkPointsForGroupDrag(pointIds: string[]): void {\n    for (const id of pointIds) {\n      this.groupDraggedPoints.delete(id)\n    }\n  }\n\n  public suppressTrackingDuring<T>(fn: () => T): T {\n    return this.withSuppressed(fn)\n  }\n\n  public setSuppressShapeTracking(on: boolean): void {\n    this.suppressShapeTracking = on\n  }\n\n  public dispose(): void {\n    this.moveStarts.clear()\n    if (this.trackingInterval) {\n      clearInterval(this.trackingInterval)\n      this.trackingInterval = null\n    }\n  }\n\n  private setupGlobalPointTracking(): void {\n    // Attach tracking to all existing points\n    this.attachTrackingToAllPoints()\n    \n    // Set up a periodic check to attach tracking to any new points\n    this.trackingInterval = setInterval(() => {\n      this.attachTrackingToAllPoints()\n    }, 1000) // Check every second\n  }\n\n  private attachTrackingToAllPoints(): void {\n    const objects = Object.values(this.board.objects) as any[]\n    for (const obj of objects) {\n      if (obj?.elType === 'point' && !obj.visProp?.fixed) {\n        this.attachPointTracking(obj)\n      }\n    }\n  }\n\n  private posOf(pt: any): { x: number; y: number; name: string } {\n    return { x: pt.X(), y: pt.Y(), name: (pt as any)._rawName || '' }\n  }\n\n  private definingPointsOf(obj: any): any[] {\n    if (!obj) return []\n    if (obj.elType === 'segment' || obj.elType === 'line') {\n      const a: any = obj.point1 || obj.A || obj.points?.[0]\n      const b: any = obj.point2 || obj.B || obj.points?.[1]\n      return [a, b].filter(Boolean)\n    }\n    if (obj.elType === 'circle') {\n      const c: any = obj.center || obj.points?.[0]\n      const p: any = obj.point2 || obj.points?.[1]\n      return [c, p].filter(Boolean)\n    }\n    return []\n  }\n\n  private attachPointTracking(pt: any): void {\n    // Avoid double-binding\n    if ((pt as any)._undoRedoBound) return\n    ;(pt as any)._undoRedoBound = true\n\n    pt.on('down', () => {\n      if (this.suppressTracking) return\n      this.moveStarts.set(pt.id, this.posOf(pt))\n    })\n\n    pt.on('up', () => {\n      if (this.suppressTracking) return\n      // Skip if this point is being group-dragged (will be handled by group drag handler)\n      if (this.groupDraggedPoints.has(pt.id)) {\n        this.moveStarts.delete(pt.id)\n        return\n      }\n      const start = this.moveStarts.get(pt.id)\n      if (!start) return\n      const end = this.posOf(pt)\n\n      const moved = !this.withinTol(start.x, end.x) || !this.withinTol(start.y, end.y) || start.name !== end.name\n      if (moved) {\n        const op: ModifyOp = { kind: 'modify', pointId: pt.id, before: start, after: end }\n        this.pushOperation(op)\n      }\n      this.moveStarts.delete(pt.id)\n    })\n  }\n\n  private attachShapeTracking(obj: any): void {\n    // For segment/line/circle: record a BUNDLE of point moves\n    let before: Record<string, { x: number; y: number; name: string }> | null = null\n    let pts: any[] = []\n\n    const onDown = () => {\n      if (this.suppressTracking || this.suppressShapeTracking) return\n      pts = this.definingPointsOf(obj)\n      if (pts.length === 0) return\n      before = {}\n      for (const p of pts) before[p.id] = this.posOf(p)\n    }\n\n    const onUp = () => {\n      if (this.suppressTracking || this.suppressShapeTracking) {\n        before = null\n        pts = []\n        return\n      }\n      if (!before || pts.length === 0) return\n      const ops: Operation[] = []\n      for (const p of pts) {\n        const b = before![p.id]\n        if (!b) continue\n        const a = this.posOf(p)\n        if (b.x !== a.x || b.y !== a.y || b.name !== a.name) {\n          ops.push({\n            kind: 'modify',\n            pointId: p.id,\n            before: b,\n            after: a\n          } as ModifyOp)\n        }\n      }\n      if (ops.length === 1 && ops[0]) {\n        this.pushOperation(ops[0])                 // single move\n      } else if (ops.length > 1) {\n        this.pushOperation({ kind: 'bundle', ops }) // move both endpoints / center+radius\n      }\n      before = null\n      pts = []\n    }\n\n    obj.on('down', onDown)\n    obj.on('up', onUp)\n  }\n\n  private findPointNear(xy: { x: number; y: number }, tol = this.EPS): any {\n    const objs = Object.values(this.board.objects) as any[]\n    for (const o of objs) {\n      if (o?.elType === 'point') {\n        const p = { x: o.X(), y: o.Y() }\n        if (Math.hypot(p.x - xy.x, p.y - xy.y) <= tol) return o\n      }\n    }\n    return null\n  }\n\n  private isJXGPoint(p: any): boolean {\n    return !!(\n      p &&\n      p.elType === 'point' &&\n      typeof p.X === 'function' &&\n      typeof p.Y === 'function' &&\n      p.board === this.board\n    )\n  }\n\n  private getPointByIdOrNear(prefId: string | undefined, xy: { x: number; y: number }, tol = this.EPS): any {\n    if (prefId) {\n      const byId = (this.board.objects as any)[prefId]\n      if (byId?.elType === 'point') return byId\n    }\n    // exact coordinate match first\n    for (const o of Object.values(this.board.objects) as any[]) {\n      if (o?.elType === 'point' && o.X() === xy.x && o.Y() === xy.y) return o\n    }\n    // then proximity\n    const nearPoint = this.findPointNear(xy, tol)\n    if (nearPoint) return nearPoint\n    \n    // If no point found, return null (will be handled by fallback in calling code)\n    return null\n  }\n\n  private ensurePoint(\n    xy: { x: number; y: number },\n    attr: any = { name: '', size: 2, strokeColor: '#444', fillColor: '#666' }\n  ): any | null {\n    const existing = this.findPointNear(xy)\n    if (existing) {\n      this.attachPointTracking(existing)\n      return existing\n    }\n\n    try {\n      const pt = this.board.create('point', [xy.x, xy.y], attr)\n      if (!this.isJXGPoint(pt)) throw new Error('Invalid point')\n      ;(pt as any)._rawName = attr?.name ?? ''\n      if (attr?.fixed !== undefined) pt.setAttribute({ fixed: attr.fixed })\n      if (attr?.withLabel !== undefined) pt.setAttribute({ withLabel: attr.withLabel })\n      \n      // Attach move tracking to the new point\n      this.attachPointTracking(pt)\n      \n      return pt\n    } catch (error) {\n      console.error('Failed to create point:', error)\n      return null\n    }\n  }\n\n  private performOperation(op: Operation): void {\n    if (op.kind === 'create') {\n      this.performCreate(op)\n    } else if (op.kind === 'delete') {\n      this.performDelete(op)\n    } else if (op.kind === 'modify') {\n      this.performModify(op)\n    } else if (op.kind === 'bundle') {\n      this.performBundle(op)\n    }\n  }\n\n  private rollbackOperation(op: Operation): void {\n    if (op.kind === 'create') {\n      this.rollbackCreate(op)\n    } else if (op.kind === 'delete') {\n      this.rollbackDelete(op)\n    } else if (op.kind === 'modify') {\n      this.rollbackModify(op)\n    } else if (op.kind === 'bundle') {\n      this.rollbackBundle(op)\n    }\n  }\n\n  private performCreate(op: CreateOp): void {\n    if (op.elType === 'point') {\n      const { x, y, attr } = op.payload\n      const pt = this.ensurePoint({ x, y }, attr)\n      if (!pt) return\n      op._id = pt.id\n      // Force board update to ensure point is created immediately\n      this.board.update()\n      return\n    }\n\n    if (op.elType === 'segment' || op.elType === 'line') {\n      const { p1, p2, attr } = op.payload\n      const a = this.getPointByIdOrNear(op.pointIds?.[0], p1) || this.ensurePoint(p1, attr)\n      const b = this.getPointByIdOrNear(op.pointIds?.[1], p2) || this.ensurePoint(p2, attr)\n\n      // If either isn't a real JSXGraph point, fall back to coordinate parents\n      const useCoords = !(this.isJXGPoint(a) && this.isJXGPoint(b))\n      const parents = useCoords ? [[p1.x, p1.y], [p2.x, p2.y]] : [a, b]\n\n      try {\n        const el = this.board.create(op.elType, parents as any, attr)\n        op._id = (el as any).id\n        // capture actual point ids (works for both segment & line)\n        const pA: any = (el as any).point1 || (el as any).A || (el as any).points?.[0]\n        const pB: any = (el as any).point2 || (el as any).B || (el as any).points?.[1]\n        if (this.isJXGPoint(pA) && this.isJXGPoint(pB)) {\n          op.pointIds = [pA.id, pB.id]\n          // Attach tracking to the endpoint points if they don't have it yet\n          this.attachPointTracking(pA)\n          this.attachPointTracking(pB)\n        }\n        // Attach shape tracking to the element itself\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error(`Failed to create ${op.elType}:`, e, { parents })\n      }\n      return\n    }\n\n    if (op.elType === 'circle') {\n      const { center, on, attr } = op.payload\n      const c = this.getPointByIdOrNear(op.pointIds?.[0], center) || this.ensurePoint(center, attr)\n      const p = this.getPointByIdOrNear(op.pointIds?.[1], on) || this.ensurePoint(on, attr)\n\n      const useCoords = !(this.isJXGPoint(c) && this.isJXGPoint(p))\n      const parents = useCoords ? [[center.x, center.y], [on.x, on.y]] : [c, p]\n\n      try {\n        const el = this.board.create('circle', parents as any, attr)\n        op._id = (el as any).id\n        const pc: any = (el as any).center || (el as any).points?.[0]\n        const pp: any = (el as any).point2 || (el as any).points?.[1]\n        if (this.isJXGPoint(pc) && this.isJXGPoint(pp)) {\n          op.pointIds = [pc.id, pp.id]\n          // Attach tracking to the center and on-point if they don't have it yet\n          this.attachPointTracking(pc)\n          this.attachPointTracking(pp)\n        }\n        // Attach shape tracking to the circle element itself\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error('Failed to create circle:', e, { parents })\n      }\n      return\n    }\n  }\n\n  private rollbackCreate(op: CreateOp): void {\n    if (!op._id) return\n    \n    const obj = (this.board.objects as any)[op._id]\n    if (obj) {\n      try {\n        this.board.removeObject(obj as JXG.GeometryElement)\n      } catch (error) {\n        console.error('Failed to remove object:', error, op._id)\n      }\n    } else {\n      // Try to find and remove by matching definition as fallback\n      this.removeByMatchingDefinition({\n        kind: 'delete',\n        elType: op.elType,\n        payload: op.payload,\n        _id: op._id,\n        pointIds: op.pointIds || []\n      })\n    }\n    \n    // Remove associated points if they're not used elsewhere\n    if (op.pointIds && (op.elType === 'segment' || op.elType === 'line' || op.elType === 'circle')) {\n      op.pointIds.forEach((pointId: string) => {\n        const pointObj = (this.board.objects as any)[pointId]\n        if (pointObj && !this.isPointUsedElsewhere(pointId, pointObj)) {\n          try {\n            this.board.removeObject(pointObj as JXG.GeometryElement)\n          } catch (error) {\n            console.error('Failed to remove point:', error, pointId)\n          }\n        }\n      })\n    }\n  }\n\n  private performDelete(op: DeleteOp): void {\n    if (op._id) {\n      const target = (this.board.objects as any)[op._id]\n      if (target) {\n        this.board.removeObject(target as JXG.GeometryElement)\n        // Force board update to ensure object is removed immediately\n        this.board.update()\n      }\n    } else {\n      // If _id is missing, try to find and remove by matching defining points and attributes\n      this.removeByMatchingDefinition(op)\n      // Force board update after removing by matching\n      this.board.update()\n    }\n    \n    // Remove associated points if they're not used elsewhere\n    if (op.pointIds && (op.elType === 'segment' || op.elType === 'line' || op.elType === 'circle')) {\n      op.pointIds.forEach((pointId: string) => {\n        const pointObj = (this.board.objects as any)[pointId]\n        if (pointObj && !this.isPointUsedElsewhere(pointId, pointObj)) {\n          this.board.removeObject(pointObj as JXG.GeometryElement)\n        }\n      })\n      // Force board update after removing points\n      this.board.update()\n    }\n  }\n\n  private removeByMatchingDefinition(op: DeleteOp): void {\n    const objects = Object.values(this.board.objects) as any[]\n    \n    for (const obj of objects) {\n      if (obj.elType !== op.elType) continue\n      \n      let matches = false\n      \n      if (op.elType === 'point') {\n        const { x, y } = op.payload\n        matches = Math.abs(obj.X() - x) < this.EPS && Math.abs(obj.Y() - y) < this.EPS\n      } else if (op.elType === 'segment' || op.elType === 'line') {\n        const { p1, p2 } = op.payload\n        const a = obj.point1 || obj.A || obj.points?.[0]\n        const b = obj.point2 || obj.B || obj.points?.[1]\n        if (a && b) {\n          matches = Math.abs(a.X() - p1.x) < this.EPS && Math.abs(a.Y() - p1.y) < this.EPS &&\n                   Math.abs(b.X() - p2.x) < this.EPS && Math.abs(b.Y() - p2.y) < this.EPS\n        }\n      } else if (op.elType === 'circle') {\n        const { center, on } = op.payload\n        const c = obj.center || obj.midpoint || obj.points?.[0]\n        const p = obj.point2 || obj.points?.[1]\n        if (c) {\n          const centerMatches = Math.abs(c.X() - center.x) < this.EPS && Math.abs(c.Y() - center.y) < this.EPS\n          if (p) {\n            matches = centerMatches && Math.abs(p.X() - on.x) < this.EPS && Math.abs(p.Y() - on.y) < this.EPS\n          } else {\n            // For circles defined by center and radius\n            const R = (typeof obj.R === 'function' ? obj.R() : obj.radius) ?? 1\n            const expectedRadius = Math.hypot(on.x - center.x, on.y - center.y)\n            matches = centerMatches && Math.abs(R - expectedRadius) < this.EPS\n          }\n        }\n      }\n      \n      if (matches) {\n        this.board.removeObject(obj as JXG.GeometryElement)\n        break\n      }\n    }\n  }\n\n  private rollbackDelete(op: DeleteOp): void {\n    if (op.elType === 'point') {\n      const { x, y, attr } = op.payload\n      const pt = this.ensurePoint({ x, y }, attr)\n      if (!pt) return\n      op._id = pt.id\n      // Force board update to ensure point is created immediately\n      this.board.update()\n      return\n    }\n\n    if (op.elType === 'segment' || op.elType === 'line') {\n      const { p1, p2, attr } = op.payload\n      const a = this.getPointByIdOrNear(op.pointIds?.[0], p1) || this.ensurePoint(p1, attr)\n      const b = this.getPointByIdOrNear(op.pointIds?.[1], p2) || this.ensurePoint(p2, attr)\n      \n      const useCoords = !(this.isJXGPoint(a) && this.isJXGPoint(b))\n      const parents = useCoords ? [[p1.x, p1.y], [p2.x, p2.y]] : [a, b]\n      \n      try {\n        const el = this.board.create(op.elType, parents as any, attr)\n        op._id = (el as any).id\n        const pA: any = (el as any).point1 || (el as any).A || (el as any).points?.[0]\n        const pB: any = (el as any).point2 || (el as any).B || (el as any).points?.[1]\n        if (this.isJXGPoint(pA) && this.isJXGPoint(pB)) {\n          op.pointIds = [pA.id, pB.id]\n        }\n        // Attach shape tracking to the recreated element\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error(`Failed to recreate ${op.elType}:`, e, { parents })\n      }\n      return\n    }\n\n    if (op.elType === 'circle') {\n      const { center, on, attr } = op.payload\n      const c = this.getPointByIdOrNear(op.pointIds?.[0], center) || this.ensurePoint(center, attr)\n      const p = this.getPointByIdOrNear(op.pointIds?.[1], on) || this.ensurePoint(on, attr)\n\n      const useCoords = !(this.isJXGPoint(c) && this.isJXGPoint(p))\n      const parents = useCoords ? [[center.x, center.y], [on.x, on.y]] : [c, p]\n\n      try {\n        const el = this.board.create('circle', parents as any, attr)\n        op._id = (el as any).id\n        const pc: any = (el as any).center || (el as any).points?.[0]\n        const pp: any = (el as any).point2 || (el as any).points?.[1]\n        if (this.isJXGPoint(pc) && this.isJXGPoint(pp)) {\n          op.pointIds = [pc.id, pp.id]\n        }\n        // Attach shape tracking to the recreated circle element\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error('Failed to recreate circle:', e, { parents })\n      }\n      return\n    }\n  }\n\n  private performModify(op: ModifyOp): void {\n    const pointObj = (this.board.objects as any)[op.pointId]\n    if (pointObj) {\n      // Use moveTo instead of setPosition to avoid draggable function issues\n      try {\n        pointObj.moveTo([op.after.x, op.after.y])\n      } catch (e) {\n        // Fallback to direct coordinate setting\n        pointObj.coords.setCoordinates(JXG.COORDS_BY_USER, [op.after.x, op.after.y])\n        this.board.update()\n      }\n      this.setPointName(pointObj, op.after.name)\n    }\n  }\n\n  private rollbackModify(op: ModifyOp): void {\n    const pointObj = (this.board.objects as any)[op.pointId]\n    if (pointObj) {\n      // Use moveTo instead of setPosition to avoid draggable function issues\n      try {\n        pointObj.moveTo([op.before.x, op.before.y])\n      } catch (e) {\n        // Fallback to direct coordinate setting\n        pointObj.coords.setCoordinates(JXG.COORDS_BY_USER, [op.before.x, op.before.y])\n        this.board.update()\n      }\n      this.setPointName(pointObj, op.before.name)\n    }\n  }\n\n  private performBundle(op: BundleOp): void {\n    // Execute operations in forward order\n    for (const subOp of op.ops) {\n      if (subOp) {\n        try {\n          // Create a fresh copy of the operation to avoid stale IDs\n          const freshOp = structuredClone(subOp)\n          // Keep IDs intact - don't delete them\n          this.performOperation(freshOp)\n          // Write back the realized IDs to the original operation\n          if (freshOp.kind === 'create' || freshOp.kind === 'delete') {\n            const freshOpTyped = freshOp as CreateOp | DeleteOp\n            const subOpTyped = subOp as CreateOp | DeleteOp\n            if (freshOpTyped._id !== undefined) {\n              subOpTyped._id = freshOpTyped._id\n            }\n            if (freshOpTyped.pointIds !== undefined) {\n              subOpTyped.pointIds = freshOpTyped.pointIds\n            }\n          }\n        } catch (error) {\n          console.error('Error executing bundled operation:', error, subOp)\n          // Continue with other operations even if one fails\n        }\n      }\n    }\n    // Force board update after all bundle operations\n    this.board.update()\n  }\n\n  private rollbackBundle(op: BundleOp): void {\n    // Rollback operations in reverse order\n    for (let i = op.ops.length - 1; i >= 0; i--) {\n      const subOp = op.ops[i]\n      if (subOp) {\n        try {\n          // Create a fresh copy of the operation to avoid stale IDs\n          const freshOp = structuredClone(subOp)\n          // Keep IDs intact - don't delete them\n          this.rollbackOperation(freshOp)\n          // Write back the realized IDs to the original operation\n          if (freshOp.kind === 'create' || freshOp.kind === 'delete') {\n            const freshOpTyped = freshOp as CreateOp | DeleteOp\n            const subOpTyped = subOp as CreateOp | DeleteOp\n            if (freshOpTyped._id !== undefined) {\n              subOpTyped._id = freshOpTyped._id\n            }\n            if (freshOpTyped.pointIds !== undefined) {\n              subOpTyped.pointIds = freshOpTyped.pointIds\n            }\n          }\n        } catch (error) {\n          console.error('Error rolling back bundled operation:', error, subOp)\n          // Continue with other operations even if one fails\n        }\n      }\n    }\n    // Force board update after all bundle rollback operations\n    this.board.update()\n  }\n\n  private setPointName(pointObj: any, name: string): void {\n    const trimmed = (name || '').trim()\n    const pretty = this.toSubscript(trimmed)\n    pointObj.setAttribute({ name: pretty, withLabel: !!trimmed })\n    ;(pointObj as any)._rawName = trimmed\n  }\n\n  private toSubscript(name: string): string {\n    const map: Record<string, string> = { \n      '0': '₀', '1': '₁', '2': '₂', '3': '₃', '4': '₄', \n      '5': '₅', '6': '₆', '7': '₇', '8': '₈', '9': '₉' \n    }\n    return name.replace(/_(\\d+)/g, (_, d) => d.split('').map((ch: string) => map[ch] ?? ch).join(''))\n  }\n\n  private isPointUsedElsewhere(pointId: string, pointObj: any): boolean {\n    return Object.values(this.board.objects).some((otherObj: any) => {\n      if (otherObj === pointObj || otherObj.id === pointId) return false\n      if (otherObj.point1?.id === pointId || otherObj.point2?.id === pointId) return true\n      if (otherObj.center?.id === pointId) return true\n      if (otherObj.points && Array.isArray(otherObj.points)) {\n        return otherObj.points.some((p: any) => p?.id === pointId)\n      }\n      return false\n    })\n  }\n\n  // Helper methods for creating operations\n  public createPointOperation(x: number, y: number, attr: any = { name: '', size: 2, strokeColor: '#444', fillColor: '#666' }): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'point',\n      payload: { x, y, attr }\n    }\n  }\n\n  public createSegmentOperation(p1: { x: number; y: number }, p2: { x: number; y: number }, attr: any): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'segment',\n      payload: { p1, p2, attr }\n    }\n  }\n\n  public createLineOperation(p1: { x: number; y: number }, p2: { x: number; y: number }, attr: any): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'line',\n      payload: { p1, p2, attr }\n    }\n  }\n\n  public createCircleOperation(center: { x: number; y: number }, on: { x: number; y: number }, attr: any): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'circle',\n      payload: { center, on, attr }\n    }\n  }\n\n  public createDeleteOperation(obj: any): DeleteOp | null {\n    try {\n      const attr = this.getCommonAttr(obj)\n      if (obj.elType === 'point') {\n        return {\n          kind: 'delete',\n          elType: 'point',\n          payload: { x: obj.X(), y: obj.Y(), attr },\n          _id: obj.id\n        }\n      }\n      if (obj.elType === 'segment' || obj.elType === 'line') {\n        const a: any = obj.point1 || obj.A || obj.points?.[0]\n        const b: any = obj.point2 || obj.B || obj.points?.[1]\n        if (!a || !b) return null\n        return {\n          kind: 'delete',\n          elType: obj.elType,\n          payload: { p1: { x: a.X(), y: a.Y() }, p2: { x: b.X(), y: b.Y() }, attr },\n          _id: obj.id,\n          pointIds: [a.id, b.id]\n        }\n      }\n      if (obj.elType === 'circle') {\n        const c: any = obj.center || obj.midpoint || obj.points?.[0]\n        const p: any = obj.point2 || obj.points?.[1]\n        const center = c ? { x: c.X(), y: c.Y() } : { x: obj.center?.X?.() ?? 0, y: obj.center?.Y?.() ?? 0 }\n        let on\n        if (p) {\n          on = { x: p.X(), y: p.Y() }\n        } else {\n          const R = (typeof obj.R === 'function' ? obj.R() : obj.radius) ?? 1\n          on = { x: center.x + R, y: center.y }\n        }\n        return {\n          kind: 'delete',\n          elType: 'circle',\n          payload: { center, on, attr },\n          _id: obj.id,\n          pointIds: c && p ? [c.id, p.id] : []\n        }\n      }\n    } catch {\n      return null\n    }\n    return null\n  }\n\n  private getCommonAttr(o: any): any {\n    return {\n      name: o?._rawName ?? '',\n      withLabel: !!(o?.visProp?.withlabel || o?.visProp?.withLabel),\n      fixed: !!o?.visProp?.fixed,\n      size: o?.visProp?.size,\n      strokeColor: o?.visProp?.strokecolor ?? o?.visProp?.strokeColor,\n      strokeWidth: o?.visProp?.strokewidth ?? o?.visProp?.strokeWidth,\n      fillColor: o?.visProp?.fillcolor ?? o?.visProp?.fillColor,\n      dash: o?.visProp?.dash\n    }\n  }\n\n  // Helper methods for UI integration\n  public fromBoardDeleteUnderMouse(e: any): DeleteOp | null {\n    const under = this.board.getAllObjectsUnderMouse(e)\n    const o: any = under.find((x: any) => !x?.visProp?.fixed)\n    return o ? this.createDeleteOperation(o) : null\n  }\n\n  public createModifyOperation(pointId: string, before: { x: number; y: number; name: string }, after: { x: number; y: number; name: string }): ModifyOp {\n    return {\n      kind: 'modify',\n      pointId,\n      before,\n      after\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4187, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/grid-manager.ts"],"sourcesContent":["// lib/grid-manager.ts\nimport JXG from 'jsxgraph'\nimport { WORLD_PER_CM, WORLD_PER_MM } from './measurement-scale'\n\nexport type GridMode = 'none' | 'major' | 'minor' | 'major-minor' | 'dot'\ntype JBoard = JXG.Board & { renderer: any }\n\nexport class GridManager {\n  private gridLines: any[] = []\n  private mode: GridMode = 'none'\n  private dotStep = WORLD_PER_MM // world units (1 mm)\n  private container: HTMLElement\n\n  constructor(private board: JBoard, container: HTMLElement) {\n    this.container = container\n    // ensure background sits below the canvas\n    this.container.style.position = this.container.style.position || 'relative'\n  }\n\n  setMode(mode: GridMode) {\n    if (this.mode === mode) return\n    this.mode = mode\n    this.clearAll()\n    switch (mode) {\n      case 'none':\n        this.applyDot(false)\n        break\n      case 'major':\n        this.createLineGrid(WORLD_PER_CM, '#e5e7eb', 1)\n        this.applyDot(false)\n        break\n      case 'minor':\n        this.createLineGrid(WORLD_PER_MM, '#f3f4f6', 0.5)\n        this.applyDot(false)\n        break\n      case 'major-minor':\n        this.createLineGrid(WORLD_PER_MM, '#f3f4f6', 0.5)\n        this.createLineGrid(WORLD_PER_CM, '#d1d5db', 1)\n        this.applyDot(false)\n        break\n      case 'dot':\n        this.applyDot(true)\n        break\n    }\n    this.board.update()\n  }\n\n  setDotStep(stepWorldUnits: number) {\n    this.dotStep = Math.max(0.1, stepWorldUnits)\n    if (this.mode === 'dot') this.applyDot(true)\n  }\n\n  /** Keep the dot background in sync with pixel scaling */\n  sync() {\n    if (this.mode !== 'dot') return\n    this.applyDot(true)\n  }\n\n  private createLineGrid(step: number, color: string, strokeWidth: number) {\n    const bbox = this.board.getBoundingBox()\n    // Ensure a shared Set on the board to track grid object ids\n    const gridIds: Set<string> = ((this.board as any).__gridIds ||= new Set<string>())\n    \n    // Create vertical lines\n    for (let x = bbox[0]; x <= bbox[2]; x += step) {\n      const line = this.board.create('line', [[x, bbox[1]], [x, bbox[3]]], {\n        strokeColor: color,\n        strokeWidth: strokeWidth,\n        fixed: true,\n        highlight: false,\n        layer: 0,\n        withLabel: false,\n        showInfobox: false,\n        visible: true,\n        trace: false,\n        track: false,\n        draggable: false\n      })\n      try { gridIds.add((line as any).id as string) } catch {}\n      try {\n        ((line as any).visProp ||= {}).pointerEvents = 'none'\n        const node = (line as any).rendNode\n        if (node) node.style.pointerEvents = 'none'\n      } catch {}\n      this.gridLines.push(line)\n    }\n    \n    // Create horizontal lines\n    for (let y = bbox[3]; y <= bbox[1]; y += step) {\n      const line = this.board.create('line', [[bbox[0], y], [bbox[2], y]], {\n        strokeColor: color,\n        strokeWidth: strokeWidth,\n        fixed: true,\n        highlight: false,\n        layer: 0,\n        withLabel: false,\n        showInfobox: false,\n        visible: true,\n        trace: false,\n        track: false,\n        draggable: false\n      })\n      try { gridIds.add((line as any).id as string) } catch {}\n      try {\n        ((line as any).visProp ||= {}).pointerEvents = 'none'\n        const node = (line as any).rendNode\n        if (node) node.style.pointerEvents = 'none'\n      } catch {}\n      this.gridLines.push(line)\n    }\n  }\n\n  private clearAll() {\n    const gridIds: Set<string> | undefined = (this.board as any).__gridIds\n    this.gridLines.forEach(line => {\n      try { this.board.removeObject(line) } catch {}\n      try { gridIds?.delete((line as any).id as string) } catch {}\n    })\n    this.gridLines = []\n  }\n\n  private applyDot(enabled: boolean) {\n    if (!enabled) {\n      this.container.style.backgroundImage = ''\n      this.container.style.backgroundSize = ''\n      this.container.style.backgroundPosition = ''\n      return\n    }\n    // Convert world units to pixels using board.unitX/unitY\n    const pxX = this.dotStep * this.board.unitX\n    const pxY = this.dotStep * this.board.unitY\n    // Subtle dot (1px) using radial gradient\n    this.container.style.backgroundImage =\n      'radial-gradient(circle, #e5e7eb 1px, transparent 1px)'\n    this.container.style.backgroundSize = `${pxX}px ${pxY}px`\n    // Keep the pattern aligned to the origin\n    // If you allow pan/zoom, you could compute an offset from the bbox.\n    this.container.style.backgroundPosition = `0 0`\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4359, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/board-manager.ts"],"sourcesContent":["// lib/board-manager.ts\nimport JXG from 'jsxgraph'\nimport { GridManager, GridMode } from './grid-manager'\n\nexport type JBoard = JXG.Board & { renderer: any }\n\nexport interface BoardOptions {\n  boundingbox?: [number, number, number, number]\n  axis?: boolean\n  showNavigation?: boolean\n  showCopyright?: boolean\n  grid?: boolean\n  pan?: { enabled: boolean }\n  zoom?: boolean\n  keepaspectratio?: boolean\n}\n\nexport interface BoardManagerOptions extends BoardOptions {\n  container: HTMLElement\n  defaultGridMode?: GridMode\n}\n\nexport class BoardManager {\n  private board: JBoard | null = null\n  private gridManager: GridManager | null = null\n  private container: HTMLElement | null = null\n  private options: BoardOptions\n\n  constructor(options: BoardManagerOptions) {\n    this.container = options.container\n    const { container, defaultGridMode, ...boardOptions } = options\n    this.options = {\n      boundingbox: [-1, 8, 11, -1],\n      axis: false,\n      showNavigation: false,\n      showCopyright: false,\n      grid: false,\n      pan: { enabled: false },\n      zoom: false,\n      keepaspectratio: true,\n      ...boardOptions\n    }\n    this.init(boardOptions, defaultGridMode)\n  }\n\n  private init(boardOptions: BoardOptions, defaultGridMode?: GridMode) {\n    if (!this.container) {\n      throw new Error('Container element is required')\n    }\n\n    if (this.board) {\n      throw new Error('Board already initialized')\n    }\n\n    // Create board\n    this.board = JXG.JSXGraph.initBoard(this.container, {\n      ...this.options,\n      ...boardOptions\n    }) as JBoard\n\n    // Create grid manager\n    this.gridManager = new GridManager(this.board, this.container)\n\n    // Set initial grid mode if provided\n    if (defaultGridMode) {\n      this.gridManager.setMode(defaultGridMode)\n    }\n\n    // Set up global event wiring for future pan/zoom support\n    // This can be extended later for pan/zoom functionality\n    this.setupGlobalEvents()\n  }\n\n  /**\n   * Get the board instance (typed getter)\n   */\n  getBoard(): JBoard {\n    if (!this.board) {\n      throw new Error('Board not initialized')\n    }\n    return this.board\n  }\n\n  /**\n   * Get the grid manager instance\n   */\n  getGridManager(): GridManager {\n    if (!this.gridManager) {\n      throw new Error('GridManager not initialized')\n    }\n    return this.gridManager\n  }\n\n  /**\n   * Set grid mode via GridManager\n   */\n  setGridMode(mode: GridMode) {\n    this.gridManager?.setMode(mode)\n  }\n\n  /**\n   * Setup global event wiring (for later pan/zoom support)\n   */\n  private setupGlobalEvents() {\n    if (!this.board) return\n\n    // If you ever enable pan/zoom, keep the dot grid in sync:\n    // this.board.on('boundingbox', () => {\n    //   this.gridManager?.sync()\n    // })\n\n    // Add other global event handlers here as needed\n  }\n\n  /**\n   * Update board options (for dynamic changes like pan/zoom)\n   */\n  updateOptions(options: Partial<BoardOptions>) {\n    if (!this.board) {\n      throw new Error('Board not initialized')\n    }\n    this.options = { ...this.options, ...options }\n    // Apply options to board as needed\n    // Note: Some options may require board recreation\n  }\n\n  /**\n   * Free the board and clean up resources\n   */\n  free() {\n    if (this.board) {\n      try {\n        JXG.JSXGraph.freeBoard(this.board)\n      } catch (e) {\n        // Ignore errors during cleanup\n      }\n      this.board = null\n    }\n    this.gridManager = null\n    this.container = null\n  }\n}\n\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;;;AACvB;AACA;;;;AAoBO,MAAM;IAuBH,KAAK,YAA0B,EAAE,eAA0B,EAAE;QACnE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,MAAM,IAAI,MAAM;QAClB;QAEA,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,MAAM,IAAI,MAAM;QAClB;QAEA,eAAe;QACf,IAAI,CAAC,KAAK,GAAG,sLAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE;YAClD,GAAG,IAAI,CAAC,OAAO;YACf,GAAG,YAAY;QACjB;QAEA,sBAAsB;QACtB,IAAI,CAAC,WAAW,GAAG,IAAI,wKAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS;QAE7D,oCAAoC;QACpC,IAAI,iBAAiB;YACnB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;QAC3B;QAEA,yDAAyD;QACzD,wDAAwD;QACxD,IAAI,CAAC,iBAAiB;IACxB;IAEA;;GAEC,GACD,WAAmB;QACjB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA;;GAEC,GACD,iBAA8B;QAC5B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,IAAI,CAAC,WAAW;IACzB;IAEA;;GAEC,GACD,YAAY,IAAc,EAAE;YAC1B;SAAA,oBAAA,IAAI,CAAC,WAAW,cAAhB,wCAAA,kBAAkB,OAAO,CAAC;IAC5B;IAEA;;GAEC,GACD,AAAQ,oBAAoB;QAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;IAEjB,0DAA0D;IAC1D,uCAAuC;IACvC,6BAA6B;IAC7B,KAAK;IAEL,iDAAiD;IACnD;IAEA;;GAEC,GACD,cAAc,OAA8B,EAAE;QAC5C,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,CAAC,OAAO,GAAG;YAAE,GAAG,IAAI,CAAC,OAAO;YAAE,GAAG,OAAO;QAAC;IAC7C,mCAAmC;IACnC,kDAAkD;IACpD;IAEA;;GAEC,GACD,OAAO;QACL,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI;gBACF,sLAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK;YACnC,EAAE,OAAO,GAAG;YACV,+BAA+B;YACjC;YACA,IAAI,CAAC,KAAK,GAAG;QACf;QACA,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,SAAS,GAAG;IACnB;IAhHA,YAAY,OAA4B,CAAE;QAL1C,+MAAQ,SAAuB;QAC/B,+MAAQ,eAAkC;QAC1C,+MAAQ,aAAgC;QACxC,+MAAQ,WAAR,KAAA;QAGE,IAAI,CAAC,SAAS,GAAG,QAAQ,SAAS;QAClC,MAAM,EAAE,SAAS,EAAE,eAAe,EAAE,GAAG,cAAc,GAAG;QACxD,IAAI,CAAC,OAAO,GAAG;YACb,aAAa;gBAAC,CAAC;gBAAG;gBAAG;gBAAI,CAAC;aAAE;YAC5B,MAAM;YACN,gBAAgB;YAChB,eAAe;YACf,MAAM;YACN,KAAK;gBAAE,SAAS;YAAM;YACtB,MAAM;YACN,iBAAiB;YACjB,GAAG,YAAY;QACjB;QACA,IAAI,CAAC,IAAI,CAAC,cAAc;IAC1B;AAkGF","debugId":null}},
    {"offset": {"line": 4487, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/geometry-factory.ts"],"sourcesContent":["// lib/geometry-factory.ts\nimport JXG from 'jsxgraph'\nimport { JBoard } from './board-manager'\nimport { GridMode } from './grid-manager'\nimport { WORLD_PER_MM, WORLD_PER_CM } from './measurement-scale'\n\nexport type CreateAttrs = Partial<JXG.Options>\n\nexport class GeometryFactory {\n  constructor(private board: JBoard) {}\n\n  /**\n   * Get snap size based on grid mode\n   */\n  getSnapSize(gridMode: GridMode): number {\n    if (gridMode === 'none') return WORLD_PER_MM\n    if (gridMode === 'minor') return WORLD_PER_MM\n    return WORLD_PER_CM\n  }\n\n  /**\n   * Get EPS for finding nearby points based on grid mode\n   */\n  getNearbyEps(gridMode: GridMode, baseEps: number = 0.05): number {\n    const snapSize = this.getSnapSize(gridMode)\n    return Math.max(baseEps, snapSize * 0.8)\n  }\n\n  point(x: number, y: number, snap = false, attrs: CreateAttrs = {}) {\n    const pt = this.board.create('point', [x, y], {\n      name: '', size: 2, strokeColor: '#444', fillColor: '#666',\n      snapToGrid: false,\n      ...attrs\n    })\n    ;(pt as any)._rawName = ''\n    return pt\n  }\n\n  /**\n   * Create a point with grid-aware snap settings\n   */\n  pointWithGrid(x: number, y: number, gridMode: GridMode, attrs: CreateAttrs = {}) {\n    // Always disable snapping for user-created points\n    return this.point(x, y, false, attrs)\n  }\n\n  segment(a: any, b: any, attrs: CreateAttrs = {}) {\n    return this.board.create('segment', [a, b], {\n      strokeColor:'#2563eb', strokeWidth:2, ...attrs\n    })\n  }\n\n  line(a: any, b: any, attrs: CreateAttrs = {}) {\n    return this.board.create('line', [a, b], {\n      strokeColor:'#059669', strokeWidth:1, dash:1, ...attrs\n    })\n  }\n\n  circle(center: any, on: any, attrs: CreateAttrs = {}) {\n    return this.board.create('circle', [center, on], {\n      strokeColor:'#dc2626', strokeWidth:2, ...attrs\n    })\n  }\n\n  findNearbyPoint(x: number, y: number, eps: number) {\n    const objs = Object.values(this.board.objects) as any[]\n    return objs.find(o => o?.elType === 'point' && !o.visProp?.fixed &&\n      Math.hypot(o.X() - x, o.Y() - y) <= eps) || null\n  }\n}\n\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;;AAI1B;;;AAIO,MAAM;IAGX;;GAEC,GACD,YAAY,QAAkB,EAAU;QACtC,IAAI,aAAa,QAAQ,OAAO,8KAAY;QAC5C,IAAI,aAAa,SAAS,OAAO,8KAAY;QAC7C,OAAO,8KAAY;IACrB;IAEA;;GAEC,GACD,aAAa,QAAkB,EAAkC;YAAhC,UAAA,iEAAkB;QACjD,MAAM,WAAW,IAAI,CAAC,WAAW,CAAC;QAClC,OAAO,KAAK,GAAG,CAAC,SAAS,WAAW;IACtC;IAEA,MAAM,CAAS,EAAE,CAAS,EAAyC;YAAvC,OAAA,iEAAO,OAAO,QAAA,iEAAqB,CAAC;QAC9D,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS;YAAC;YAAG;SAAE,EAAE;YAC5C,MAAM;YAAI,MAAM;YAAG,aAAa;YAAQ,WAAW;YACnD,YAAY;YACZ,GAAG,KAAK;QACV;QACE,GAAW,QAAQ,GAAG;QACxB,OAAO;IACT;IAEA;;GAEC,GACD,cAAc,CAAS,EAAE,CAAS,EAAE,QAAkB,EAA2B;YAAzB,QAAA,iEAAqB,CAAC;QAC5E,kDAAkD;QAClD,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO;IACjC;IAEA,QAAQ,CAAM,EAAE,CAAM,EAA2B;YAAzB,QAAA,iEAAqB,CAAC;QAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW;YAAC;YAAG;SAAE,EAAE;YAC1C,aAAY;YAAW,aAAY;YAAG,GAAG,KAAK;QAChD;IACF;IAEA,KAAK,CAAM,EAAE,CAAM,EAA2B;YAAzB,QAAA,iEAAqB,CAAC;QACzC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;YAAC;YAAG;SAAE,EAAE;YACvC,aAAY;YAAW,aAAY;YAAG,MAAK;YAAG,GAAG,KAAK;QACxD;IACF;IAEA,OAAO,MAAW,EAAE,EAAO,EAA2B;YAAzB,QAAA,iEAAqB,CAAC;QACjD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU;YAAC;YAAQ;SAAG,EAAE;YAC/C,aAAY;YAAW,aAAY;YAAG,GAAG,KAAK;QAChD;IACF;IAEA,gBAAgB,CAAS,EAAE,CAAS,EAAE,GAAW,EAAE;QACjD,MAAM,OAAO,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO;QAC7C,OAAO,KAAK,IAAI,CAAC,CAAA;gBAA+B;mBAA1B,CAAA,cAAA,wBAAA,EAAG,MAAM,MAAK,WAAW,GAAC,aAAA,EAAE,OAAO,cAAT,iCAAA,WAAW,KAAK,KAC9D,KAAK,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,MAAM;cAAQ;IAChD;IA3DA,YAAY,AAAQ,KAAa,CAAE;;aAAf,QAAA;IAAgB;AA4DtC","debugId":null}},
    {"offset": {"line": 4587, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/selection-manager.ts"],"sourcesContent":["// lib/selection-manager.ts\n/**\n * SelectionManager - manages temporary selection state for multi-step tools\n * \n * Responsibility: hold \"first click\" temporary selection, expose select, clear, getFirst.\n * Why: simplifies selected state + refs and makes it tool-agnostic.\n */\n\nexport class SelectionManager {\n  private first: any = null\n\n  /**\n   * Select an item (typically used for first click in multi-step tools)\n   */\n  select(item: any): void {\n    this.first = item\n  }\n\n  /**\n   * Get the first selected item (for two-click tools like segment/line/circle)\n   */\n  getFirst(): any {\n    return this.first\n  }\n\n  /**\n   * Clear the selection\n   */\n  clear(): void {\n    this.first = null\n  }\n\n  /**\n   * Check if there is a selection\n   */\n  hasSelection(): boolean {\n    return this.first !== null\n  }\n\n  /**\n   * Get all selected items (for potential future multi-selection support)\n   * Currently returns array with first item or empty array\n   */\n  getAll(): any[] {\n    return this.first ? [this.first] : []\n  }\n}\n\n"],"names":[],"mappings":"AAAA,2BAA2B;AAC3B;;;;;CAKC;;;;;;AAEM,MAAM;IAGX;;GAEC,GACD,OAAO,IAAS,EAAQ;QACtB,IAAI,CAAC,KAAK,GAAG;IACf;IAEA;;GAEC,GACD,WAAgB;QACd,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA;;GAEC,GACD,QAAc;QACZ,IAAI,CAAC,KAAK,GAAG;IACf;IAEA;;GAEC,GACD,eAAwB;QACtB,OAAO,IAAI,CAAC,KAAK,KAAK;IACxB;IAEA;;;GAGC,GACD,SAAgB;QACd,OAAO,IAAI,CAAC,KAAK,GAAG;YAAC,IAAI,CAAC,KAAK;SAAC,GAAG,EAAE;IACvC;;QApCA,+MAAQ,SAAa;;AAqCvB","debugId":null}},
    {"offset": {"line": 4639, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/rename-manager.ts"],"sourcesContent":["import JXG from 'jsxgraph'\n\n// Keep your local JBoard type in one place\nexport type JBoard = JXG.Board & { renderer: any }\n\nexport interface RenameManagerOptions {\n\t/** Max movement (world units) to still treat the interaction as a \"click\" */\n\tclickEps?: number\n\t/** Prompt label shown to the user */\n\tpromptLabel?: string\n\t/** Called after a successful rename (consumer can push an undo op) */\n\tonRenamed?: (args: { pointId: string; beforeRaw: string; afterRaw: string }) => void\n\t/** If true, board.update() is called after rename (default: true) */\n\tupdateBoard?: boolean\n\t/**\n\t * Return true to allow the event to trigger rename mode.\n\t * Useful to ignore clicks on your \"physical tools\" overlay etc.\n\t */\n\teventGuard?: (ev: any) => boolean\n}\n\nexport class RenameManager {\n\tprivate brd: JBoard\n\tprivate opts: Required<RenameManagerOptions>\n\tprivate enabled = false\n\n\t// internal state for down/up logic\n\tprivate armed: { pt: any | null; wasFixed: boolean } = { pt: null, wasFixed: false }\n\tprivate downPos: { x: number; y: number } | null = null\n\n\t// handlers references so we can cleanly detach\n\tprivate downHandler: ((e: any) => void) | null = null\n\tprivate upHandler: ((e: any) => void) | null = null\n\n\tconstructor(board: JBoard, options?: RenameManagerOptions) {\n\t\tthis.brd = board\n\t\tthis.opts = {\n\t\t\tclickEps: options?.clickEps ?? 0.12,\n\t\t\tpromptLabel: options?.promptLabel ?? 'Název bodu (např. A, B, C, A_1, A_2):',\n\t\t\tonRenamed: options?.onRenamed ?? (() => {}),\n\t\t\tupdateBoard: options?.updateBoard ?? true,\n\t\t\teventGuard: options?.eventGuard ?? defaultEventGuard,\n\t\t}\n\t}\n\n\t/** Attach event listeners */\n\tenable() {\n\t\tif (this.enabled) return\n\t\tthis.enabled = true\n\n\t\tthis.downHandler = (e: any) => {\n\t\t\tif (!this.opts.eventGuard(e)) return\n\n\t\t\tconst pt = this.pointUnder(e) as any\n\t\t\tif (!pt) return\n\n\t\t\t// Freeze to prevent accidental drags while we decide if it's a click\n\t\t\tconst wasFixed = !!pt.visProp.fixed\n\t\t\tpt.setAttribute({ fixed: true })\n\n\t\t\tthis.armed = { pt, wasFixed }\n\t\t\tthis.downPos = this.getMouseXY(e)\n\n\t\t\t// stop normal board interaction for this click\n\t\t\tstopEvent(e)\n\t\t}\n\n\t\tthis.upHandler = (e: any) => {\n\t\t\tif (!this.armed.pt) return\n\t\t\tconst up = this.getMouseXY(e)\n\t\t\tconst down = this.downPos ?? up\n\t\t\tconst moved = Math.hypot(up.x - down.x, up.y - down.y)\n\n\t\t\tif (moved <= this.opts.clickEps) {\n\t\t\t\t// Treat as click -> prompt & rename\n\t\t\t\tthis.promptAndRename(this.armed.pt, e)\n\t\t\t} else {\n\t\t\t\t// Treat as drag -> restore and do nothing\n\t\t\t\tthis.armed.pt.setAttribute({ fixed: this.armed.wasFixed })\n\t\t\t}\n\n\t\t\t// clear arm\n\t\t\tthis.armed = { pt: null, wasFixed: false }\n\t\t\tthis.downPos = null\n\t\t}\n\n\t\tthis.brd.on('down', this.downHandler)\n\t\tthis.brd.on('up', this.upHandler)\n\t}\n\n\t/** Detach event listeners */\n\tdisable() {\n\t\tif (!this.enabled) return\n\t\tthis.enabled = false\n\t\ttry {\n\t\t\tif (this.downHandler) this.brd.off('down', this.downHandler)\n\t\t\tif (this.upHandler) this.brd.off('up', this.upHandler)\n\t\t} catch {}\n\t\tthis.downHandler = null\n\t\tthis.upHandler = null\n\t\tthis.armed = { pt: null, wasFixed: false }\n\t\tthis.downPos = null\n\t}\n\n\ttoggle() {\n\t\tthis.enabled ? this.disable() : this.enable()\n\t}\n\n\tdestroy() {\n\t\tthis.disable()\n\t}\n\n\t// ---------- helpers ----------\n\n\tprivate getMouseXY(e: any) {\n\t\tconst c = this.brd.getUsrCoordsOfMouse(e)\n\t\treturn { x: c[0], y: c[1] }\n\t}\n\n\tprivate pointUnder(e: any) {\n\t\tconst under = this.brd.getAllObjectsUnderMouse(e)\n\t\treturn under.find((o: any) => o.elType === 'point') || null\n\t}\n\n\tprivate isNameTaken(raw: string, exceptId?: string) {\n\t\tfor (const key in this.brd.objects) {\n\t\t\tconst o: any = (this.brd.objects as any)[key]\n\t\t\tif (o?.elType === 'point' && o.id !== exceptId) {\n\t\t\t\tif ((o._rawName ?? '') === raw) return true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\n\tprivate toSubscript(name: string) {\n\t\tconst map: Record<string, string> = {\n\t\t\t'0': '₀', '1': '₁', '2': '₂', '3': '₃', '4': '₄',\n\t\t\t'5': '₅', '6': '₆', '7': '₇', '8': '₈', '9': '₉',\n\t\t}\n\t\treturn (name || '').replace(/_(\\d+)/g, (_: string, d: string) => d.split('').map((ch: string) => map[ch] ?? ch).join(''))\n\t}\n\n\tprivate normalizeAndApplyName(pt: any, raw: string) {\n\t\tconst trimmed = (raw || '').trim()\n\t\tconst pretty = this.toSubscript(trimmed)\n\t\tpt.setAttribute({ name: pretty, withLabel: !!trimmed })\n\t\tpt._rawName = trimmed\n\t}\n\n\tprivate promptAndRename(pt: any, e: any) {\n\t\tconst beforeRaw = pt._rawName || ''\n\t\tlet proposed = (window.prompt(this.opts.promptLabel, beforeRaw) ?? '').trim()\n\n\t\t// Deduplicate if necessary\n\t\tif (proposed) {\n\t\t\tif (this.isNameTaken(proposed, pt.id)) {\n\t\t\t\tlet i = 2\n\t\t\t\twhile (this.isNameTaken(`${proposed}_${i}`, pt.id)) i++\n\t\t\t\tproposed = `${proposed}_${i}`\n\t\t\t}\n\t\t}\n\n\t\tthis.normalizeAndApplyName(pt, proposed)\n\n\t\t// Restore mobility\n\t\tpt.setAttribute({ fixed: this.armed.wasFixed })\n\n\t\t// Push the rename event upward for undo/redo\n\t\tthis.opts.onRenamed({\n\t\t\tpointId: pt.id,\n\t\t\tbeforeRaw,\n\t\t\tafterRaw: proposed || '',\n\t\t})\n\n\t\tif (this.opts.updateBoard) this.brd.update()\n\n\t\t// stop this click from leaking into normal handlers\n\t\tstopEvent(e)\n\t}\n}\n\n// ---------- small utilities ----------\n\nfunction stopEvent(e: any) {\n\tif (e?.originalEvent) {\n\t\te.originalEvent.stopPropagation?.()\n\t\te.originalEvent.preventDefault?.()\n\t}\n}\n\n/** Default guard: ignore clicks on anything inside your physical tools (elements with .group) */\nfunction defaultEventGuard(e: any) {\n\tconst t = e?.originalEvent?.target as HTMLElement | null\n\tif (!t) return true\n\treturn !(t.closest('.group') || t.classList?.contains('group'))\n}\n\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4833, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/board-serializer.ts"],"sourcesContent":["import JXG from 'jsxgraph'\nimport { UNIT_LABEL } from './measurement-scale'\n\nexport type Snapshot = {\n  version: 1\n  timestamp: string\n  unit: string\n  bbox: number[]\n  objects: Array<\n    | { id?: string; type: 'point'; name?: string; properties?: any; x: number; y: number }\n    | { id?: string; type: 'segment'|'line'; name?: string; properties?: any;\n        x1: number; y1: number; x2: number; y2: number }\n    | { id?: string; type: 'circle'; name?: string; properties?: any;\n        center:{x:number;y:number}; radius:number }\n    | { id?: string; type: 'polygon'; name?: string; properties?: any;\n        vertices:{x:number;y:number}[] }\n  >\n  meta?: Record<string, any> // tool positions, gridMode, etc.\n}\n\n// Robust circle geometry extraction\nfunction circleGeometry(obj: any) {\n  const c = obj.center\n  const on = obj.point2 ?? obj.points?.[1] ?? null\n\n  if (c && on) {\n    return {\n      center: { x: c.X(), y: c.Y() },\n      radius: Math.hypot(on.X() - c.X(), on.Y() - c.Y()),\n    }\n  }\n\n  // Last resort: try method name variants if present\n  const r =\n    (typeof obj.Radius === 'function' && obj.Radius()) ||\n    (typeof obj.getRadius === 'function' && obj.getRadius())\n\n  if (c && Number.isFinite(r)) {\n    return { center: { x: c.X(), y: c.Y() }, radius: r }\n  }\n\n  // If we can't guarantee a valid radius, return null (so you notice in logs)\n  return null\n}\n\nexport function exportBoard(brd: JXG.Board, meta?: Record<string, any>): Snapshot {\n  const bbox = brd.getBoundingBox()\n  const [left, top, right, bottom] = bbox\n  const EPS = 1e-9\n  const isOnBorder = (x:number, y:number) => (\n    Math.abs(x - left) < EPS || Math.abs(x - right) < EPS ||\n    Math.abs(y - top) < EPS || Math.abs(y - bottom) < EPS\n  )\n\n  const objects = Object.values(brd.objects).flatMap((o: any): Snapshot['objects'] => {\n    if (!o || !o.elType) return []\n    const t = o.elType\n    try {\n      if (t === 'point') {\n        if (typeof o.X !== 'function' || typeof o.Y !== 'function') return []\n        const x = o.X()\n        const y = o.Y()\n        if (!isFinite(x) || !isFinite(y)) return []\n        // Drop unnamed border points to avoid exporting grid/bbox helpers\n        if (!o.name && isOnBorder(x, y)) return []\n        \n        // Export point properties\n        const props: any = {}\n        if (o.visProp) {\n          if (o.visProp.strokeColor) props.strokeColor = o.visProp.strokeColor\n          if (o.visProp.fillColor) props.fillColor = o.visProp.fillColor\n          if (o.visProp.size !== undefined) props.size = o.visProp.size\n          if (o.visProp.fixed !== undefined) props.fixed = o.visProp.fixed\n        }\n        \n        return [{ \n          id: o.id, \n          type: 'point' as const, \n          name: o.name || '', \n          properties: Object.keys(props).length > 0 ? props : undefined,\n          x, \n          y \n        }]\n      }\n      if (t === 'segment' || t === 'line') {\n        const p1 = o.points?.[0] ?? o.point1\n        const p2 = o.points?.[1] ?? o.point2\n        if (!p1 || !p2 || typeof p1.X !== 'function' || typeof p2.X !== 'function') return []\n        try {\n          const x1 = p1.X(), y1 = p1.Y()\n          const x2 = p2.X(), y2 = p2.Y()\n          if (!isFinite(x1) || !isFinite(y1) || !isFinite(x2) || !isFinite(y2)) return []\n          \n          // Export line/segment properties\n          const props: any = {}\n          if (o.visProp) {\n            if (o.visProp.strokeColor) props.strokeColor = o.visProp.strokeColor\n            if (o.visProp.strokeWidth !== undefined) props.strokeWidth = o.visProp.strokeWidth\n            if (o.visProp.dash !== undefined) props.dash = o.visProp.dash\n          }\n          \n          return [{ \n            id: o.id, \n            type: t, \n            name: o.name || '', \n            properties: Object.keys(props).length > 0 ? props : undefined,\n            x1, y1, x2, y2 \n          }]\n        } catch {\n          return []\n        }\n      }\n      if (t === 'circle') {\n        const geom = circleGeometry(o)\n        if (!geom) return []\n        \n        // Export circle properties\n        const props: any = {}\n        if (o.visProp) {\n          if (o.visProp.strokeColor) props.strokeColor = o.visProp.strokeColor\n          if (o.visProp.strokeWidth !== undefined) props.strokeWidth = o.visProp.strokeWidth\n        }\n        \n        return [{ \n          id: o.id, \n          type: 'circle' as const, \n          name: o.name || '', \n          properties: Object.keys(props).length > 0 ? props : undefined,\n          center: geom.center, \n          radius: geom.radius \n        }]\n      }\n      if (t === 'polygon') {\n        const vertices = o.vertices ?? []\n        if (!Array.isArray(vertices) || vertices.length < 3) return []\n        try {\n          const verts: {x: number; y: number}[] = []\n          for (const v of vertices) {\n            if (!v || typeof v.X !== 'function' || typeof v.Y !== 'function') continue\n            try {\n              const x = v.X()\n              const y = v.Y()\n              if (isFinite(x) && isFinite(y)) {\n                verts.push({x, y})\n              }\n            } catch {\n              continue\n            }\n          }\n          if (verts.length < 3) return []\n          \n          // Export polygon properties\n          const props: any = {}\n          if (o.visProp) {\n            if (o.visProp.strokeColor) props.strokeColor = o.visProp.strokeColor\n            if (o.visProp.fillColor) props.fillColor = o.visProp.fillColor\n            if (o.visProp.strokeWidth !== undefined) props.strokeWidth = o.visProp.strokeWidth\n          }\n          \n          return [{ \n            id: o.id, \n            type: 'polygon' as const, \n            name: o.name || '', \n            properties: Object.keys(props).length > 0 ? props : undefined,\n            vertices: verts \n          }]\n        } catch {\n          return []\n        }\n      }\n    } catch {\n      // Skip objects that throw errors during export\n      return []\n    }\n    return []\n  })\n\n  const result: Snapshot = {\n    version: 1,\n    timestamp: new Date().toISOString(),\n    unit: UNIT_LABEL,\n    bbox,\n    objects,\n  }\n  if (meta) result.meta = meta\n  return result\n}\n\n// Convert old format (with geometry nested) to new format\nfunction normalizeSnapshot(data: any): Snapshot | null {\n  // Already new format\n  if (data && data.version === 1 && Array.isArray(data.objects)) {\n    return data as Snapshot\n  }\n  \n  // Old format: objects have geometry nested\n  if (Array.isArray(data.objects)) {\n    const normalized: Snapshot = {\n      version: 1,\n      timestamp: data.timestamp || new Date().toISOString(),\n      unit: data.unit || 'cm',\n      bbox: data.boundingBoxCm || data.bbox || [-1, 8, 11, -1],\n      objects: []\n    }\n    \n    for (const o of data.objects) {\n      if (!o || !o.type || o.geometry === null) continue\n      \n      const g = o.geometry\n      if (!g) continue\n      \n      if (o.type === 'point' && g.x != null && g.y != null) {\n        normalized.objects.push({ \n          type: 'point', \n          id: o.id, \n          name: o.name || '', \n          properties: o.properties,\n          x: g.x, \n          y: g.y \n        })\n      } else if ((o.type === 'segment' || o.type === 'line') && g.x1 != null && g.y1 != null && g.x2 != null && g.y2 != null) {\n        normalized.objects.push({ \n          type: o.type, \n          id: o.id, \n          name: o.name || '', \n          properties: o.properties,\n          x1: g.x1, \n          y1: g.y1, \n          x2: g.x2, \n          y2: g.y2 \n        })\n      } else if (o.type === 'circle' && g.center && g.radius != null) {\n        normalized.objects.push({ \n          type: 'circle', \n          id: o.id, \n          name: o.name || '', \n          properties: o.properties,\n          center: g.center, \n          radius: g.radius \n        })\n      } else if (o.type === 'polygon' && Array.isArray(g.vertices) && g.vertices.length >= 3) {\n        normalized.objects.push({ \n          type: 'polygon', \n          id: o.id, \n          name: o.name || '', \n          properties: o.properties,\n          vertices: g.vertices \n        })\n      }\n    }\n    \n    if (data.meta) {\n      normalized.meta = data.meta\n    } else if (data.gridOption || data.rulerPosition || data.trianglePosition || data.protractorPosition) {\n      normalized.meta = {\n        gridOption: data.gridOption,\n        rulerPosition: data.rulerPosition,\n        trianglePosition: data.trianglePosition,\n        protractorPosition: data.protractorPosition,\n        rulerVisible: data.rulerVisible,\n        triangleVisible: data.triangleVisible,\n        protractorVisible: data.protractorVisible,\n        createdStack: data.createdStack\n      }\n    }\n    \n    return normalized\n  }\n  \n  return null\n}\n\n// Strict, whitelisted import. No DOM here.\nexport function importBoard(brd: JXG.Board, snapshot: any) {\n  const normalized = normalizeSnapshot(snapshot)\n  if (!normalized || normalized.version !== 1) {\n    throw new Error('Unsupported snapshot version or invalid format')\n  }\n  \n  const data = normalized\n\n  // Remove current (non-fixed) objects first\n  const remove: any[] = []\n  for (const k in brd.objects) {\n    const o: any = (brd.objects as any)[k]\n    if (!o?.visProp?.fixed) remove.push(o)\n  }\n  remove.forEach(o => {\n    try {\n      brd.removeObject(o)\n    } catch (e) {\n      console.warn('Failed to remove object:', e)\n    }\n  })\n\n  // Disable grid snapping during import\n  const prevSnapToGrid = JXG.Options?.point?.snapToGrid\n  const prevSnapX = JXG.Options?.point?.snapSizeX\n  const prevSnapY = JXG.Options?.point?.snapSizeY\n  if (JXG.Options?.point) {\n    JXG.Options.point.snapToGrid = false\n  }\n\n  try {\n    const pointMap = new Map<string, any>() // key: \"x:y\" -> point element\n    const HASH = 1e-5 // precision for point deduplication (0.00001 world units)\n\n    // Helper to generate point key\n    const keyOf = (x:number, y:number) => `${Math.round(x / HASH)}:${Math.round(y / HASH)}`\n\n    // Helper to find or create point (deduplication)\n    const findOrCreatePoint = (x:number, y:number, name?:string, props?:any): any => {\n      if (x == null || y == null || !isFinite(x) || !isFinite(y)) return null\n      const key = keyOf(x, y)\n      \n      // Check if point already exists at this location\n      if (pointMap.has(key)) {\n        const existing = pointMap.get(key)\n        if (existing && typeof existing.X === 'function') {\n          // Update name if provided and not empty\n          if (name && name.trim()) {\n            try {\n              existing.setAttribute({ name, withLabel: true })\n            } catch {}\n          }\n          return existing\n        }\n      }\n      \n      // Create new point\n      try {\n        const attrs: any = {\n          name: name || '',\n          withLabel: !!(name && name.trim()),\n          snapToGrid: false,\n          fixed: false,\n          size: 2,\n          strokeColor: '#444',\n          fillColor: '#666',\n          visible: true\n        }\n        \n        // Apply saved properties\n        if (props) {\n          if (props.strokeColor) attrs.strokeColor = props.strokeColor\n          if (props.fillColor) attrs.fillColor = props.fillColor\n          if (props.size !== undefined) attrs.size = props.size\n          if (props.fixed !== undefined) attrs.fixed = props.fixed\n        }\n        \n        const pt = brd.create('point', [x, y], attrs)\n        if (pt && typeof pt.X === 'function') {\n          pointMap.set(key, pt)\n          return pt\n        }\n      } catch (e) {\n        console.warn('Failed to create point:', e)\n      }\n      return null\n    }\n\n    const baseStyle = (kind:string, props?:any) => {\n      const base:any = { visible:true, snapToGrid: false }\n      if (kind==='segment') base.strokeWidth=2\n      if (kind==='line')    base.strokeWidth=1\n      if (kind==='circle')  base.strokeWidth=2\n      \n      // Apply saved properties\n      if (props) {\n        if (props.strokeColor) base.strokeColor = props.strokeColor\n        if (props.strokeWidth !== undefined) base.strokeWidth = props.strokeWidth\n        if (props.dash !== undefined) base.dash = props.dash\n        if (props.fillColor) base.fillColor = props.fillColor\n      }\n      \n      return base\n    }\n\n    // Process objects in order: points first, then shapes\n    const points = data.objects.filter(o => o.type === 'point')\n    const shapes = data.objects.filter(o => o.type !== 'point')\n\n    // Create all points first\n    for (const o of points) {\n      if (o.type === 'point') {\n        findOrCreatePoint(o.x, o.y, o.name, o.properties)\n      }\n    }\n\n    // Update board after creating points to ensure they're initialized\n    try {\n      brd.update()\n    } catch (e) {\n      console.warn('Board update after points failed:', e)\n    }\n\n    // Now create shapes (segments, lines, circles, polygons)\n    for (const o of shapes) {\n      try {\n        if (o.type === 'segment' || o.type === 'line') {\n          const p1 = findOrCreatePoint(o.x1, o.y1)\n          const p2 = findOrCreatePoint(o.x2, o.y2)\n          \n          if (!p1 || !p2) {\n            console.warn(`Skipping ${o.type}: invalid points at (${o.x1}, ${o.y1}), (${o.x2}, ${o.y2})`)\n            continue\n          }\n          \n          const el = brd.create(o.type, [p1, p2], baseStyle(o.type, o.properties))\n          if (!el) {\n            console.warn(`Failed to create ${o.type}`)\n            continue\n          }\n          \n          if (o.id) {\n            try { (el as any).id = o.id } catch {}\n          }\n          \n          if (o.name && o.name.trim() && 'setAttribute' in el) {\n            try {\n              el.setAttribute({ name: o.name, withLabel: true })\n            } catch {}\n          }\n        } else if (o.type === 'circle') {\n          const c = findOrCreatePoint(o.center.x, o.center.y)\n          \n          if (!c) {\n            console.warn('Skipping circle: invalid center')\n            continue\n          }\n          \n          // Create on-point for circle\n          const onX = o.center.x + o.radius\n          const onY = o.center.y\n          const on = brd.create('point', [onX, onY], {\n            visible: false,\n            fixed: true,\n            snapToGrid: false\n          })\n          \n          if (!on) {\n            console.warn('Skipping circle: failed to create on-point')\n            continue\n          }\n          \n          const el = brd.create('circle', [c, on], baseStyle('circle', o.properties))\n          if (!el) {\n            console.warn('Failed to create circle')\n            // Clean up on-point\n            try {\n              brd.removeObject(on)\n            } catch {}\n            continue\n          }\n          \n          if (o.id) {\n            try { (el as any).id = o.id } catch {}\n          }\n          \n          if (o.name && o.name.trim() && 'setAttribute' in el) {\n            try {\n              el.setAttribute({ name: o.name, withLabel: true })\n            } catch {}\n          }\n        } else if (o.type === 'polygon') {\n          const pts = o.vertices.map((v:any) => findOrCreatePoint(v.x, v.y)).filter(p => p !== null)\n          \n          if (pts.length < 3) {\n            console.warn('Skipping polygon: need at least 3 points, got', pts.length)\n            continue\n          }\n          \n          const el = brd.create('polygon', pts, baseStyle('polygon', o.properties))\n          if (!el) {\n            console.warn('Failed to create polygon')\n            continue\n          }\n          \n          if (o.id) {\n            try { (el as any).id = o.id } catch {}\n          }\n          \n          if (o.name && o.name.trim() && 'setAttribute' in el) {\n            try {\n              el.setAttribute({ name: o.name, withLabel: true })\n            } catch {}\n          }\n        }\n      } catch (e) {\n        console.warn('Failed to create object:', o, e)\n      }\n    }\n\n    // Final update to render everything\n    try {\n      brd.update()\n    } catch (e) {\n      console.error('Final board update failed:', e)\n    }\n  } finally {\n    // Restore global options\n    if (JXG.Options?.point) {\n      if (prevSnapToGrid !== undefined) JXG.Options.point.snapToGrid = prevSnapToGrid\n      if (prevSnapX !== undefined) JXG.Options.point.snapSizeX = prevSnapX\n      if (prevSnapY !== undefined) JXG.Options.point.snapSizeY = prevSnapY\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5348, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/file-io.ts"],"sourcesContent":["'use client'\n\n// lib/file-io.ts\n// Browser-only file I/O helpers (no DOM operations in board-serializer)\n\nexport async function readJsonFile<T=any>(file: File): Promise<T> {\n  const text = await file.text()\n  return JSON.parse(text) as T\n}\n\nexport function downloadJson(filename: string, data: unknown) {\n  const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' })\n  const url = URL.createObjectURL(blob)\n  const a = document.createElement('a')\n  a.href = url\n  a.download = filename\n  a.click()\n  URL.revokeObjectURL(url)\n}\n\n"],"names":[],"mappings":";;;;;;AAAA;AAKO,eAAe,aAAoB,IAAU;IAClD,MAAM,OAAO,MAAM,KAAK,IAAI;IAC5B,OAAO,KAAK,KAAK,CAAC;AACpB;AAEO,SAAS,aAAa,QAAgB,EAAE,IAAa;IAC1D,MAAM,OAAO,IAAI,KAAK;QAAC,KAAK,SAAS,CAAC,MAAM,MAAM;KAAG,EAAE;QAAE,MAAM;IAAmB;IAClF,MAAM,MAAM,IAAI,eAAe,CAAC;IAChC,MAAM,IAAI,SAAS,aAAa,CAAC;IACjC,EAAE,IAAI,GAAG;IACT,EAAE,QAAQ,GAAG;IACb,EAAE,KAAK;IACP,IAAI,eAAe,CAAC;AACtB","debugId":null}},
    {"offset": {"line": 5379, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/select-objects-tool.ts"],"sourcesContent":["import { JBoard } from './board-manager'\nimport { UndoRedoManager, ModifyOp, BundleOp } from './undo-redo'\n\ntype JEl = any;\n\nfunction dist2(a: { x: number, y: number }, b: { x: number, y: number }) {\n  return (a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y)\n}\n\nexport default class SelectObjectsTool {\n  private board: JBoard\n  private onFeedback?: ((msg: string) => void) | undefined\n  private undoRedo?: UndoRedoManager | undefined\n\n  // Handlers\n  private onDown?: ((e: any) => void) | undefined\n  private onMove?: ((e: any) => void) | undefined\n  private onUp?: ((e: any) => void) | undefined\n  private onKey?: ((e: KeyboardEvent) => void) | undefined\n\n  // Hover & click-cycle\n  private hoverObj: JEl | null = null\n  private cycleCandidates: JEl[] = []\n  private cycleIndex = 0\n  private lastClickWorld = { x: 0, y: 0 }\n  private lastClickWasCycle = false\n\n  // Selection\n  private selected = new Set<JEl>()\n  private savedStyle = new Map<JEl, Partial<any>>()\n\n  // Marquee\n  private dragging = false\n  private dragStartWorld: { x: number, y: number } | null = null\n  private marqueeCurve: any | null = null\n  private selectionHelperIds = new Set<string>()\n\n  private isGroupDragging = false;\n  private dragStartPointer: { x: number; y: number } | null = null;\n  private dragStartObjPositions: Map<JEl, any> = new Map();\n  private dragTargetObj: JEl | null = null;\n\n  constructor(board: JBoard, onFeedback?: (msg: string) => void, undoRedo?: UndoRedoManager) {\n    this.board = board\n    this.onFeedback = onFeedback\n    this.undoRedo = undoRedo\n  }\n\n  activate() {\n    if (this.onDown) return;\n    this.onDown = this.handleDown;\n    this.onMove = this.handleMove;\n    this.onUp = this.handleUp;\n    this.board.on('down', this.onDown as (e:any)=>void);\n    this.board.on('move', this.onMove as (e:any)=>void);\n    this.board.on('up', this.onUp as (e:any)=>void);\n\n    // 🔒 Kill native selection / drag on the container (Safari-friendly)\n    const el = (this.board as any).containerObj as HTMLElement | undefined;\n    if (el) {\n      el.style.cursor = 'default';\n      el.style.userSelect = 'none';\n      (el.style as any).webkitUserSelect = 'none';\n      (el.style as any).msUserSelect = 'none';\n      el.style.touchAction = 'none';\n      (el.style as any).webkitUserDrag = 'none';\n      el.setAttribute('draggable', 'false');\n    }\n\n    this.onKey = this.handleKey;\n    window.addEventListener('keydown', this.onKey as EventListener, { capture: true });\n  }\n\n  deactivate() {\n    if (this.onDown) this.board.off('down', this.onDown as (e:any)=>void)\n    if (this.onMove) this.board.off('move', this.onMove as (e:any)=>void)\n    if (this.onUp) this.board.off('up', this.onUp as (e:any)=>void)\n    this.onDown = this.onMove = this.onUp = undefined\n    if (this.onKey) window.removeEventListener('keydown', this.onKey as EventListener, { capture: true })\n    this.clearSelection()\n    this.clearHover()\n    this.destroyMarquee()\n    if ((this.board as any).containerObj) {\n      (this.board as any).containerObj.style.cursor = ''\n    }\n  }\n\n  /**\n   * Identify grid lines created by GridManager regardless of stroke width.\n   * Matches exact properties set in GridManager: layer 0, fixed, no label/infobox, not draggable.\n   */\n  private isGridLine(obj: any): boolean {\n    if (!obj) return false\n    // Prefer authoritative ID-based check written by GridManager\n    try {\n      const gridIds: Set<string> | undefined = (this.board as any).__gridIds\n      if (gridIds && gridIds.has(((obj as any).id as string))) return true\n    } catch {}\n    // Fallback: property-based detection\n    if (obj.elType !== 'line') return false\n    const vp: any = (obj as any).visProp || {}\n    if (vp.layer !== 0) return false\n    if (vp.fixed !== true) return false\n    if (vp.withLabel !== false) return false\n    if (vp.showInfobox !== false) return false\n    if (vp.draggable !== false) return false\n    return true\n  }\n\n  /** Return true if object is user-selectable (not a grid line or selection helper). */\n  private isSelectableObject(obj: any): boolean {\n    if (!obj || obj.visProp?.visible === false) return false\n    try { if (this.selectionHelperIds.has(((obj as any).id as string))) return false } catch {}\n    if (this.isGridLine(obj)) return false\n    return true\n  }\n\n  // -----------------------\n  // Core interaction\n  // -----------------------\n  private handleMove = (e: any) => {\n    // When dragging marquee, always block native behavior\n    if (this.dragging) {\n      if (e?.ev) { e.ev.preventDefault?.(); e.ev.stopPropagation?.(); }\n      this.updateMarquee(e);\n      return;\n    }\n    // Group dragging block\n    if (this.isGroupDragging && this.dragStartPointer) {\n      if (e?.ev) { e.ev.preventDefault?.(); e.ev.stopPropagation?.(); }\n      const pointer = this.toWorld(e);\n      const dx = pointer.x - this.dragStartPointer.x;\n      const dy = pointer.y - this.dragStartPointer.y;\n      for (const obj of this.selected) {\n        if (obj.visProp?.fixed) continue;\n        const start = this.dragStartObjPositions.get(obj);\n        switch (obj.elType) {\n          case 'point':\n            if (start) obj.moveTo([start.x + dx, start.y + dy]);\n            break;\n          case 'line':\n          case 'segment':\n            if (start && obj.points && obj.points.length === start.length) {\n              obj.points.forEach((pt:any, idx:number) => {\n                pt.moveTo([start[idx].x + dx, start[idx].y + dy]);\n              });\n            }\n            break;\n          case 'circle':\n            if (start && obj.center?.moveTo) {\n              obj.center.moveTo([start.center.x + dx, start.center.y + dy]);\n            }\n            break;\n          case 'polygon':\n            if (start && obj.vertices && obj.vertices.length === start.length) {\n              obj.vertices.forEach((pt:any, idx:number) => {\n                pt.moveTo([start[idx].x + dx, start[idx].y + dy]);\n              });\n            }\n            break;\n          default:\n            if (start && obj.moveTo) obj.moveTo([start.x + dx, start.y + dy]);\n        }\n      }\n      this.board.update();\n      return;\n    }\n    // Hover highlight\n    const under = this.getUnderMouse(e);\n    const top = under[0] || null;\n    this.setHover(top);\n  };\n\n  private handleDown = (e: any) => {\n    // 🚫 stop native selection right away\n    if (e?.ev) { e.ev.preventDefault?.(); e.ev.stopPropagation?.(); }\n\n    const under = this.getUnderMouse(e);\n    const world = this.toWorld(e);\n\n    // --- check for marquee init as before ---\n    if (under.length) {\n      // Drag start on a selected object: prep group drag\n      const top = under[0];\n      if (this.selected.has(top) && !top.visProp?.fixed) {\n        this.isGroupDragging = true;\n        this.dragStartPointer = { ...world };\n        this.dragTargetObj = top;\n        // Record each selected's initial world position(s)\n        this.dragStartObjPositions.clear();\n        // Collect all point IDs that will be moved, so we can clear their pending moves\n        const pointIdsToClear: string[] = [];\n        for (const obj of this.selected) {\n          switch (obj.elType) {\n            case 'point':\n              this.dragStartObjPositions.set(obj, { x: obj.X(), y: obj.Y() });\n              if (obj.id) pointIdsToClear.push(obj.id);\n              break;\n            case 'line':\n            case 'segment':\n              // PATCH: Only if points exists and is array\n              if (Array.isArray(obj.points)) {\n                this.dragStartObjPositions.set(obj, obj.points.map((pt:any) => {\n                  if (pt && pt.id) pointIdsToClear.push(pt.id);\n                  return { x: pt.X(), y: pt.Y() };\n                }));\n              }\n              break;\n            case 'circle':\n              {\n                const onPt: any = (obj as any).point2 || (obj as any).points?.[1]\n                const centerPos = { x: obj.center.X(), y: obj.center.Y() };\n                const radiusPtPos = onPt && typeof onPt.X === 'function' && typeof onPt.Y === 'function'\n                  ? { x: onPt.X(), y: onPt.Y() }\n                  : null;\n                if (obj.center && obj.center.id) pointIdsToClear.push(obj.center.id);\n                if (onPt && onPt.id) pointIdsToClear.push(onPt.id);\n                this.dragStartObjPositions.set(obj, {\n                  center: centerPos,\n                  radiusPoint: radiusPtPos,\n                  radius: (typeof obj.R === 'function')\n                    ? obj.R()\n                    : (radiusPtPos ? Math.hypot(radiusPtPos.x - centerPos.x, radiusPtPos.y - centerPos.y) : undefined)\n                });\n              }\n              break;\n            case 'polygon':\n              this.dragStartObjPositions.set(obj, obj.vertices.map((pt:any) => {\n                if (pt && pt.id) pointIdsToClear.push(pt.id);\n                return { x: pt.X(), y: pt.Y() };\n              }));\n              break;\n            default:\n              // Fallback: try to record all .X(), .Y() if any\n              if (obj.X && obj.Y) {\n                this.dragStartObjPositions.set(obj, { x: obj.X(), y: obj.Y() });\n                if (obj.id) pointIdsToClear.push(obj.id);\n              }\n          }\n        }\n        // Mark all points as being group-dragged and clear their pending moves\n        // This prevents individual point tracking from creating separate undo operations\n        if (this.undoRedo && pointIdsToClear.length > 0) {\n          this.undoRedo.markPointsForGroupDrag(pointIdsToClear);\n          this.undoRedo.setSuppressShapeTracking(true);\n        }\n        // PREVENT DEFAULT: don't allow picked object's drag\n        if (e?.ev) { e.ev.preventDefault?.(); e.ev.stopPropagation?.(); }\n        return;\n      }\n      // ... normal select/cycle/additive ...\n      const sameSpot = dist2(world, this.lastClickWorld) < 1e-6;\n      if (!sameSpot) {\n        this.cycleCandidates = this.sortByPreference(under);\n        this.cycleIndex = 0;\n      }\n      const candidate = this.cycleCandidates[this.cycleIndex] ?? this.sortByPreference(under)[0];\n      const additive = e?.ev?.shiftKey || e?.ev?.metaKey || e?.ev?.ctrlKey;\n      if (additive) {\n        this.toggleSelect(candidate);\n      } else {\n        if (sameSpot) {\n          this.cycleIndex = (this.cycleIndex + 1) % this.cycleCandidates.length;\n        }\n        const chosen = sameSpot ? this.cycleCandidates[this.cycleIndex] : candidate;\n        this.replaceSelectionWith(chosen);\n      }\n      this.lastClickWorld = world;\n      this.lastClickWasCycle = true;\n      this.board.update();\n      return;\n    } else {\n      // If blank space and not already dragging marquee, clear selection\n      if (!this.dragging && !this.isGroupDragging) {\n        this.clearSelection();\n        this.board.update(); // ensure immediate deselect\n      }\n      // Empty space -> start marquee\n      this.lastClickWasCycle = false;\n      this.dragging = true;\n      this.dragStartWorld = world;\n      this.createMarquee(world);\n\n      // extra safety for Safari holding click-and-drag\n      if (e?.ev) { e.ev.preventDefault?.(); e.ev.stopPropagation?.(); }\n    }\n  };\n\n  private handleUp = (e: any) => {\n    // End group drag if active\n    if (this.isGroupDragging) {\n      // Collect all moved points and create undo operation\n      if (this.undoRedo && this.dragStartObjPositions.size > 0) {\n        const movedPoints = new Map<any, { before: { x: number; y: number; name: string }, after: { x: number; y: number; name: string } }>();\n        \n        // Collect all points that were moved\n        for (const obj of this.selected) {\n          if (obj.visProp?.fixed) continue;\n          \n          const startPos = this.dragStartObjPositions.get(obj);\n          if (!startPos) continue;\n          \n          const posOf = (pt: any) => ({\n            x: pt.X(),\n            y: pt.Y(),\n            name: (pt as any)._rawName || (pt as any).getName?.() || ''\n          });\n          \n          switch (obj.elType) {\n            case 'point':\n              {\n                const before = { x: startPos.x, y: startPos.y, name: posOf(obj).name };\n                const after = posOf(obj);\n                // Only record if actually moved\n                if (Math.abs(before.x - after.x) > 0.001 || Math.abs(before.y - after.y) > 0.001 || before.name !== after.name) {\n                  movedPoints.set(obj.id, { before, after });\n                }\n              }\n              break;\n            case 'line':\n            case 'segment':\n              if (Array.isArray(obj.points) && Array.isArray(startPos)) {\n                obj.points.forEach((pt: any, idx: number) => {\n                  if (!pt || !pt.id) return;\n                  const before = { x: startPos[idx].x, y: startPos[idx].y, name: posOf(pt).name };\n                  const after = posOf(pt);\n                  if (Math.abs(before.x - after.x) > 0.001 || Math.abs(before.y - after.y) > 0.001 || before.name !== after.name) {\n                    movedPoints.set(pt.id, { before, after });\n                  }\n                });\n              }\n              break;\n            case 'circle':\n              {\n                const center = obj.center;\n                if (center && center.id && startPos.center) {\n                  const before = { x: startPos.center.x, y: startPos.center.y, name: posOf(center).name };\n                  const after = posOf(center);\n                  if (Math.abs(before.x - after.x) > 0.001 || Math.abs(before.y - after.y) > 0.001 || before.name !== after.name) {\n                    movedPoints.set(center.id, { before, after });\n                  }\n                }\n                // Also check radius point if it exists\n                const radiusPt: any = (obj as any).point2 || (obj as any).points?.[1];\n                if (radiusPt && radiusPt.id && startPos.radiusPoint) {\n                  const before = { \n                    x: startPos.radiusPoint.x, \n                    y: startPos.radiusPoint.y, \n                    name: posOf(radiusPt).name \n                  };\n                  const after = posOf(radiusPt);\n                  if (Math.abs(before.x - after.x) > 0.001 || Math.abs(before.y - after.y) > 0.001 || before.name !== after.name) {\n                    movedPoints.set(radiusPt.id, { before, after });\n                  }\n                }\n              }\n              break;\n            case 'polygon':\n              if (Array.isArray(obj.vertices) && Array.isArray(startPos)) {\n                obj.vertices.forEach((pt: any, idx: number) => {\n                  if (!pt || !pt.id) return;\n                  const before = { x: startPos[idx].x, y: startPos[idx].y, name: posOf(pt).name };\n                  const after = posOf(pt);\n                  if (Math.abs(before.x - after.x) > 0.001 || Math.abs(before.y - after.y) > 0.001 || before.name !== after.name) {\n                    movedPoints.set(pt.id, { before, after });\n                  }\n                });\n              }\n              break;\n            default:\n              if (obj.X && obj.Y && obj.id && startPos.x !== undefined && startPos.y !== undefined) {\n                const before = { x: startPos.x, y: startPos.y, name: posOf(obj).name };\n                const after = posOf(obj);\n                if (Math.abs(before.x - after.x) > 0.001 || Math.abs(before.y - after.y) > 0.001 || before.name !== after.name) {\n                  movedPoints.set(obj.id, { before, after });\n                }\n              }\n          }\n        }\n        \n        // Create bundle operation if there are multiple moves, or single operation if only one\n        // Suppress tracking during this operation to prevent duplicate entries\n        if (movedPoints.size > 0 && this.undoRedo) {\n          const undoRedo = this.undoRedo; // Store in local variable for closure\n          const pointIdsMoved = Array.from(movedPoints.keys());\n          \n          // Unmark points from group drag tracking before creating the operation\n          undoRedo.unmarkPointsForGroupDrag(pointIdsMoved);\n          \n          undoRedo.suppressTrackingDuring(() => {\n            const ops: ModifyOp[] = [];\n            movedPoints.forEach(({ before, after }, pointId) => {\n              ops.push({\n                kind: 'modify',\n                pointId,\n                before,\n                after\n              });\n            });\n            \n            if (ops.length === 1 && ops[0]) {\n              undoRedo.pushOperation(ops[0]);\n            } else if (ops.length > 1) {\n              undoRedo.pushOperation({ kind: 'bundle', ops } as BundleOp);\n            }\n          });\n        } else if (this.undoRedo) {\n          // Even if no points moved, unmark them to clean up\n          const pointIdsToUnmark: string[] = [];\n          for (const obj of this.selected) {\n            if (obj.visProp?.fixed) continue;\n            const collectPointIds = (pts: any[]) => {\n              if (Array.isArray(pts)) {\n                pts.forEach((pt: any) => {\n                  if (pt && pt.id) pointIdsToUnmark.push(pt.id);\n                });\n              }\n            };\n            switch (obj.elType) {\n              case 'point':\n                if (obj.id) pointIdsToUnmark.push(obj.id);\n                break;\n              case 'line':\n              case 'segment':\n                collectPointIds(obj.points);\n                break;\n              case 'circle':\n                if (obj.center && obj.center.id) pointIdsToUnmark.push(obj.center.id);\n                const onPt: any = (obj as any).point2 || (obj as any).points?.[1];\n                if (onPt && onPt.id) pointIdsToUnmark.push(onPt.id);\n                break;\n              case 'polygon':\n                collectPointIds(obj.vertices);\n                break;\n            }\n          }\n          if (pointIdsToUnmark.length > 0) {\n            this.undoRedo.unmarkPointsForGroupDrag(pointIdsToUnmark);\n          }\n        }\n      }\n      \n      // Always turn off shape tracking suppression when ending group drag\n      if (this.undoRedo) {\n        this.undoRedo.setSuppressShapeTracking(false);\n      }\n      \n      this.isGroupDragging = false;\n      this.dragTargetObj = null;\n      this.dragStartPointer = null;\n      this.dragStartObjPositions.clear();\n      return;\n    }\n    if (!this.dragging) {\n      // If we released without dragging and didn't cycle-select anything, clear selection\n      if (!this.lastClickWasCycle && !(e?.ev?.shiftKey || e?.ev?.metaKey || e?.ev?.ctrlKey)) {\n        // Selection was already cleared in handleDown for empty space\n        this.onFeedback?.('');\n      }\n      return;\n    }\n    this.dragging = false;\n    const chosen = this.objectsInMarquee();\n    this.destroyMarquee();\n    if (chosen.length) {\n      const additive = e?.ev?.shiftKey || e?.ev?.metaKey || e?.ev?.ctrlKey;\n      if (!additive) this.clearSelection();\n      chosen.forEach(o => this.addToSelection(o));\n      this.onFeedback?.(`${this.selected.size} objekt(y) vybrány`);\n    } else {\n      // No objects in marquee - clear selection\n      this.clearSelection();\n      this.onFeedback?.('');\n    }\n    this.board.update();\n  };\n\n  private handleKey = (e: KeyboardEvent) => {\n    if (e.key === 'Backspace' || e.key === 'Delete') {\n      if (!this.selected.size) return\n      Array.from(this.selected).forEach(o => {\n        try { o.remove?.() } catch { }\n      })\n      this.selected.clear()\n      this.board.update()\n      e.preventDefault()\n    }\n  }\n\n  // -----------------------\n  // Hover logic\n  // -----------------------\n  private setHover(obj: JEl | null) {\n    if (obj === this.hoverObj) return\n    if (this.hoverObj) this.setTempHighlight(this.hoverObj, false)\n    this.hoverObj = obj\n    if (obj) this.setTempHighlight(obj, true)\n    this.board.update()\n  }\n\n  private clearHover() { this.setHover(null) }\n\n  // -----------------------\n  // Selection logic\n  // -----------------------\n  private replaceSelectionWith(obj: JEl) {\n    this.clearSelection()\n    this.addToSelection(obj)\n    this.onFeedback?.('Objekt vybrán')\n  }\n\n  private toggleSelect(obj: JEl) {\n    if (this.selected.has(obj)) {\n      this.removeFromSelection(obj)\n    } else {\n      this.addToSelection(obj)\n    }\n    this.onFeedback?.(`${this.selected.size} vybráno`)\n  }\n\n  private addToSelection(obj: JEl) {\n    if (this.selected.has(obj)) return\n    this.selected.add(obj)\n    if (!this.savedStyle.has(obj)) {\n      const vp = (obj as any).visProp ?? {}\n      this.savedStyle.set(obj, {\n        strokeColor: vp.strokeColor,\n        strokeWidth: vp.strokeWidth,\n        fillColor: vp.fillColor,\n        fillOpacity: vp.fillOpacity,\n        highlight: vp.highlight,\n        size: vp.size // Save point size for restoration\n      })\n    }\n    this.applySelectedStyle(obj, true)\n  }\n\n  private removeFromSelection(obj: JEl) {\n    if (!this.selected.has(obj)) return\n    this.applySelectedStyle(obj, false)\n    this.selected.delete(obj)\n  }\n\n  private clearSelection() {\n    this.selected.forEach(o => this.applySelectedStyle(o, false))\n    this.selected.clear()\n    this.board.update(); // ensure deselection happens instantly\n  }\n\n  private applySelectedStyle(obj: JEl, on: boolean) {\n    const saved = this.savedStyle.get(obj)\n    const vp = (obj as any).visProp ?? {}\n    \n    if (typeof obj.setProperty === 'function') {\n      if (on) {\n        // For points: enlarge them\n        if (obj.elType === 'point') {\n          const originalSize = (saved as any)?.size ?? vp.size ?? 2\n          obj.setProperty({\n            highlight: true,\n            size: Math.max(originalSize * 1.8, 4) // Enlarge point by 80% or minimum 4\n          })\n        } else {\n          // For other objects: keep original color, increase stroke width slightly, add highlight\n          const originalStrokeWidth = (saved as any)?.strokeWidth ?? vp.strokeWidth ?? 1\n          obj.setProperty({\n            highlight: true,\n            strokeWidth: Math.max(originalStrokeWidth * 1.5, originalStrokeWidth + 1)\n          })\n        }\n      } else {\n        // Restore original style\n        obj.setProperty({\n          strokeColor: (saved as any)?.strokeColor ?? vp.strokeColor,\n          strokeWidth: (saved as any)?.strokeWidth ?? vp.strokeWidth,\n          fillColor: (saved as any)?.fillColor ?? vp.fillColor,\n          fillOpacity: (saved as any)?.fillOpacity ?? vp.fillOpacity,\n          highlight: false,\n          size: (saved as any)?.size ?? vp.size\n        })\n      }\n    } else if ((obj as any).visProp) {\n      if (on) {\n        if (obj.elType === 'point') {\n          // Enlarge point\n          const originalSize = (saved as any)?.size ?? vp.size ?? 2\n          ;(obj as any).visProp.highlight = true\n          ;(obj as any).visProp.size = Math.max(originalSize * 1.8, 4)\n        } else {\n          // Keep original color, increase stroke width slightly, add highlight\n          const originalStrokeWidth = (saved as any)?.strokeWidth ?? vp.strokeWidth ?? 1\n          ;(obj as any).visProp.highlight = true\n          ;(obj as any).visProp.strokeWidth = Math.max(originalStrokeWidth * 1.5, originalStrokeWidth + 1)\n        }\n      } else {\n        // Restore original style\n        const objVp = (obj as any).visProp\n        objVp.strokeColor = (saved as any)?.strokeColor ?? objVp.strokeColor\n        objVp.strokeWidth = (saved as any)?.strokeWidth ?? objVp.strokeWidth\n        objVp.fillColor = (saved as any)?.fillColor ?? objVp.fillColor\n        objVp.fillOpacity = (saved as any)?.fillOpacity ?? objVp.fillOpacity\n        objVp.highlight = false\n        objVp.size = (saved as any)?.size ?? objVp.size\n      }\n      obj.update?.()\n    }\n  }\n\n  private setTempHighlight(obj: JEl, on: boolean) {\n    if (this.selected.has(obj)) return\n    if (typeof obj.setProperty === 'function') {\n      obj.setProperty(on ? { highlight: true } : { highlight: false })\n    } else if ((obj as any).visProp) {\n      (obj as any).visProp.highlight = !!on\n      obj.update?.()\n    }\n  }\n\n  // -----------------------\n  // Marquee helpers\n  // -----------------------\n  private createMarquee(start: { x: number, y: number }) {\n    const data = { x1: start.x, y1: start.y, x2: start.x, y2: start.y };\n    (this as any)._marqueeData = data;\n\n    // Create 4 corner points for the rectangle\n    const p1 = this.board.create('point', [() => data.x1, () => data.y1], {\n      visible: false,\n      fixed: true,\n      withLabel: false\n    });\n    try { this.selectionHelperIds.add((p1 as any).id as string) } catch {}\n    const p2 = this.board.create('point', [() => data.x2, () => data.y1], {\n      visible: false,\n      fixed: true,\n      withLabel: false\n    });\n    try { this.selectionHelperIds.add((p2 as any).id as string) } catch {}\n    const p3 = this.board.create('point', [() => data.x2, () => data.y2], {\n      visible: false,\n      fixed: true,\n      withLabel: false\n    });\n    try { this.selectionHelperIds.add((p3 as any).id as string) } catch {}\n    const p4 = this.board.create('point', [() => data.x1, () => data.y2], {\n      visible: false,\n      fixed: true,\n      withLabel: false\n    });\n    try { this.selectionHelperIds.add((p4 as any).id as string) } catch {}\n\n    // Create polygon from the 4 points - GeoGebra style (purple/blue with low opacity)\n    this.marqueeCurve = this.board.create('polygon', [p1, p2, p3, p4], {\n      strokeColor: '#7c3aed',  // Purple color like GeoGebra\n      strokeWidth: 2,\n      dash: 1,\n      fillColor: '#c4b5fd',    // Light purple fill\n      fillOpacity: 0.2,\n      highlight: false,\n      fixed: true,\n      layer: 100,\n      borders: {\n        strokeColor: '#7c3aed',\n        strokeWidth: 2,\n        dash: 1\n      }\n    });\n    try { this.selectionHelperIds.add(((this.marqueeCurve as any).id as string)) } catch {}\n\n    // Store the corner points for cleanup\n    (this.marqueeCurve as any)._marqueePoints = [p1, p2, p3, p4];\n\n    try {\n      (this.marqueeCurve as any)._noHighlight = true;\n      const vp = (this.marqueeCurve as any).visProp || ((this.marqueeCurve as any).visProp = {});\n      (vp as any).pointerEvents = 'none';\n      const node = (this.marqueeCurve as any).rendNode;\n      if (node) {\n        node.style.pointerEvents = 'none';\n      }\n    } catch {}\n    try { (this.board as any).containerObj.style.cursor = 'crosshair' } catch {}\n    this.board.update();\n  }\n\n  private updateMarquee(e: any) {\n    if (!this.marqueeCurve || !this.dragStartWorld) return;\n    const p = this.toWorld(e);\n    const d = (this as any)._marqueeData;\n    if (!d) return;\n    d.x2 = p.x; \n    d.y2 = p.y;\n\n    this.board.update();\n  }\n\n  private destroyMarquee() {\n    if (this.marqueeCurve) {\n      try { \n        // Remove the corner points first\n        const points = (this.marqueeCurve as any)._marqueePoints;\n        if (points && Array.isArray(points)) {\n          points.forEach((pt: any) => {\n            try { this.board.removeObject(pt) } catch {}\n          });\n        }\n        // Then remove the polygon\n        this.board.removeObject(this.marqueeCurve);\n      } catch {}\n      this.marqueeCurve = null;\n    }\n    ;(this as any)._marqueeData = null;\n    // Restore pointer\n    try {(this.board as any).containerObj.style.cursor = 'default'} catch {}\n  }\n\n  private objectsInMarquee(): JEl[] {\n    // Get box data from the Tool class instance, not the polygon\n    const d = (this as any)._marqueeData;\n    if (!this.marqueeCurve || !d) return [];\n    const minx = Math.min(d.x1, d.x2), maxx = Math.max(d.x1, d.x2);\n    const miny = Math.min(d.y1, d.y2), maxy = Math.max(d.y1, d.y2);\n    const objs = Object.values(this.board.objects) as JEl[];\n    const inside: JEl[] = [];\n\n    for (const o of objs) {\n      if (!this.isSelectableObject(o)) continue;\n      if (o.elType === 'point') {\n        const x = o.X(), y = o.Y();\n        if (x >= minx && x <= maxx && y >= miny && y <= maxy) inside.push(o);\n      } else if (o.elType === 'segment' || o.elType === 'line' || o.elType === 'circle' || o.elType === 'polygon') {\n        const bb = (o as any).bounds && (o as any).bounds();\n        if (bb) {\n          const [lx, ux, ly, uy] = bb;\n          if (ux >= minx && lx <= maxx && uy >= miny && ly <= maxy) inside.push(o);\n        } else {\n          inside.push(o);\n        }\n      }\n    }\n    return this.sortByPreference(inside);\n  }\n\n  // -----------------------\n  // Utilities\n  // -----------------------\n  private getUnderMouse(e: any): JEl[] {\n    const arr = this.board.getAllObjectsUnderMouse(e) as JEl[]\n    return this.sortByPreference(arr.filter(o => this.isSelectableObject(o)))\n  }\n\n  private sortByPreference(arr: JEl[]): JEl[] {\n    const rank = (o: JEl) => {\n      if (o.elType === 'point' && !o.visProp?.fixed) return 0\n      if (o.elType === 'segment') return 1\n      if (o.elType === 'line') return 2\n      if (o.elType === 'circle') return 3\n      return 4\n    }\n    return [...arr].sort((a, b) => rank(a) - rank(b))\n  }\n\n  private toWorld(e: any) {\n    // Preferred: use JSXGraph's helper with event\n    if (typeof (this.board as any).getUsrCoordsOfMouse === 'function') {\n      const coords = (this.board as any).getUsrCoordsOfMouse(e?.ev ?? e);\n      return { x: coords[0] ?? 0, y: coords[1] ?? 0 };\n    }\n    // Fallback: canvasToXS/YS with clientX/clientY\n    if (typeof (this.board as any).canvasToXS === 'function' &&\n        typeof (this.board as any).canvasToYS === 'function') {\n      const c = (this.board as any).getCoordsTopLeftCorner(e?.ev ?? e);\n      const ev = e?.ev ?? e;\n      const absX = ev?.clientX - c[0];\n      const absY = ev?.clientY - c[1];\n      return {\n        x: (this.board as any).canvasToXS(absX),\n        y: (this.board as any).canvasToYS(absY)\n      };\n    }\n    return { x: 0, y: 0 };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6322, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/GeneralGeometryTester.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect, useRef, useState, useCallback } from 'react'\nimport JXG from 'jsxgraph'\nimport { Save, Trash2, Circle, Pencil, RotateCcw, RotateCw, Eraser, Ruler, Triangle, Gauge, ZoomIn, ZoomOut, Download, Upload, Info, Settings, ChevronUp, Keyboard } from 'lucide-react'\nimport DraggableRuler from './DraggableRuler'\nimport DraggableTriangle from './DraggableTriangle'\nimport DraggableProtractor from './DraggableProtractor'\nimport { UndoRedoManager } from '../../lib/undo-redo'\nimport { GridMode } from '../../lib/grid-manager'\nimport { BoardManager, JBoard } from '../../lib/board-manager'\nimport { GeometryFactory } from '../../lib/geometry-factory'\nimport { SelectionManager } from '../../lib/selection-manager'\nimport { RenameManager } from '../../lib/rename-manager'\nimport { WORLD_PER_MM, WORLD_PER_CM } from '../../lib/measurement-scale'\nimport { UNIT_LABEL } from '../../lib/measurement-scale'\nimport { calculateCenteredBoundingBoxCm } from '../../lib/measurement-scale'\nimport { exportBoard, importBoard, type Snapshot } from '../../lib/board-serializer'\nimport { readJsonFile, downloadJson } from '../../lib/file-io'\nimport SelectObjectsTool from '../../lib/select-objects-tool'\n\nconst EPS = 0.05\n\nfunction dist(a: {x:number,y:number}, b:{x:number,y:number}) {\n  return Math.hypot(a.x - b.x, a.y - b.y)\n}\n\n// Helper function to snap coordinates to grid (with optional soft snapping)\nfunction snapToGrid(x: number, y: number, gridOption: GridMode, softSnap: boolean = false): {x: number, y: number} {\n  if (gridOption === 'none') return { x, y }\n  \n  let snapSize = WORLD_PER_MM // default fine snap = 1 mm\n  \n  // Fine-tuned snap sizes for smoother placement\n  if (gridOption === 'major' || gridOption === 'major-minor') {\n    snapSize = WORLD_PER_CM // snap to 1 cm for major\n  } else if (gridOption === 'minor') {\n    snapSize = WORLD_PER_MM // 1 mm\n  } else if (gridOption === 'dot') {\n    snapSize = WORLD_PER_MM\n  }\n  \n  // Soft snap: only snap if close to grid line (within 30% of snap size)\n  if (softSnap) {\n    const snappedX = Math.round(x / snapSize) * snapSize\n    const snappedY = Math.round(y / snapSize) * snapSize\n    const threshold = snapSize * 0.3\n    \n    const distX = Math.abs(x - snappedX)\n    const distY = Math.abs(y - snappedY)\n    \n    return {\n      x: distX < threshold ? snappedX : x,\n      y: distY < threshold ? snappedY : y\n    }\n  }\n  \n  return {\n    x: Math.round(x / snapSize) * snapSize,\n    y: Math.round(y / snapSize) * snapSize\n  }\n}\n\nfunction coordsOfPoint(p: any) { return { x: p.X(), y: p.Y() } }\n\nexport default function GeneralGeometryTester() {\n  const boardManagerRef = useRef<BoardManager | null>(null)\n  const containerRef = useRef<HTMLDivElement | null>(null)\n  const undoRedoRef = useRef<UndoRedoManager | null>(null)\n  const geometryFactoryRef = useRef<GeometryFactory | null>(null)\n  const selectionManagerRef = useRef<SelectionManager | null>(null)\n  const selectToolRef = useRef<SelectObjectsTool | null>(null)\n\n  const [tool, setTool] = useState<'mouse'|'select'|'point'|'segment'|'line'|'circle'|'rubber'>('mouse')\n  const [feedback, setFeedback] = useState('')\n  const [data, setData] = useState<any>(null)\n  const [createdStack, setCreatedStack] = useState<string[]>([])\n  const [showHelp, setShowHelp] = useState(false)\n  const [constructionHistory, setConstructionHistory] = useState<any[]>([])\n  \n  // Physical tools state\n  const [rulerVisible, setRulerVisible] = useState(false)\n  const [triangleVisible, setTriangleVisible] = useState(false)\n  const [protractorVisible, setProtractorVisible] = useState(false)\n  const [rulerPosition, setRulerPosition] = useState({ x: 0, y: 0, rotation: 0, length: 6 })\n  const [trianglePosition, setTrianglePosition] = useState({ x: 0, y: 0, rotation: 0, size: 3 })\n  const [protractorPosition, setProtractorPosition] = useState({ x: -2, y: 0, rotation: 0, size: 3 })\n  const [activeTool, setActiveTool] = useState<'ruler' | 'triangle' | 'protractor' | null>(null)\n  const [uiBusy, setUiBusy] = useState(false)\n  \n  // Point naming state\n  const [renameMode, setRenameMode] = useState(false)\n  const [selectedPointId, setSelectedPointId] = useState<string|null>(null)\n  \n  // Grid settings state\n  const [showSettings, setShowSettings] = useState(false)\n  const [gridOption, setGridOption] = useState<GridMode>('major')\n  const [canUndoState, setCanUndoState] = useState(false)\n  const [canRedoState, setCanRedoState] = useState(false)\n  const [autoSaveEnabled, setAutoSaveEnabled] = useState(true)\n\n  const toolRef = useRef(tool)\n  const uiBusyRef = useRef(uiBusy)\n  const renameModeRef = useRef(renameMode)\n  const gridOptionRef = useRef(gridOption)\n  const handleClickRef = useRef<((brd: JBoard, e: any) => void) | null>(null)\n  const renameMgrRef = useRef<RenameManager | null>(null)\n  \n  // Rename mode refs for down+up approach\n  const renameArmRef = useRef<{ pt:any|null, wasFixed:boolean }>(\n    { pt:null, wasFixed:false }\n  )\n  const downPosRef = useRef<{x:number,y:number}|null>(null)\n  \n  useEffect(() => { toolRef.current = tool }, [tool])\n  useEffect(() => { uiBusyRef.current = uiBusy }, [uiBusy])\n  useEffect(() => { renameModeRef.current = renameMode }, [renameMode])\n  useEffect(() => { gridOptionRef.current = gridOption }, [gridOption])\n  function setRenameEnabled(next: boolean) {\n    if (next) renameMgrRef.current?.enable()\n    else renameMgrRef.current?.disable()\n    setRenameMode(next)\n  }\n\n\n  function pushCreated(obj: any) {\n    if (obj && typeof obj === 'object' && 'id' in obj) setCreatedStack(s => [...s, obj.id])\n  }\n\n  function getMouseCoords(brd: JBoard, e: any): {x: number, y: number} {\n    const coords = brd.getUsrCoordsOfMouse(e)\n    return { x: coords[0], y: coords[1] }\n  }\n\n  // 'A_12' -> 'A₁₂'\n  function toSubscript(name: string) {\n    const map: Record<string,string> = { '0':'₀','1':'₁','2':'₂','3':'₃','4':'₄','5':'₅','6':'₆','7':'₇','8':'₈','9':'₉' }\n    return name.replace(/_(\\d+)/g, (_, d) => d.split('').map((ch: string) => map[ch] ?? ch).join(''))\n  }\n\n  // normalize and set the visible + raw name on a JSXGraph point\n  const renamePoint = useCallback((pt:any, newName:string) => {\n    const trimmed = (newName || '').trim()\n    const pretty = toSubscript(trimmed)                 // converts A_1 -> A₁\n    \n    pt.setAttribute({ name: pretty, withLabel: !!trimmed })\n    ;(pt as any)._rawName = trimmed                      // keep searchable original\n    // Removed pt.board.update() to prevent point attachment issues\n  }, [])\n\n  // find a point under event (prefers non-fixed)\n  function pointUnder(brd:JBoard, e:any) {\n    const under = brd.getAllObjectsUnderMouse(e)\n    return under.find((o:any)=>o.elType==='point') || null\n  }\n\n  function isNameTaken(brd:JBoard, raw:string, exceptId?:string) {\n    for (const k in brd.objects) {\n      const o:any = (brd.objects as any)[k]\n      if (o.elType === 'point' && o.id !== exceptId) {\n        if ((o._rawName ?? '') === raw) return true\n      }\n    }\n    return false\n  }\n\n  function nearestFreePoint(brd: JBoard, e: any) {\n    const under = brd.getAllObjectsUnderMouse(e)\n    const pt = under.find((o:any) => o.elType === 'point' && !o.visProp.fixed)\n    return pt || null\n  }\n\n  // Helper function to get or create points via history system\n  const getOrCreatePointViaHistory = useCallback((brd: JBoard, xy: {x:number, y:number}) => {\n    const factory = geometryFactoryRef.current\n    if (!factory) return null\n\n    // Use soft snapping for smoother placement - only snap if close to grid\n    const snapped = snapToGrid(xy.x, xy.y, gridOption, true)\n    \n    // Use grid-aware EPS: slightly larger than snap size to catch nearby snapped points\n    const checkEPS = factory.getNearbyEps(gridOption, EPS)\n    \n    // try to reuse an existing non-fixed point near the coordinates\n    const existing = factory.findNearbyPoint(snapped.x, snapped.y, checkEPS)\n    if (existing) return existing\n\n    // create point at snapped coordinates (with soft snap)\n    const pt = factory.pointWithGrid(snapped.x, snapped.y, gridOption)\n    \n    // Don't create a separate point operation here - the point will be tracked\n    // automatically when the shape operation (segment/line/circle) executes\n    // The shape operations will find this point by ID and attach tracking to it\n    \n    return pt\n  }, [gridOption])\n\n  const createPointSmart = useCallback((brd: JBoard, xy: {x:number, y:number}) => {\n    const factory = geometryFactoryRef.current\n    if (!factory) return null\n\n    // Use soft snapping for smoother placement\n    const snapped = snapToGrid(xy.x, xy.y, gridOption, true)\n    \n    // Use grid-aware EPS to check for existing points\n    const checkEPS = factory.getNearbyEps(gridOption, EPS)\n    \n    // Check for existing points at snapped location\n    const existing = factory.findNearbyPoint(snapped.x, snapped.y, checkEPS)\n    if (existing) return existing\n    \n    const pt = factory.pointWithGrid(snapped.x, snapped.y, gridOption)\n    pushCreated(pt)\n    return pt\n  }, [gridOption])\n\n  const handleClick = useCallback((brd: JBoard, e: any) => {\n    if (uiBusyRef.current) return\n    \n    // Prevent tools from firing while in rename mode\n    if (renameModeRef.current) return\n    \n    // Check if the click is on a physical tool - if so, don't handle it\n    const target = e.originalEvent?.target as HTMLElement\n    if (target && (target.closest('.group') || target.classList.contains('group'))) {\n      return // Let the physical tool handle the interaction\n    }\n    \n    const xy = getMouseCoords(brd, e)\n    const currentTool = toolRef.current\n\n    switch (currentTool) {\n      case 'mouse': {\n        // Mouse tool - do nothing, just allow interaction without creating objects\n        // Check if clicking on a point and prevent default behavior\n        const under = brd.getAllObjectsUnderMouse(e)\n        const clickedPoint = under.find((o:any) => o.elType === 'point' && !o.visProp.fixed)\n        if (clickedPoint) {\n          // Prevent default JSXGraph behavior for points when using mouse tool\n          if (e.originalEvent) {\n            e.originalEvent.preventDefault()\n            e.originalEvent.stopPropagation()\n          }\n          setFeedback('Bod vybrán')\n        } else {\n          setFeedback('')\n        }\n        break\n      }\n      case 'point': {\n        // Place point exactly where clicked, no snapping\n        const raw = xy // use the original mouse coordinates\n        // Check for existing point at this location (with very small epsilon)\n        const factory = geometryFactoryRef.current\n        if (!factory) break\n\n        // Use a tiny EPS for exact match only\n        const checkEPS = 1e-8\n        const existing = factory.findNearbyPoint(raw.x, raw.y, checkEPS)\n\n        if (!existing) {\n          const attr = { name:'', size:2, strokeColor:'#444', fillColor:'#666' }\n          const op = undoRedoRef.current?.createPointOperation(raw.x, raw.y, attr)\n          if (op) undoRedoRef.current?.pushOperation(op)\n          updateUndoRedoState()\n          setFeedback('Bod vytvořen')\n        } else {\n          setFeedback('Bod již existuje na této pozici')\n        }\n        break\n      }\n      case 'segment': {\n        const selectionMgr = selectionManagerRef.current\n        if (!selectionMgr) break\n\n        const first = selectionMgr.getFirst()\n        if (!first) {\n          // first click\n          undoRedoRef.current?.begin()\n          const p = getOrCreatePointViaHistory(brd, xy)\n          if (!p) { undoRedoRef.current?.commit(); break }\n          selectionMgr.select(p)\n          setFeedback('Klikněte na druhý bod')\n          // don't commit yet; we'll finish in second click\n          break\n        }\n\n        // second click\n        const a:any = first\n        const b = getOrCreatePointViaHistory(brd, xy)\n        if (!b) { undoRedoRef.current?.commit(); selectionMgr.clear(); break }\n\n        const p1 = { x: a.X(), y: a.Y() }\n        const p2 = { x: b.X(), y: b.Y() }\n        const attr = { strokeColor:'#2563eb', strokeWidth:2 }\n        const op = undoRedoRef.current?.createSegmentOperation(p1, p2, attr)\n        if (op) {\n          op.pointIds = [a.id, b.id]              // <-- bind exact endpoints\n          undoRedoRef.current?.pushOperation(op)\n        }\n        undoRedoRef.current?.commit()\n        updateUndoRedoState()\n        selectionMgr.clear()\n        setFeedback('Úsečka vytvořena')\n        break\n      }\n      case 'line': {\n        const selectionMgr = selectionManagerRef.current\n        if (!selectionMgr) break\n\n        const first = selectionMgr.getFirst()\n        if (!first) {\n          undoRedoRef.current?.begin()\n          const p = getOrCreatePointViaHistory(brd, xy)\n          if (!p) { undoRedoRef.current?.commit(); break }\n          selectionMgr.select(p)\n          setFeedback('Klikněte na druhý bod')\n          break\n        }\n\n        const a:any = first\n        const b = getOrCreatePointViaHistory(brd, xy)\n        if (!b) { undoRedoRef.current?.commit(); selectionMgr.clear(); break }\n\n        const p1 = { x: a.X(), y: a.Y() }\n        const p2 = { x: b.X(), y: b.Y() }\n        const attr = { strokeColor:'#059669', strokeWidth:1, dash:1 }\n        const op = undoRedoRef.current?.createLineOperation(p1, p2, attr)\n        if (op) {\n          op.pointIds = [a.id, b.id]\n          undoRedoRef.current?.pushOperation(op)\n        }\n        undoRedoRef.current?.commit()\n        updateUndoRedoState()\n        selectionMgr.clear()\n        setFeedback('Přímka vytvořena')\n        break\n      }\n      case 'circle': {\n        const selectionMgr = selectionManagerRef.current\n        if (!selectionMgr) break\n\n        const first = selectionMgr.getFirst()\n        if (!first) {\n          undoRedoRef.current?.begin()\n          const c = getOrCreatePointViaHistory(brd, xy)\n          if (!c) { undoRedoRef.current?.commit(); break }\n          selectionMgr.select(c)\n          setFeedback('Klikněte na bod na kružnici')\n          break\n        }\n\n        const c:any = first\n        const p = getOrCreatePointViaHistory(brd, xy)\n        if (!p) { undoRedoRef.current?.commit(); selectionMgr.clear(); break }\n\n        const center = { x: c.X(), y: c.Y() }\n        const on     = { x: p.X(), y: p.Y() }\n        const attr = { strokeColor:'#dc2626', strokeWidth:2 }\n        const op = undoRedoRef.current?.createCircleOperation(center, on, attr)\n        if (op) {\n          op.pointIds = [c.id, p.id]\n          undoRedoRef.current?.pushOperation(op)\n        }\n        undoRedoRef.current?.commit()\n        updateUndoRedoState()\n        selectionMgr.clear()\n        setFeedback('Kružnice vytvořena')\n        break\n      }\n      case 'rubber': {\n        const under = brd.getAllObjectsUnderMouse(e)\n        const toRemove:any = under.find((o:any) => !o.visProp?.fixed)\n        if (toRemove) {\n          const delOp = undoRedoRef.current?.createDeleteOperation(toRemove)\n          if (delOp) {\n            undoRedoRef.current?.pushOperation(delOp)\n            updateUndoRedoState()\n            setFeedback('Objekt smazán')\n          } else {\n            // fallback: hard remove (won't be undoable)\n            brd.removeObject(toRemove as JXG.GeometryElement)\n            setFeedback('Objekt smazán (bez historie)')\n          }\n        }\n        break\n      }\n    }\n  }, [getOrCreatePointViaHistory])\n\n  useEffect(() => { handleClickRef.current = handleClick }, [handleClick])\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (uiBusyRef.current) return\n      \n      // Rename mode toggle\n      if ((e.key === 'n' || e.key === 'N') && !e.ctrlKey && !e.metaKey) {\n        setRenameEnabled(!renameModeRef.current)\n        return\n      }\n\n      // Undo (Ctrl+Z or Cmd+Z)\n      if ((e.key === 'z' || e.key === 'Z') && (e.ctrlKey || e.metaKey) && !e.shiftKey) {\n        e.preventDefault()\n        undoRedoRef.current?.undo()\n        updateUndoRedoState()\n        return\n      }\n\n      // Redo (Ctrl+Shift+Z or Cmd+Shift+Z)\n      if ((e.key === 'z' || e.key === 'Z') && (e.ctrlKey || e.metaKey) && e.shiftKey) {\n        e.preventDefault()\n        undoRedoRef.current?.redo()\n        updateUndoRedoState()\n        return\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyPress)\n    return () => window.removeEventListener('keydown', handleKeyPress)\n  }, [])\n\n  // Handle ruler position changes\n  const handleRulerPositionChange = (x: number, y: number, rotation: number, length: number) => {\n    setRulerPosition({ x, y, rotation, length })\n  }\n\n  // Handle triangle position changes\n  const handleTrianglePositionChange = (x: number, y: number, rotation: number, size: number) => {\n    setTrianglePosition({ x, y, rotation, size })\n  }\n\n  // Handle protractor position changes\n  const handleProtractorPositionChange = (x: number, y: number, rotation: number, size: number) => {\n    setProtractorPosition({ x, y, rotation, size })\n  }\n\n  function toggleRuler() {\n    setRulerVisible(!rulerVisible)\n    if (!rulerVisible) {\n      setActiveTool('ruler')\n      setTool('mouse') // Automatically switch to mouse mode when activating ruler\n    } else if (activeTool === 'ruler') {\n      setActiveTool(null)\n    }\n  }\n\n  function toggleTriangle() {\n    setTriangleVisible(!triangleVisible)\n    if (!triangleVisible) {\n      // Always reset triangle to center when showing\n      setTrianglePosition({ x: 0, y: 0, rotation: 0, size: 3 })\n      setActiveTool('triangle')\n      setTool('mouse') // Automatically switch to mouse mode when activating triangle\n    } else if (activeTool === 'triangle') {\n      setActiveTool(null)\n    }\n  }\n\n  function toggleProtractor() {\n    setProtractorVisible(!protractorVisible)\n    if (!protractorVisible) {\n      setActiveTool('protractor')\n      setTool('mouse') // Automatically switch to mouse mode when activating protractor\n    } else if (activeTool === 'protractor') {\n      setActiveTool(null)\n    }\n  }\n\n  useEffect(() => {\n    if (!containerRef.current) return\n\n    // Calculate dynamic bounding box in whole centimeters, centered at (0,0)\n    const containerRect = containerRef.current.getBoundingClientRect()\n    const boundingBox = calculateCenteredBoundingBoxCm(containerRect.width, containerRect.height)\n\n    // Create board manager (handles board creation and grid management)\n    const boardManager = new BoardManager({\n      container: containerRef.current,\n      boundingbox: boundingBox,\n      axis: false,\n      showNavigation: false,\n      showCopyright: false,\n      grid: false,           // we'll manage grids ourselves\n      pan: { enabled: false },\n      zoom: false,\n      keepaspectratio: true\n    })\n\n    boardManagerRef.current = boardManager\n\n    const brd = boardManager.getBoard()\n\n    // Create geometry factory\n    geometryFactoryRef.current = new GeometryFactory(brd)\n\n    // Create selection manager\n    selectionManagerRef.current = new SelectionManager()\n\n    // Optional: global snap-to-grid defaults for points (finer for smoother placement)\n    // (You can still override per element in your creators.)\n    JXG.Options.point.snapToGrid = true\n    JXG.Options.point.snapSizeX = WORLD_PER_MM\n    JXG.Options.point.snapSizeY = WORLD_PER_MM\n\n    // Init undo/redo\n    undoRedoRef.current = new UndoRedoManager({\n      board: brd,\n      onFeedback: setFeedback,\n      EPS: EPS\n    })\n\n    // Create rename manager and wire into undo/redo\n    const renameMgr = new RenameManager(brd, {\n      clickEps: 0.12,\n      promptLabel: 'Název bodu (např. A, B, C, A_1, A_2):',\n      eventGuard: (ev) => {\n        const t = ev?.originalEvent?.target as HTMLElement | null\n        if (t && (t.closest('.group') || t.classList?.contains('group'))) return false\n        return !uiBusyRef.current\n      },\n      onRenamed: ({ pointId, beforeRaw, afterRaw }) => {\n        if (beforeRaw === afterRaw) return\n        const pt: any = (brd.objects as any)[pointId]\n        if (!pt) return\n        const before = { x: pt.X(), y: pt.Y(), name: beforeRaw }\n        const after = { x: pt.X(), y: pt.Y(), name: afterRaw }\n        const op = undoRedoRef.current?.createModifyOperation(pointId, before, after)\n        if (op) {\n          undoRedoRef.current!.pushOperation(op)\n          updateUndoRedoState()\n        }\n      },\n    })\n    renameMgrRef.current = renameMgr\n    ;(window as any).__renameMgr = renameMgr\n\n    // Create SelectObjectsTool\n    selectToolRef.current = new SelectObjectsTool(brd, setFeedback, undoRedoRef.current)\n\n    // Always forward board 'down' events to drawing handler\n    const boardDownHandler = (e: any) => {\n      // Do not trigger drawing handler when select tool is active\n      if (toolRef.current === 'select') return;\n      handleClickRef.current?.(brd, e)\n    }\n    brd.on('down', boardDownHandler)\n\n    return () => {\n      try { brd.off('down', boardDownHandler) } catch {}\n      boardManager.free()\n      boardManagerRef.current = null\n      undoRedoRef.current = null\n      geometryFactoryRef.current = null\n      selectionManagerRef.current = null\n      try { renameMgrRef.current?.destroy() } catch {}\n      renameMgrRef.current = null\n      // On component cleanup/unmount (inside relevant useEffect or cleanup), only use deactivate on selectToolRef\n      if (selectToolRef.current) selectToolRef.current.deactivate()\n      selectToolRef.current = null\n    }\n  }, [])\n\n  // When user changes the option, update the grid manager\n  useEffect(() => {\n    boardManagerRef.current?.setGridMode(gridOption)\n  }, [gridOption])\n\n  // Close settings dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as HTMLElement\n      if (showSettings && !target.closest('.settings-dropdown')) {\n        setShowSettings(false)\n      }\n    }\n\n    if (showSettings) {\n      document.addEventListener('mousedown', handleClickOutside)\n      return () => document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [showSettings])\n\n  // Hook rename mode state to manager enable/disable\n  useEffect(() => {\n    if (!renameMgrRef.current) return\n    if (renameMode) renameMgrRef.current.enable()\n    else renameMgrRef.current.disable()\n  }, [renameMode])\n\n  function undoLast() {\n    undoRedoRef.current?.undo()\n    updateUndoRedoState()\n  }\n\n  function redoLast() {\n    undoRedoRef.current?.redo()\n    updateUndoRedoState()\n  }\n\n  function updateUndoRedoState() {\n    setCanUndoState(undoRedoRef.current?.canUndo() ?? false)\n    setCanRedoState(undoRedoRef.current?.canRedo() ?? false)\n  }\n\n  // Auto-save to localStorage\n  useEffect(() => {\n    if (!autoSaveEnabled || !boardManagerRef.current) return\n\n    const interval = setInterval(() => {\n      const brd = boardManagerRef.current?.getBoard()\n      if (!brd) return\n\n      const snapshot = exportBoard(brd, {\n        gridOption,\n        rulerPosition,\n        // Don't save trianglePosition - always reset to center\n        protractorPosition,\n        rulerVisible,\n        triangleVisible,\n        protractorVisible,\n        createdStack: [...createdStack]\n      })\n\n      try {\n        localStorage.setItem('geometry_construction_autosave', JSON.stringify(snapshot))\n      } catch (e) {\n        // Ignore localStorage errors (e.g., quota exceeded)\n      }\n    }, 5000) // Auto-save every 5 seconds\n\n    return () => clearInterval(interval)\n  }, [autoSaveEnabled, createdStack, gridOption, rulerPosition, protractorPosition, rulerVisible, triangleVisible, protractorVisible])\n\n  // Load from auto-save on mount\n  useEffect(() => {\n    if (!boardManagerRef.current) return\n\n      try {\n        const saved = localStorage.getItem('geometry_construction_autosave')\n        if (saved) {\n          const data = JSON.parse(saved)\n          // Auto-restore without confirmation\n          setData(data)\n          if (data.meta) {\n            if (data.meta.gridOption) setGridOption(data.meta.gridOption)\n            if (data.meta.rulerPosition) setRulerPosition(data.meta.rulerPosition)\n            // Don't load trianglePosition - always start at center\n            if (data.meta.protractorPosition) setProtractorPosition(data.meta.protractorPosition)\n            if (data.meta.rulerVisible !== undefined) setRulerVisible(data.meta.rulerVisible)\n            if (data.meta.triangleVisible !== undefined) setTriangleVisible(data.meta.triangleVisible)\n            if (data.meta.protractorVisible !== undefined) setProtractorVisible(data.meta.protractorVisible)\n          }\n          // Backward compatibility: check old format too\n          if (data.gridOption) setGridOption(data.gridOption)\n          if (data.rulerPosition) setRulerPosition(data.rulerPosition)\n          // Don't load trianglePosition - always start at center\n          if (data.protractorPosition) setProtractorPosition(data.protractorPosition)\n          if (data.rulerVisible !== undefined) setRulerVisible(data.rulerVisible)\n          if (data.triangleVisible !== undefined) setTriangleVisible(data.triangleVisible)\n          if (data.protractorVisible !== undefined) setProtractorVisible(data.protractorVisible)\n        }\n      } catch (e) {\n        // Ignore errors\n      }\n  }, [])\n\n  // Update undo/redo state after operations\n  useEffect(() => {\n    updateUndoRedoState()\n  }, [data, createdStack])\n\n  function clearAll() {\n    const brd = boardManagerRef.current?.getBoard()\n    if (!brd) return\n    const toRemove: any[] = []\n    for (const key in brd.objects) {\n      const o: any = brd.objects[key]\n      if (!o?.visProp?.fixed) {\n        toRemove.push(o)\n      }\n    }\n    toRemove.forEach(o => brd.removeObject(o))\n    selectionManagerRef.current?.clear()\n    setFeedback('')\n    setData(null)\n    setCreatedStack([])\n  }\n\n  function saveConstruction() {\n    const brd = boardManagerRef.current?.getBoard()\n    if (!brd) return\n    const timestamp = new Date().toISOString()\n    const serializeGeometry = (obj: any) => {\n      const type = obj.elType\n      if (type === 'point') {\n        return { x: obj.X(), y: obj.Y() }\n      }\n      if (type === 'segment' || type === 'line') {\n        const p1 = (obj.points && obj.points[0]) ? obj.points[0] : (obj.point1 || null)\n        const p2 = (obj.points && obj.points[1]) ? obj.points[1] : (obj.point2 || null)\n        return p1 && p2 ? { x1: p1.X(), y1: p1.Y(), x2: p2.X(), y2: p2.Y() } : null\n      }\n      if (type === 'circle') {\n        const c = obj.center\n        const on = obj.point2 || (obj.points && obj.points[1]) || null\n        const center = c ? { x: c.X(), y: c.Y() } : null\n        const radius = (c && on) ? Math.hypot(on.X() - c.X(), on.Y() - c.Y()) : (typeof obj.R === 'function' ? obj.R() : undefined)\n        return { center, radius }\n      }\n      if (type === 'polygon') {\n        const verts = Array.isArray(obj.vertices) ? obj.vertices.map((v:any)=>({ x: v.X(), y: v.Y() })) : []\n        return { vertices: verts }\n      }\n      return null\n    }\n\n    const constructionData = { ...exportBoard(brd), createdStack: [...createdStack] }\n    setData(constructionData)\n    setConstructionHistory(prev => [...prev, constructionData])\n    setFeedback('Konstrukce uložena')\n  }\n\n  function exportConstruction() {\n    const brd = boardManagerRef.current?.getBoard()\n    if (!brd) return\n    const serializeGeometry = (obj: any) => {\n      const type = obj.elType\n      if (type === 'point') {\n        return { x: obj.X(), y: obj.Y() }\n      }\n    if (type === 'segment' || type === 'line') {\n        const p1 = (obj.points && obj.points[0]) ? obj.points[0] : (obj.point1 || null)\n        const p2 = (obj.points && obj.points[1]) ? obj.points[1] : (obj.point2 || null)\n        return p1 && p2 ? { x1: p1.X(), y1: p1.Y(), x2: p2.X(), y2: p2.Y() } : null\n      }\n      if (type === 'circle') {\n        const c = obj.center\n        const on = obj.point2 || (obj.points && obj.points[1]) || null\n        const center = c ? { x: c.X(), y: c.Y() } : null\n        const radius = (c && on) ? Math.hypot(on.X() - c.X(), on.Y() - c.Y()) : (typeof obj.R === 'function' ? obj.R() : undefined)\n        return { center, radius }\n      }\n      if (type === 'polygon') {\n        const verts = Array.isArray(obj.vertices) ? obj.vertices.map((v:any)=>({ x: v.X(), y: v.Y() })) : []\n        return { vertices: verts }\n      }\n      return null\n    }\n    const snapshot = exportBoard(brd)\n    const dataStr = JSON.stringify(snapshot, null, 2)\n    const dataBlob = new Blob([dataStr], { type: 'application/json' })\n    const url = URL.createObjectURL(dataBlob)\n    const link = document.createElement('a')\n    link.href = url\n    link.download = `construction_${new Date().toISOString().split('T')[0]}.json`\n    link.click()\n    URL.revokeObjectURL(url)\n    setFeedback('Konstrukce exportována')\n  }\n\n  async function importConstruction(event: React.ChangeEvent<HTMLInputElement>) {\n    const file = event.target.files?.[0]\n    if (!file) return\n    try {\n      const data = await readJsonFile<Snapshot>(file)\n      setData(data)\n      setFeedback('Konstrukce načtena – klikněte „Načíst\" pro obnovení')\n    } catch {\n      setFeedback('Chyba při načítání souboru')\n    }\n  }\n\n  function loadConstruction() {\n    const brd = boardManagerRef.current?.getBoard()\n    if (!data || !brd) return\n    \n    // Clear current construction\n    clearAll()\n\n    const objs = Array.isArray(data.objects) ? data.objects : []\n\n    // Create maps for created elements\n    const createdById: Record<string, any> = {}\n\n    // Helper: apply visual properties and name\n    const applyAttrs = (el: any, src: any) => {\n      try {\n        // Ensure element is visible by default\n        const base: any = { visible: true }\n        if (src?.type === 'segment') {\n          base.strokeWidth = 2\n        }\n        if (src?.type === 'line') {\n          base.strokeWidth = 1\n        }\n        if (src?.type === 'circle') {\n          base.strokeWidth = 2\n        }\n        if (typeof el?.setAttribute === 'function') {\n          el.setAttribute(base)\n        }\n        if (src?.properties && typeof el?.setAttribute === 'function') {\n          // Whitelist only safe visual properties to avoid breaking objects\n          const p = src.properties\n          const safe: any = {}\n          const allow = ['strokeColor','strokeWidth','dash','fillColor','size','withLabel','visible','fixed']\n          for (const k of allow) {\n            if (p && Object.prototype.hasOwnProperty.call(p, k)) safe[k] = p[k]\n          }\n          el.setAttribute(safe)\n        }\n        const name = src?.name || ''\n        if (typeof el?.setAttribute === 'function') {\n          el.setAttribute({ name, withLabel: !!name })\n        }\n        if (src?.id) { try { (el as any).id = src.id } catch {} }\n      } catch {}\n    }\n\n    // Use library importer\n    importBoard(brd, data as Snapshot)\n\n    // Optional: restore grid and tool positions if present\n    if (data.gridOption) setGridOption(data.gridOption)\n    if (data.rulerPosition) setRulerPosition(data.rulerPosition)\n    // Don't restore trianglePosition - always start at center\n    if (data.protractorPosition) setProtractorPosition(data.protractorPosition)\n    if (data.rulerVisible !== undefined) setRulerVisible(data.rulerVisible)\n    if (data.triangleVisible !== undefined) setTriangleVisible(data.triangleVisible)\n    if (data.protractorVisible !== undefined) setProtractorVisible(data.protractorVisible)\n    setFeedback('Konstrukce načtena')\n  }\n\n  useEffect(() => {\n    const brd = boardManagerRef.current?.getBoard()\n    if (!brd) return\n    if (!selectToolRef.current) {\n      selectToolRef.current = new SelectObjectsTool(brd, setFeedback, undoRedoRef.current || undefined)\n    }\n    if (tool === 'select') {\n      selectToolRef.current.activate()\n    } else {\n      selectToolRef.current.deactivate()\n    }\n  }, [tool])\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\n          <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">\n            Obecné geometrické testování\n          </h1>\n\n          <div className=\"bg-green-50 border-l-4 border-green-500 p-4 mb-4\">\n            <p className=\"text-gray-700\">\n              Volné testovací pole pro geometrické konstrukce. Můžete používat všechny dostupné nástroje bez specifických požadavků.\n            </p>\n            <div className=\"mt-2 flex items-center gap-2\">\n              <button\n                onClick={() => setShowHelp(!showHelp)}\n                className=\"flex items-center gap-1 text-sm text-blue-600 hover:text-blue-800\"\n              >\n                <Info size={14} />\n                {showHelp ? 'Skrýt nápovědu' : 'Zobrazit nápovědu'}\n              </button>\n            </div>\n          </div>\n\n          {showHelp && (\n            <div className=\"bg-blue-50 border-l-4 border-blue-500 p-4 mb-4\">\n              <h3 className=\"font-semibold text-blue-800 mb-2\">Nápověda k nástrojům:</h3>\n              <div className=\"grid md:grid-cols-2 gap-4 text-sm text-blue-700\">\n                <div>\n                  <h4 className=\"font-medium mb-1\">Základní nástroje:</h4>\n                  <ul className=\"space-y-1\">\n                    <li>• <strong>Myš:</strong> Interakce s objekty bez vytváření</li>\n                    <li>• <strong>Bod:</strong> Vytvoření bodu kliknutím</li>\n                    <li>• <strong>Úsečka:</strong> Klikněte na dva body</li>\n                    <li>• <strong>Přímka:</strong> Klikněte na dva body</li>\n                    <li>• <strong>Kružnice:</strong> Střed a bod na kružnici</li>\n                    <li>• <strong>Guma:</strong> Smazání objektu</li>\n                  </ul>\n                </div>\n                <div>\n                  <h4 className=\"font-medium mb-1\">Fyzické nástroje:</h4>\n                  <ul className=\"space-y-1\">\n                    <li>• <strong>Pravítko:</strong> Měření vzdáleností</li>\n                    <li>• <strong>Trojúhelník:</strong> Rýsování úhlů</li>\n                    <li>• <strong>Úhloměr:</strong> Měření úhlů</li>\n                    <li>• <strong>Modrý bod:</strong> Přesun nástroje</li>\n                    <li>• <strong>Zelený bod:</strong> Otočení nástroje</li>\n                    <li>• <strong>Oranžový bod:</strong> Změna velikosti</li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"mt-4 pt-3 border-t border-blue-300\">\n                <h4 className=\"font-medium mb-2 text-blue-800 flex items-center gap-2\">\n                  <Keyboard size={16} />\n                  Klávesové zkratky:\n                </h4>\n                <ul className=\"space-y-1 text-sm text-blue-700\">\n                  <li>• <strong>N:</strong> Režim přejmenování bodů</li>\n                  <li>• <strong>Ctrl/Cmd + Z:</strong> Zpět (Undo)</li>\n                  <li>• <strong>Ctrl/Cmd + Shift + Z:</strong> Znovu (Redo)</li>\n                  <li>• <strong>Delete:</strong> Smazat vybraný objekt (když je aktivní guma)</li>\n                </ul>\n              </div>\n            </div>\n          )}\n\n          {/* Toolbar */}\n          <div className=\"mb-4 bg-gradient-to-br from-gray-50 to-gray-100 rounded-xl border border-gray-200 shadow-md\">\n            {/* First Row: Drawing Tools & Physical Tools */}\n            <div className=\"flex flex-wrap items-center gap-2.5 p-4 border-b border-gray-200 bg-white/50 rounded-t-xl\">\n              {/* Drawing Tools Section */}\n              <div className=\"flex items-center gap-2 pr-2 border-r border-gray-300\">\n                <span className=\"text-xs font-semibold text-gray-500 uppercase tracking-wide px-2\">Kreslení</span>\n                <button \n                  onClick={() => setTool('mouse')}\n                  className={`px-3 py-2 rounded-md flex items-center gap-2 transition-all text-sm font-medium shadow-sm ${\n                    tool === 'mouse' ? 'bg-gray-700 text-white shadow-md' : 'bg-white text-gray-700 hover:bg-gray-100 border border-gray-300'\n                  }`}\n                  title=\"Myš - Interakce s objekty bez vytváření\"\n                >\n                  <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z\"/>\n                    <path d=\"M13 13l6 6\"/>\n                  </svg>\n                  Myš\n                </button>\n                <button \n                  onClick={() => setTool('point')}\n                  className={`px-3.5 py-2 rounded-lg flex items-center gap-2 transition-all text-sm font-medium shadow-sm hover:shadow-md ${\n                    tool === 'point' ? 'bg-blue-600 text-white shadow-md' : 'bg-white text-gray-700 hover:bg-blue-50 border border-gray-300'\n                  }`}\n                  title=\"Bod - Vytvoření bodu kliknutím\"\n                >\n                  <Circle size={18}/> Bod\n                </button>\n                <button \n                  onClick={() => setTool('segment')}\n                  className={`px-3.5 py-2 rounded-lg flex items-center gap-2 transition-all text-sm font-medium shadow-sm hover:shadow-md ${\n                    tool === 'segment' ? 'bg-blue-600 text-white shadow-md' : 'bg-white text-gray-700 hover:bg-blue-50 border border-gray-300'\n                  }`}\n                  title=\"Úsečka - Klikněte na dva body\"\n                >\n                  <Pencil size={18}/> Úsečka\n                </button>\n                <button \n                  onClick={() => setTool('line')}\n                  className={`px-3.5 py-2 rounded-lg flex items-center gap-2 transition-all text-sm font-medium shadow-sm hover:shadow-md ${\n                    tool === 'line' ? 'bg-blue-600 text-white shadow-md' : 'bg-white text-gray-700 hover:bg-blue-50 border border-gray-300'\n                  }`}\n                  title=\"Přímka - Klikněte na dva body\"\n                >\n                  <Pencil size={18}/> Přímka\n                </button>\n                <button \n                  onClick={() => setTool('circle')}\n                  className={`px-3.5 py-2 rounded-lg flex items-center gap-2 transition-all text-sm font-medium shadow-sm hover:shadow-md ${\n                    tool === 'circle' ? 'bg-blue-600 text-white shadow-md' : 'bg-white text-gray-700 hover:bg-blue-50 border border-gray-300'\n                  }`}\n                  title=\"Kružnice - Střed a bod na kružnici\"\n                >\n                  <Circle size={18}/> Kružnice\n                </button>\n              </div>\n\n              {/* Editing Tools Section */}\n              <div className=\"flex items-center gap-2 pr-2 border-r border-gray-300\">\n                <span className=\"text-xs font-semibold text-gray-500 uppercase tracking-wide px-2\">Úpravy</span>\n                {/* Select Objects Tool */}\n                <button\n                  onClick={() => setTool('select')}\n                  className={`px-3.5 py-2 rounded-lg flex items-center gap-2 transition-all text-sm font-medium shadow-sm hover:shadow-md ${\n                    tool === 'select' ? 'bg-purple-700 text-white shadow-md' : 'bg-white text-purple-700 hover:bg-purple-50 border border-purple-300'\n                  }`}\n                  title=\"Vybrat objekty\"\n                >\n                  {/* Icon for Select Tool (dotted square, arrow) SVG */}\n                  <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" style={{marginRight:'2px'}}>\n                    <rect x=\"4\" y=\"4\" width=\"12\" height=\"12\" rx=\"2\" fill=\"none\" strokeDasharray=\"3 2\"/>\n                    <polyline points=\"11,13 15,13 15,17\" strokeDasharray=\"0\" />\n                    <polyline points=\"15,17 17,15 13,15\" strokeDasharray=\"0\" />\n                  </svg>\n                  Vybrat objekty\n                </button>\n                <button \n                  onClick={() => setTool('rubber')}\n                  className={`px-3.5 py-2 rounded-lg flex items-center gap-2 transition-all text-sm font-medium shadow-sm hover:shadow-md ${\n                    tool === 'rubber' ? 'bg-red-600 text-white shadow-md' : 'bg-white text-gray-700 hover:bg-red-50 border border-gray-300'\n                  }`}\n                  title=\"Guma - Smazání objektu\"\n                >\n                  <Eraser size={18}/> Guma\n                </button>\n                <button \n                  onClick={() => setRenameEnabled(!renameMode)}\n                  className={`px-3 py-2 rounded flex items-center gap-2 ${\n                    renameMode ? 'bg-teal-600 text-white shadow-md' : 'bg-white text-gray-700 hover:bg-teal-50 border border-gray-300'\n                  }`}\n                  title=\"Přejmenovat bod (klikněte na bod)\"\n                >\n                  ✎ Název bodu\n                </button>\n              </div>\n            \n              {/* Physical Tools Section */}\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-xs font-semibold text-gray-500 uppercase tracking-wide px-2\">Nástroje</span>\n                <button \n                  onClick={toggleRuler}\n                  className={`px-3 py-2 rounded flex items-center gap-2 ${\n                    rulerVisible ? 'bg-yellow-600 text-white shadow-md' : 'bg-white text-gray-700 hover:bg-yellow-50 border border-gray-300'\n                  }`}\n                  title=\"Pravítko - Měření vzdáleností\"\n                >\n                  <Ruler size={18}/> Pravítko\n                </button>\n                <button \n                  onClick={toggleTriangle}\n                  className={`px-3 py-2 rounded flex items-center gap-2 ${\n                    triangleVisible ? 'bg-purple-600 text-white shadow-md' : 'bg-white text-gray-700 hover:bg-purple-50 border border-gray-300'\n                  }`}\n                  title=\"Trojúhelník - Rýsování úhlů\"\n                >\n                  <Triangle size={18}/> Trojúhelník\n                </button>\n                <button \n                  onClick={toggleProtractor}\n                  className={`px-3 py-2 rounded flex items-center gap-2 ${\n                    protractorVisible ? 'bg-orange-600 text-white shadow-md' : 'bg-white text-gray-700 hover:bg-orange-50 border border-gray-300'\n                  }`}\n                  title=\"Úhloměr - Měření úhlů\"\n                >\n                  <Gauge size={18}/> Úhloměr\n                </button>\n              </div>\n            </div>\n\n            {/* Second Row: History & File Operations */}\n            <div className=\"flex flex-wrap items-center gap-2.5 p-4 bg-white/30 rounded-b-xl\">\n              <button \n                onClick={undoLast} \n                disabled={!canUndoState}\n                className=\"px-3.5 py-2 rounded-lg bg-gray-700 text-white hover:bg-gray-800 disabled:opacity-40 disabled:cursor-not-allowed flex items-center gap-2 transition-all text-sm font-medium shadow-sm hover:shadow-md\"\n                title=\"Zpět (Ctrl/Cmd + Z)\"\n              >\n              <RotateCcw size={16}/> Zpět\n            </button>\n            <button \n              onClick={redoLast} \n              disabled={!canRedoState}\n              className=\"px-3.5 py-2 rounded-lg bg-gray-700 text-white hover:bg-gray-800 disabled:opacity-40 disabled:cursor-not-allowed flex items-center gap-2 transition-all text-sm font-medium shadow-sm hover:shadow-md\"\n              title=\"Znovu (Ctrl/Cmd + Shift + Z)\"\n            >\n              <RotateCw size={16}/> Znovu\n            </button>\n            <button onClick={clearAll} className=\"px-3.5 py-2 rounded-lg bg-red-600 text-white hover:bg-red-700 flex items-center gap-2 transition-all text-sm font-medium shadow-sm hover:shadow-md\">\n              <Trash2 size={16}/> Vymazat\n            </button>\n            <button onClick={saveConstruction} className=\"px-3.5 py-2 rounded-lg bg-green-600 text-white hover:bg-green-700 flex items-center gap-2 transition-all text-sm font-medium shadow-sm hover:shadow-md\">\n              <Save size={16}/> Uložit\n            </button>\n            <button onClick={exportConstruction} disabled={!data} className=\"px-3.5 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 disabled:opacity-40 disabled:cursor-not-allowed flex items-center gap-2 transition-all text-sm font-medium shadow-sm hover:shadow-md\" title=\"Exportovat jako JSON\">\n              <Download size={16}/> Export\n            </button>\n            <label className=\"px-3.5 py-2 rounded-lg bg-purple-600 text-white hover:bg-purple-700 cursor-pointer flex items-center gap-2 transition-all text-sm font-medium shadow-sm hover:shadow-md\">\n              <Upload size={16}/> Import\n              <input\n                type=\"file\"\n                accept=\".json\"\n                onChange={importConstruction}\n                className=\"hidden\"\n              />\n            </label>\n            <button onClick={loadConstruction} disabled={!data} className=\"px-3.5 py-2 rounded-lg bg-orange-600 text-white hover:bg-orange-700 disabled:opacity-40 disabled:cursor-not-allowed flex items-center gap-2 transition-all text-sm font-medium shadow-sm hover:shadow-md\">\n              <Upload size={16}/> Načíst\n            </button>\n            </div>\n          </div>\n\n          <div className=\"relative\">\n            {/* Settings Button - positioned outside JSXGraph container */}\n            <div className=\"absolute top-2 right-2 z-50 settings-dropdown\" style={{ zIndex: 9999 }}>\n              <div className=\"flex items-center gap-2\">\n                {/* Grid mode indicator */}\n                <div className=\"px-2 py-1 bg-white bg-opacity-80 rounded text-xs text-gray-700 border border-gray-300\">\n                  {gridOption === 'none' && 'Žádná mřížka'}\n                  {gridOption === 'major' && 'Hlavní'}\n                  {gridOption === 'minor' && 'Vedlejší'}\n                  {gridOption === 'major-minor' && 'Hlavní+Vedlejší'}\n                  {gridOption === 'dot' && 'Bodová'}\n                </div>\n                <button\n                  onClick={() => setShowSettings(!showSettings)}\n                  className=\"p-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg shadow-lg transition-colors\"\n                  title=\"Nastavení mřížky\"\n                  style={{ zIndex: 10000 }}\n                >\n                  <Settings size={18} />\n                </button>\n              </div>\n              \n              {/* Settings Dropdown */}\n              {showSettings && (\n                <div className=\"absolute top-12 right-0 bg-white border border-gray-300 rounded-lg shadow-lg min-w-48 z-20\" style={{ zIndex: 10001 }}>\n                  <div className=\"p-3 border-b border-gray-200\">\n                    <div className=\"flex items-center gap-2 text-gray-700 font-medium\">\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <path d=\"M3 3h18v18H3z\"/>\n                        <path d=\"M9 9h6v6H9z\"/>\n                        <path d=\"M3 9h6\"/>\n                        <path d=\"M15 9h6\"/>\n                        <path d=\"M3 15h6\"/>\n                        <path d=\"M15 15h6\"/>\n                        <path d=\"M9 3v6\"/>\n                        <path d=\"M9 15v6\"/>\n                        <path d=\"M15 3v6\"/>\n                        <path d=\"M15 15v6\"/>\n                      </svg>\n                      Zobrazit mřížku\n                      <ChevronUp size={14} />\n                    </div>\n                  </div>\n                  <div className=\"py-1\">\n                    <button\n                      onClick={() => {\n                        setGridOption('none')\n                        setShowSettings(false)\n                      }}\n                      className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${\n                        gridOption === 'none' ? 'bg-gray-100 text-gray-900' : 'text-gray-700'\n                      }`}\n                    >\n                      Žádná mřížka\n                    </button>\n                    <button\n                      onClick={() => {\n                        setGridOption('major')\n                        setShowSettings(false)\n                      }}\n                      className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${\n                        gridOption === 'major' ? 'bg-gray-100 text-gray-900' : 'text-gray-700'\n                      }`}\n                    >\n                      Hlavní mřížka\n                    </button>\n                    <button\n                      onClick={() => {\n                        setGridOption('minor')\n                        setShowSettings(false)\n                      }}\n                      className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${\n                        gridOption === 'minor' ? 'bg-gray-100 text-gray-900' : 'text-gray-700'\n                      }`}\n                    >\n                      Vedlejší mřížka\n                    </button>\n                    <button\n                      onClick={() => {\n                        setGridOption('major-minor')\n                        setShowSettings(false)\n                      }}\n                      className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${\n                        gridOption === 'major-minor' ? 'bg-gray-100 text-gray-900' : 'text-gray-700'\n                      }`}\n                    >\n                      Hlavní a vedlejší mřížka\n                    </button>\n                    <button\n                      onClick={() => {\n                        setGridOption('dot')\n                        setShowSettings(false)\n                      }}\n                      className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${\n                        gridOption === 'dot' ? 'bg-gray-100 text-gray-900' : 'text-gray-700'\n                      }`}\n                    >\n                      Bodová mřížka\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <div \n              ref={containerRef} \n              id=\"jxgbox\" \n              className=\"w-full border-2 border-gray-300 rounded-lg bg-white jxgbox\" \n              style={{ height: 500, touchAction: 'none' }} \n            >\n            {/* Draggable Ruler */}\n            {rulerVisible && (\n              <DraggableRuler\n                x={rulerPosition.x}\n                y={rulerPosition.y}\n                rotation={rulerPosition.rotation}\n                length={rulerPosition.length}\n                onPositionChange={handleRulerPositionChange}\n                isActive={activeTool === 'ruler'}\n                onActivate={() => {\n                  setActiveTool('ruler')\n                  setTool('mouse') // Automatically switch to mouse mode when clicking ruler\n                }}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n            \n            {/* Draggable Triangle */}\n            {triangleVisible && (\n              <DraggableTriangle\n                x={trianglePosition.x}\n                y={trianglePosition.y}\n                rotation={trianglePosition.rotation}\n                size={trianglePosition.size}\n                type=\"45-45-90\"\n                onPositionChange={handleTrianglePositionChange}\n                isActive={activeTool === 'triangle'}\n                onActivate={() => {\n                  setActiveTool('triangle')\n                  setTool('mouse') // Automatically switch to mouse mode when clicking triangle\n                }}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n            \n            {/* Draggable Protractor */}\n            {protractorVisible && (\n              <DraggableProtractor\n                x={protractorPosition.x}\n                y={protractorPosition.y}\n                rotation={protractorPosition.rotation}\n                size={protractorPosition.size}\n                onPositionChange={handleProtractorPositionChange}\n                isActive={activeTool === 'protractor'}\n                onActivate={() => {\n                  setActiveTool('protractor')\n                  setTool('mouse') // Automatically switch to mouse mode when clicking protractor\n                }}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n            </div>\n          </div>\n\n\n          {feedback && (\n            <div className={`mt-4 p-4 rounded-lg ${\n              feedback.includes('✅') ? 'bg-green-50 border-l-4 border-green-500' : 'bg-yellow-50 border-l-4 border-yellow-500'\n            }`}>\n              <p className=\"text-gray-800\">{feedback}</p>\n            </div>\n          )}\n\n          {/* Construction History */}\n          {constructionHistory.length > 0 && (\n            <div className=\"mt-6 bg-gray-50 rounded-lg p-4\">\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-3\">Historie konstrukcí</h3>\n              <div className=\"space-y-2 max-h-40 overflow-y-auto\">\n                {constructionHistory.map((construction, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-2 bg-white rounded border\">\n                    <div>\n                      <span className=\"text-sm font-medium\">Konstrukce {index + 1}</span>\n                      <span className=\"text-xs text-gray-500 ml-2\">\n                        {new Date(construction.timestamp).toLocaleString('cs-CZ')}\n                      </span>\n                    </div>\n                    <div className=\"text-xs text-gray-500\">\n                      {construction.objects?.length || 0} objektů\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}