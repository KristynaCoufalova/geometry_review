{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/undo-redo.ts"],"sourcesContent":["/**\n * Standalone Undo/Redo System for JSXGraph Geometry\n * \n * This module provides a clean, isolated undo/redo system that can be easily\n * integrated into any JSXGraph-based geometry application.\n */\n\nimport JXG from 'jsxgraph'\n\ntype JBoard = JXG.Board & { renderer: any }\n\n// Operation types\nexport type CreateOp = {\n  kind: 'create'\n  elType: 'point' | 'segment' | 'line' | 'circle'\n  payload: any\n  _id?: string\n  pointIds?: string[]\n}\n\nexport type DeleteOp = {\n  kind: 'delete'\n  elType: 'point' | 'segment' | 'line' | 'circle'\n  payload: any\n  _id?: string\n  pointIds?: string[]\n}\n\nexport type ModifyOp = {\n  kind: 'modify'\n  pointId: string\n  before: { x: number; y: number; name: string }\n  after: { x: number; y: number; name: string }\n}\n\nexport type BundleOp = {\n  kind: 'bundle'\n  ops: Operation[]\n}\n\nexport type Operation = CreateOp | DeleteOp | ModifyOp | BundleOp\n\n// Configuration for the undo/redo system\nexport interface UndoRedoConfig {\n  board: JBoard\n  onFeedback?: (message: string) => void\n  EPS?: number\n}\n\nexport class UndoRedoManager {\n  private board: JBoard\n  private undoStack: Operation[] = []\n  private redoStack: Operation[] = []\n  private onFeedback: ((message: string) => void) | undefined\n  private EPS: number\n  private txnDepth = 0\n  private pendingOps: Operation[] = []\n  private suppressTracking = false\n  private suppressShapeTracking = false\n  private moveStarts = new Map<string, { x: number; y: number; name: string }>()\n  private groupDraggedPoints = new Set<string>()\n  private trackingInterval: NodeJS.Timeout | null = null\n  private withinTol(a: number, b: number, tol = this.EPS): boolean { \n    return Math.abs(a - b) <= tol \n  }\n\n  private withSuppressed<T>(fn: () => T): T {\n    const prev = this.suppressTracking\n    this.suppressTracking = true\n    try { return fn() } finally { this.suppressTracking = prev }\n  }\n\n  constructor(config: UndoRedoConfig) {\n    this.board = config.board\n    this.onFeedback = config.onFeedback\n    this.EPS = config.EPS || 0.03\n    this.setupGlobalPointTracking()\n  }\n\n  // Public API\n  public pushOperation(op: Operation): void {\n    const frozen = structuredClone(op)\n    this.withSuppressed(() => this.performOperation(frozen))\n    if (this.txnDepth > 0) {\n      this.pendingOps.push(frozen)\n    } else {\n      this.undoStack.push(frozen)\n      this.redoStack = [] // Clear redo stack on new operation\n    }\n  }\n\n  public begin(): void { \n    this.txnDepth++ \n  }\n\n  public commit(): void {\n    if (this.txnDepth === 0) return\n    this.txnDepth--\n    if (this.txnDepth > 0) return\n    if (this.pendingOps.length === 0) return\n    // compress: push a synthetic op that replays the batch\n    const bundle = structuredClone(this.pendingOps)\n    this.pendingOps = []\n    this.undoStack.push({ kind: 'bundle', ops: bundle } as BundleOp)\n    this.redoStack = []\n  }\n\n  public undo(): void {\n    if (this.undoStack.length === 0) return\n    \n    const op = this.undoStack.pop()!\n    const frozen = structuredClone(op)\n    this.suppressTracking = true\n    try {\n      this.rollbackOperation(frozen)\n    } finally {\n      this.suppressTracking = false\n    }\n    this.redoStack.push(frozen)\n    this.board.update()\n    this.onFeedback?.('')\n  }\n\n  public redo(): void {\n    if (this.redoStack.length === 0) return\n    \n    const op = this.redoStack.pop()!\n    const frozen = structuredClone(op)\n    this.suppressTracking = true\n    try {\n      this.performOperation(frozen)\n    } finally {\n      this.suppressTracking = false\n    }\n    this.undoStack.push(frozen)\n    this.board.update()\n    this.onFeedback?.('')\n  }\n\n  public canUndo(): boolean {\n    return this.undoStack.length > 0\n  }\n\n  public canRedo(): boolean {\n    return this.redoStack.length > 0\n  }\n\n  public clear(): void {\n    this.undoStack = []\n    this.redoStack = []\n  }\n\n  public clearPendingMovesForPoints(pointIds: string[]): void {\n    for (const id of pointIds) {\n      this.moveStarts.delete(id)\n    }\n  }\n\n  public markPointsForGroupDrag(pointIds: string[]): void {\n    for (const id of pointIds) {\n      this.groupDraggedPoints.add(id)\n      // Also clear any pending move starts to be safe\n      this.moveStarts.delete(id)\n    }\n  }\n\n  public unmarkPointsForGroupDrag(pointIds: string[]): void {\n    for (const id of pointIds) {\n      this.groupDraggedPoints.delete(id)\n    }\n  }\n\n  public suppressTrackingDuring<T>(fn: () => T): T {\n    return this.withSuppressed(fn)\n  }\n\n  public setSuppressShapeTracking(on: boolean): void {\n    this.suppressShapeTracking = on\n  }\n\n  public dispose(): void {\n    this.moveStarts.clear()\n    if (this.trackingInterval) {\n      clearInterval(this.trackingInterval)\n      this.trackingInterval = null\n    }\n  }\n\n  private setupGlobalPointTracking(): void {\n    // Attach tracking to all existing points\n    this.attachTrackingToAllPoints()\n    \n    // Set up a periodic check to attach tracking to any new points\n    this.trackingInterval = setInterval(() => {\n      this.attachTrackingToAllPoints()\n    }, 1000) // Check every second\n  }\n\n  private attachTrackingToAllPoints(): void {\n    const objects = Object.values(this.board.objects) as any[]\n    for (const obj of objects) {\n      if (obj?.elType === 'point' && !obj.visProp?.fixed) {\n        this.attachPointTracking(obj)\n      }\n    }\n  }\n\n  private posOf(pt: any): { x: number; y: number; name: string } {\n    return { x: pt.X(), y: pt.Y(), name: (pt as any)._rawName || '' }\n  }\n\n  private definingPointsOf(obj: any): any[] {\n    if (!obj) return []\n    if (obj.elType === 'segment' || obj.elType === 'line') {\n      const a: any = obj.point1 || obj.A || obj.points?.[0]\n      const b: any = obj.point2 || obj.B || obj.points?.[1]\n      return [a, b].filter(Boolean)\n    }\n    if (obj.elType === 'circle') {\n      const c: any = obj.center || obj.points?.[0]\n      const p: any = obj.point2 || obj.points?.[1]\n      return [c, p].filter(Boolean)\n    }\n    return []\n  }\n\n  private attachPointTracking(pt: any): void {\n    // Avoid double-binding\n    if ((pt as any)._undoRedoBound) return\n    ;(pt as any)._undoRedoBound = true\n\n    pt.on('down', () => {\n      if (this.suppressTracking) return\n      this.moveStarts.set(pt.id, this.posOf(pt))\n    })\n\n    pt.on('up', () => {\n      if (this.suppressTracking) return\n      // Skip if this point is being group-dragged (will be handled by group drag handler)\n      if (this.groupDraggedPoints.has(pt.id)) {\n        this.moveStarts.delete(pt.id)\n        return\n      }\n      const start = this.moveStarts.get(pt.id)\n      if (!start) return\n      const end = this.posOf(pt)\n\n      const moved = !this.withinTol(start.x, end.x) || !this.withinTol(start.y, end.y) || start.name !== end.name\n      if (moved) {\n        const op: ModifyOp = { kind: 'modify', pointId: pt.id, before: start, after: end }\n        this.pushOperation(op)\n      }\n      this.moveStarts.delete(pt.id)\n    })\n  }\n\n  private attachShapeTracking(obj: any): void {\n    // For segment/line/circle: record a BUNDLE of point moves\n    let before: Record<string, { x: number; y: number; name: string }> | null = null\n    let pts: any[] = []\n\n    const onDown = () => {\n      if (this.suppressTracking || this.suppressShapeTracking) return\n      pts = this.definingPointsOf(obj)\n      if (pts.length === 0) return\n      before = {}\n      for (const p of pts) before[p.id] = this.posOf(p)\n    }\n\n    const onUp = () => {\n      if (this.suppressTracking || this.suppressShapeTracking) {\n        before = null\n        pts = []\n        return\n      }\n      if (!before || pts.length === 0) return\n      const ops: Operation[] = []\n      for (const p of pts) {\n        const b = before![p.id]\n        if (!b) continue\n        const a = this.posOf(p)\n        if (b.x !== a.x || b.y !== a.y || b.name !== a.name) {\n          ops.push({\n            kind: 'modify',\n            pointId: p.id,\n            before: b,\n            after: a\n          } as ModifyOp)\n        }\n      }\n      if (ops.length === 1 && ops[0]) {\n        this.pushOperation(ops[0])                 // single move\n      } else if (ops.length > 1) {\n        this.pushOperation({ kind: 'bundle', ops }) // move both endpoints / center+radius\n      }\n      before = null\n      pts = []\n    }\n\n    obj.on('down', onDown)\n    obj.on('up', onUp)\n  }\n\n  private findPointNear(xy: { x: number; y: number }, tol = this.EPS): any {\n    const objs = Object.values(this.board.objects) as any[]\n    for (const o of objs) {\n      if (o?.elType === 'point') {\n        const p = { x: o.X(), y: o.Y() }\n        if (Math.hypot(p.x - xy.x, p.y - xy.y) <= tol) return o\n      }\n    }\n    return null\n  }\n\n  private isJXGPoint(p: any): boolean {\n    return !!(\n      p &&\n      p.elType === 'point' &&\n      typeof p.X === 'function' &&\n      typeof p.Y === 'function' &&\n      p.board === this.board\n    )\n  }\n\n  private getPointByIdOrNear(prefId: string | undefined, xy: { x: number; y: number }, tol = this.EPS): any {\n    if (prefId) {\n      const byId = (this.board.objects as any)[prefId]\n      if (byId?.elType === 'point') return byId\n    }\n    // exact coordinate match first\n    for (const o of Object.values(this.board.objects) as any[]) {\n      if (o?.elType === 'point' && o.X() === xy.x && o.Y() === xy.y) return o\n    }\n    // then proximity\n    const nearPoint = this.findPointNear(xy, tol)\n    if (nearPoint) return nearPoint\n    \n    // If no point found, return null (will be handled by fallback in calling code)\n    return null\n  }\n\n  private ensurePoint(\n    xy: { x: number; y: number },\n    attr: any = { name: '', size: 2, strokeColor: '#444', fillColor: '#666' }\n  ): any | null {\n    const existing = this.findPointNear(xy)\n    if (existing) {\n      this.attachPointTracking(existing)\n      return existing\n    }\n\n    try {\n      const pt = this.board.create('point', [xy.x, xy.y], attr)\n      if (!this.isJXGPoint(pt)) throw new Error('Invalid point')\n      ;(pt as any)._rawName = attr?.name ?? ''\n      if (attr?.fixed !== undefined) pt.setAttribute({ fixed: attr.fixed })\n      if (attr?.withLabel !== undefined) pt.setAttribute({ withLabel: attr.withLabel })\n      \n      // Attach move tracking to the new point\n      this.attachPointTracking(pt)\n      \n      return pt\n    } catch (error) {\n      console.error('Failed to create point:', error)\n      return null\n    }\n  }\n\n  private performOperation(op: Operation): void {\n    if (op.kind === 'create') {\n      this.performCreate(op)\n    } else if (op.kind === 'delete') {\n      this.performDelete(op)\n    } else if (op.kind === 'modify') {\n      this.performModify(op)\n    } else if (op.kind === 'bundle') {\n      this.performBundle(op)\n    }\n  }\n\n  private rollbackOperation(op: Operation): void {\n    if (op.kind === 'create') {\n      this.rollbackCreate(op)\n    } else if (op.kind === 'delete') {\n      this.rollbackDelete(op)\n    } else if (op.kind === 'modify') {\n      this.rollbackModify(op)\n    } else if (op.kind === 'bundle') {\n      this.rollbackBundle(op)\n    }\n  }\n\n  private performCreate(op: CreateOp): void {\n    if (op.elType === 'point') {\n      const { x, y, attr } = op.payload\n      const pt = this.ensurePoint({ x, y }, attr)\n      if (!pt) return\n      op._id = pt.id\n      // Force board update to ensure point is created immediately\n      this.board.update()\n      return\n    }\n\n    if (op.elType === 'segment' || op.elType === 'line') {\n      const { p1, p2, attr } = op.payload\n      const a = this.getPointByIdOrNear(op.pointIds?.[0], p1) || this.ensurePoint(p1, attr)\n      const b = this.getPointByIdOrNear(op.pointIds?.[1], p2) || this.ensurePoint(p2, attr)\n\n      // If either isn't a real JSXGraph point, fall back to coordinate parents\n      const useCoords = !(this.isJXGPoint(a) && this.isJXGPoint(b))\n      const parents = useCoords ? [[p1.x, p1.y], [p2.x, p2.y]] : [a, b]\n\n      try {\n        const el = this.board.create(op.elType, parents as any, attr)\n        op._id = (el as any).id\n        // capture actual point ids (works for both segment & line)\n        const pA: any = (el as any).point1 || (el as any).A || (el as any).points?.[0]\n        const pB: any = (el as any).point2 || (el as any).B || (el as any).points?.[1]\n        if (this.isJXGPoint(pA) && this.isJXGPoint(pB)) {\n          op.pointIds = [pA.id, pB.id]\n          // Attach tracking to the endpoint points if they don't have it yet\n          this.attachPointTracking(pA)\n          this.attachPointTracking(pB)\n        }\n        // Attach shape tracking to the element itself\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error(`Failed to create ${op.elType}:`, e, { parents })\n      }\n      return\n    }\n\n    if (op.elType === 'circle') {\n      const { center, on, attr } = op.payload\n      const c = this.getPointByIdOrNear(op.pointIds?.[0], center) || this.ensurePoint(center, attr)\n      const p = this.getPointByIdOrNear(op.pointIds?.[1], on) || this.ensurePoint(on, attr)\n\n      const useCoords = !(this.isJXGPoint(c) && this.isJXGPoint(p))\n      const parents = useCoords ? [[center.x, center.y], [on.x, on.y]] : [c, p]\n\n      try {\n        const el = this.board.create('circle', parents as any, attr)\n        op._id = (el as any).id\n        const pc: any = (el as any).center || (el as any).points?.[0]\n        const pp: any = (el as any).point2 || (el as any).points?.[1]\n        if (this.isJXGPoint(pc) && this.isJXGPoint(pp)) {\n          op.pointIds = [pc.id, pp.id]\n          // Attach tracking to the center and on-point if they don't have it yet\n          this.attachPointTracking(pc)\n          this.attachPointTracking(pp)\n        }\n        // Attach shape tracking to the circle element itself\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error('Failed to create circle:', e, { parents })\n      }\n      return\n    }\n  }\n\n  private rollbackCreate(op: CreateOp): void {\n    if (!op._id) return\n    \n    const obj = (this.board.objects as any)[op._id]\n    if (obj) {\n      try {\n        this.board.removeObject(obj as JXG.GeometryElement)\n      } catch (error) {\n        console.error('Failed to remove object:', error, op._id)\n      }\n    } else {\n      // Try to find and remove by matching definition as fallback\n      this.removeByMatchingDefinition({\n        kind: 'delete',\n        elType: op.elType,\n        payload: op.payload,\n        _id: op._id,\n        pointIds: op.pointIds || []\n      })\n    }\n    \n    // Remove associated points if they're not used elsewhere\n    if (op.pointIds && (op.elType === 'segment' || op.elType === 'line' || op.elType === 'circle')) {\n      op.pointIds.forEach((pointId: string) => {\n        const pointObj = (this.board.objects as any)[pointId]\n        if (pointObj && !this.isPointUsedElsewhere(pointId, pointObj)) {\n          try {\n            this.board.removeObject(pointObj as JXG.GeometryElement)\n          } catch (error) {\n            console.error('Failed to remove point:', error, pointId)\n          }\n        }\n      })\n    }\n  }\n\n  private performDelete(op: DeleteOp): void {\n    if (op._id) {\n      const target = (this.board.objects as any)[op._id]\n      if (target) {\n        this.board.removeObject(target as JXG.GeometryElement)\n        // Force board update to ensure object is removed immediately\n        this.board.update()\n      }\n    } else {\n      // If _id is missing, try to find and remove by matching defining points and attributes\n      this.removeByMatchingDefinition(op)\n      // Force board update after removing by matching\n      this.board.update()\n    }\n    \n    // Remove associated points if they're not used elsewhere\n    if (op.pointIds && (op.elType === 'segment' || op.elType === 'line' || op.elType === 'circle')) {\n      op.pointIds.forEach((pointId: string) => {\n        const pointObj = (this.board.objects as any)[pointId]\n        if (pointObj && !this.isPointUsedElsewhere(pointId, pointObj)) {\n          this.board.removeObject(pointObj as JXG.GeometryElement)\n        }\n      })\n      // Force board update after removing points\n      this.board.update()\n    }\n  }\n\n  private removeByMatchingDefinition(op: DeleteOp): void {\n    const objects = Object.values(this.board.objects) as any[]\n    \n    for (const obj of objects) {\n      if (obj.elType !== op.elType) continue\n      \n      let matches = false\n      \n      if (op.elType === 'point') {\n        const { x, y } = op.payload\n        matches = Math.abs(obj.X() - x) < this.EPS && Math.abs(obj.Y() - y) < this.EPS\n      } else if (op.elType === 'segment' || op.elType === 'line') {\n        const { p1, p2 } = op.payload\n        const a = obj.point1 || obj.A || obj.points?.[0]\n        const b = obj.point2 || obj.B || obj.points?.[1]\n        if (a && b) {\n          matches = Math.abs(a.X() - p1.x) < this.EPS && Math.abs(a.Y() - p1.y) < this.EPS &&\n                   Math.abs(b.X() - p2.x) < this.EPS && Math.abs(b.Y() - p2.y) < this.EPS\n        }\n      } else if (op.elType === 'circle') {\n        const { center, on } = op.payload\n        const c = obj.center || obj.midpoint || obj.points?.[0]\n        const p = obj.point2 || obj.points?.[1]\n        if (c) {\n          const centerMatches = Math.abs(c.X() - center.x) < this.EPS && Math.abs(c.Y() - center.y) < this.EPS\n          if (p) {\n            matches = centerMatches && Math.abs(p.X() - on.x) < this.EPS && Math.abs(p.Y() - on.y) < this.EPS\n          } else {\n            // For circles defined by center and radius\n            const R = (typeof obj.R === 'function' ? obj.R() : obj.radius) ?? 1\n            const expectedRadius = Math.hypot(on.x - center.x, on.y - center.y)\n            matches = centerMatches && Math.abs(R - expectedRadius) < this.EPS\n          }\n        }\n      }\n      \n      if (matches) {\n        this.board.removeObject(obj as JXG.GeometryElement)\n        break\n      }\n    }\n  }\n\n  private rollbackDelete(op: DeleteOp): void {\n    if (op.elType === 'point') {\n      const { x, y, attr } = op.payload\n      const pt = this.ensurePoint({ x, y }, attr)\n      if (!pt) return\n      op._id = pt.id\n      // Force board update to ensure point is created immediately\n      this.board.update()\n      return\n    }\n\n    if (op.elType === 'segment' || op.elType === 'line') {\n      const { p1, p2, attr } = op.payload\n      const a = this.getPointByIdOrNear(op.pointIds?.[0], p1) || this.ensurePoint(p1, attr)\n      const b = this.getPointByIdOrNear(op.pointIds?.[1], p2) || this.ensurePoint(p2, attr)\n      \n      const useCoords = !(this.isJXGPoint(a) && this.isJXGPoint(b))\n      const parents = useCoords ? [[p1.x, p1.y], [p2.x, p2.y]] : [a, b]\n      \n      try {\n        const el = this.board.create(op.elType, parents as any, attr)\n        op._id = (el as any).id\n        const pA: any = (el as any).point1 || (el as any).A || (el as any).points?.[0]\n        const pB: any = (el as any).point2 || (el as any).B || (el as any).points?.[1]\n        if (this.isJXGPoint(pA) && this.isJXGPoint(pB)) {\n          op.pointIds = [pA.id, pB.id]\n        }\n        // Attach shape tracking to the recreated element\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error(`Failed to recreate ${op.elType}:`, e, { parents })\n      }\n      return\n    }\n\n    if (op.elType === 'circle') {\n      const { center, on, attr } = op.payload\n      const c = this.getPointByIdOrNear(op.pointIds?.[0], center) || this.ensurePoint(center, attr)\n      const p = this.getPointByIdOrNear(op.pointIds?.[1], on) || this.ensurePoint(on, attr)\n\n      const useCoords = !(this.isJXGPoint(c) && this.isJXGPoint(p))\n      const parents = useCoords ? [[center.x, center.y], [on.x, on.y]] : [c, p]\n\n      try {\n        const el = this.board.create('circle', parents as any, attr)\n        op._id = (el as any).id\n        const pc: any = (el as any).center || (el as any).points?.[0]\n        const pp: any = (el as any).point2 || (el as any).points?.[1]\n        if (this.isJXGPoint(pc) && this.isJXGPoint(pp)) {\n          op.pointIds = [pc.id, pp.id]\n        }\n        // Attach shape tracking to the recreated circle element\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error('Failed to recreate circle:', e, { parents })\n      }\n      return\n    }\n  }\n\n  private performModify(op: ModifyOp): void {\n    const pointObj = (this.board.objects as any)[op.pointId]\n    if (pointObj) {\n      // Use moveTo instead of setPosition to avoid draggable function issues\n      try {\n        pointObj.moveTo([op.after.x, op.after.y])\n      } catch (e) {\n        // Fallback to direct coordinate setting\n        pointObj.coords.setCoordinates(JXG.COORDS_BY_USER, [op.after.x, op.after.y])\n        this.board.update()\n      }\n      this.setPointName(pointObj, op.after.name)\n    }\n  }\n\n  private rollbackModify(op: ModifyOp): void {\n    const pointObj = (this.board.objects as any)[op.pointId]\n    if (pointObj) {\n      // Use moveTo instead of setPosition to avoid draggable function issues\n      try {\n        pointObj.moveTo([op.before.x, op.before.y])\n      } catch (e) {\n        // Fallback to direct coordinate setting\n        pointObj.coords.setCoordinates(JXG.COORDS_BY_USER, [op.before.x, op.before.y])\n        this.board.update()\n      }\n      this.setPointName(pointObj, op.before.name)\n    }\n  }\n\n  private performBundle(op: BundleOp): void {\n    // Execute operations in forward order\n    for (const subOp of op.ops) {\n      if (subOp) {\n        try {\n          // Create a fresh copy of the operation to avoid stale IDs\n          const freshOp = structuredClone(subOp)\n          // Keep IDs intact - don't delete them\n          this.performOperation(freshOp)\n          // Write back the realized IDs to the original operation\n          if (freshOp.kind === 'create' || freshOp.kind === 'delete') {\n            const freshOpTyped = freshOp as CreateOp | DeleteOp\n            const subOpTyped = subOp as CreateOp | DeleteOp\n            if (freshOpTyped._id !== undefined) {\n              subOpTyped._id = freshOpTyped._id\n            }\n            if (freshOpTyped.pointIds !== undefined) {\n              subOpTyped.pointIds = freshOpTyped.pointIds\n            }\n          }\n        } catch (error) {\n          console.error('Error executing bundled operation:', error, subOp)\n          // Continue with other operations even if one fails\n        }\n      }\n    }\n    // Force board update after all bundle operations\n    this.board.update()\n  }\n\n  private rollbackBundle(op: BundleOp): void {\n    // Rollback operations in reverse order\n    for (let i = op.ops.length - 1; i >= 0; i--) {\n      const subOp = op.ops[i]\n      if (subOp) {\n        try {\n          // Create a fresh copy of the operation to avoid stale IDs\n          const freshOp = structuredClone(subOp)\n          // Keep IDs intact - don't delete them\n          this.rollbackOperation(freshOp)\n          // Write back the realized IDs to the original operation\n          if (freshOp.kind === 'create' || freshOp.kind === 'delete') {\n            const freshOpTyped = freshOp as CreateOp | DeleteOp\n            const subOpTyped = subOp as CreateOp | DeleteOp\n            if (freshOpTyped._id !== undefined) {\n              subOpTyped._id = freshOpTyped._id\n            }\n            if (freshOpTyped.pointIds !== undefined) {\n              subOpTyped.pointIds = freshOpTyped.pointIds\n            }\n          }\n        } catch (error) {\n          console.error('Error rolling back bundled operation:', error, subOp)\n          // Continue with other operations even if one fails\n        }\n      }\n    }\n    // Force board update after all bundle rollback operations\n    this.board.update()\n  }\n\n  private setPointName(pointObj: any, name: string): void {\n    const trimmed = (name || '').trim()\n    const pretty = this.toSubscript(trimmed)\n    pointObj.setAttribute({ name: pretty, withLabel: !!trimmed })\n    ;(pointObj as any)._rawName = trimmed\n  }\n\n  private toSubscript(name: string): string {\n    const map: Record<string, string> = { \n      '0': '₀', '1': '₁', '2': '₂', '3': '₃', '4': '₄', \n      '5': '₅', '6': '₆', '7': '₇', '8': '₈', '9': '₉' \n    }\n    return name.replace(/_(\\d+)/g, (_, d) => d.split('').map((ch: string) => map[ch] ?? ch).join(''))\n  }\n\n  private isPointUsedElsewhere(pointId: string, pointObj: any): boolean {\n    return Object.values(this.board.objects).some((otherObj: any) => {\n      if (otherObj === pointObj || otherObj.id === pointId) return false\n      if (otherObj.point1?.id === pointId || otherObj.point2?.id === pointId) return true\n      if (otherObj.center?.id === pointId) return true\n      if (otherObj.points && Array.isArray(otherObj.points)) {\n        return otherObj.points.some((p: any) => p?.id === pointId)\n      }\n      return false\n    })\n  }\n\n  // Helper methods for creating operations\n  public createPointOperation(x: number, y: number, attr: any = { name: '', size: 2, strokeColor: '#444', fillColor: '#666' }): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'point',\n      payload: { x, y, attr }\n    }\n  }\n\n  public createSegmentOperation(p1: { x: number; y: number }, p2: { x: number; y: number }, attr: any): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'segment',\n      payload: { p1, p2, attr }\n    }\n  }\n\n  public createLineOperation(p1: { x: number; y: number }, p2: { x: number; y: number }, attr: any): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'line',\n      payload: { p1, p2, attr }\n    }\n  }\n\n  public createCircleOperation(center: { x: number; y: number }, on: { x: number; y: number }, attr: any): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'circle',\n      payload: { center, on, attr }\n    }\n  }\n\n  public createDeleteOperation(obj: any): DeleteOp | null {\n    try {\n      const attr = this.getCommonAttr(obj)\n      if (obj.elType === 'point') {\n        return {\n          kind: 'delete',\n          elType: 'point',\n          payload: { x: obj.X(), y: obj.Y(), attr },\n          _id: obj.id\n        }\n      }\n      if (obj.elType === 'segment' || obj.elType === 'line') {\n        const a: any = obj.point1 || obj.A || obj.points?.[0]\n        const b: any = obj.point2 || obj.B || obj.points?.[1]\n        if (!a || !b) return null\n        return {\n          kind: 'delete',\n          elType: obj.elType,\n          payload: { p1: { x: a.X(), y: a.Y() }, p2: { x: b.X(), y: b.Y() }, attr },\n          _id: obj.id,\n          pointIds: [a.id, b.id]\n        }\n      }\n      if (obj.elType === 'circle') {\n        const c: any = obj.center || obj.midpoint || obj.points?.[0]\n        const p: any = obj.point2 || obj.points?.[1]\n        const center = c ? { x: c.X(), y: c.Y() } : { x: obj.center?.X?.() ?? 0, y: obj.center?.Y?.() ?? 0 }\n        let on\n        if (p) {\n          on = { x: p.X(), y: p.Y() }\n        } else {\n          const R = (typeof obj.R === 'function' ? obj.R() : obj.radius) ?? 1\n          on = { x: center.x + R, y: center.y }\n        }\n        return {\n          kind: 'delete',\n          elType: 'circle',\n          payload: { center, on, attr },\n          _id: obj.id,\n          pointIds: c && p ? [c.id, p.id] : []\n        }\n      }\n    } catch {\n      return null\n    }\n    return null\n  }\n\n  private getCommonAttr(o: any): any {\n    return {\n      name: o?._rawName ?? '',\n      withLabel: !!(o?.visProp?.withlabel || o?.visProp?.withLabel),\n      fixed: !!o?.visProp?.fixed,\n      size: o?.visProp?.size,\n      strokeColor: o?.visProp?.strokecolor ?? o?.visProp?.strokeColor,\n      strokeWidth: o?.visProp?.strokewidth ?? o?.visProp?.strokeWidth,\n      fillColor: o?.visProp?.fillcolor ?? o?.visProp?.fillColor,\n      dash: o?.visProp?.dash\n    }\n  }\n\n  // Helper methods for UI integration\n  public fromBoardDeleteUnderMouse(e: any): DeleteOp | null {\n    const under = this.board.getAllObjectsUnderMouse(e)\n    const o: any = under.find((x: any) => !x?.visProp?.fixed)\n    return o ? this.createDeleteOperation(o) : null\n  }\n\n  public createModifyOperation(pointId: string, before: { x: number; y: number; name: string }, after: { x: number; y: number; name: string }): ModifyOp {\n    return {\n      kind: 'modify',\n      pointId,\n      before,\n      after\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 977, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/measurement-scale.ts"],"sourcesContent":["// lib/measurement-scale.ts\n// Centralized logical measurement scale: 1 world unit = 1 cm\n\nexport const WORLD_PER_CM = 1\nexport const CM_PER_WORLD = 1 / WORLD_PER_CM\nexport const WORLD_PER_MM = WORLD_PER_CM / 10\n\nexport const UNIT_LABEL = 'cm'\n\nexport function toCm(valueInWorld: number): number {\n  return valueInWorld * CM_PER_WORLD\n}\n\nexport function fromCm(valueInCm: number): number {\n  return valueInCm * WORLD_PER_CM\n}\n\nexport function defaultBoundingBoxCm(widthCm: number, heightCm: number, marginCm = 0): [number, number, number, number] {\n  return [\n    0 - marginCm,\n    heightCm + marginCm,\n    widthCm + marginCm,\n    0 - marginCm\n  ]\n}\n\n/**\n * Calculate a bounding box in whole centimeters, centered at (0,0)\n * that fits within the given screen dimensions while maintaining aspect ratio.\n * \n * @param screenWidthPx Screen width in pixels\n * @param screenHeightPx Screen height in pixels\n * @param minSizeCm Minimum size in centimeters (default: 10cm)\n * @returns JSXGraph bounding box format: [left, top, right, bottom] where center is (0,0)\n */\nexport function calculateCenteredBoundingBoxCm(\n  screenWidthPx: number,\n  screenHeightPx: number,\n  minSizeCm: number = 10\n): [number, number, number, number] {\n  // Calculate aspect ratio\n  const screenAspect = screenWidthPx / screenHeightPx\n  \n  // Start with a reasonable default size\n  // We'll calculate whole centimeters that fit\n  const idealWidthCm = Math.max(minSizeCm, Math.floor(screenWidthPx / 30)) // ~30px per cm minimum\n  const idealHeightCm = Math.max(minSizeCm, Math.floor(screenHeightPx / 30))\n  \n  // Determine which dimension to constrain by\n  let widthCm: number\n  let heightCm: number\n  \n  if (screenAspect > 1) {\n    // Landscape: width is larger, constrain by height\n    heightCm = idealHeightCm\n    widthCm = Math.floor(heightCm * screenAspect)\n  } else {\n    // Portrait: height is larger, constrain by width\n    widthCm = idealWidthCm\n    heightCm = Math.floor(widthCm / screenAspect)\n  }\n  \n  // Ensure we have at least minSizeCm in both dimensions\n  widthCm = Math.max(widthCm, minSizeCm)\n  heightCm = Math.max(heightCm, minSizeCm)\n  \n  // Ensure both are whole centimeters (already are from Math.floor, but be explicit)\n  widthCm = Math.floor(widthCm)\n  heightCm = Math.floor(heightCm)\n  \n  // Create bounding box centered at (0,0)\n  // JSXGraph format: [left, top, right, bottom]\n  const halfWidth = widthCm / 2\n  const halfHeight = heightCm / 2\n  \n  return [\n    -halfWidth,  // left\n    halfHeight,  // top\n    halfWidth,   // right\n    -halfHeight  // bottom\n  ]\n}\n\n\n"],"names":[],"mappings":"AAAA,2BAA2B;AAC3B,6DAA6D;;;;;;;;;;;;;;;;;;;AAEtD,MAAM,eAAe;AACrB,MAAM,eAAe,IAAI;AACzB,MAAM,eAAe,eAAe;AAEpC,MAAM,aAAa;AAEnB,SAAS,KAAK,YAAoB;IACvC,OAAO,eAAe;AACxB;AAEO,SAAS,OAAO,SAAiB;IACtC,OAAO,YAAY;AACrB;AAEO,SAAS,qBAAqB,OAAe,EAAE,QAAgB;QAAE,WAAA,iEAAW;IACjF,OAAO;QACL,IAAI;QACJ,WAAW;QACX,UAAU;QACV,IAAI;KACL;AACH;AAWO,SAAS,+BACd,aAAqB,EACrB,cAAsB;QACtB,YAAA,iEAAoB;IAEpB,yBAAyB;IACzB,MAAM,eAAe,gBAAgB;IAErC,uCAAuC;IACvC,6CAA6C;IAC7C,MAAM,eAAe,KAAK,GAAG,CAAC,WAAW,KAAK,KAAK,CAAC,gBAAgB,KAAK,uBAAuB;;IAChG,MAAM,gBAAgB,KAAK,GAAG,CAAC,WAAW,KAAK,KAAK,CAAC,iBAAiB;IAEtE,4CAA4C;IAC5C,IAAI;IACJ,IAAI;IAEJ,IAAI,eAAe,GAAG;QACpB,kDAAkD;QAClD,WAAW;QACX,UAAU,KAAK,KAAK,CAAC,WAAW;IAClC,OAAO;QACL,iDAAiD;QACjD,UAAU;QACV,WAAW,KAAK,KAAK,CAAC,UAAU;IAClC;IAEA,uDAAuD;IACvD,UAAU,KAAK,GAAG,CAAC,SAAS;IAC5B,WAAW,KAAK,GAAG,CAAC,UAAU;IAE9B,mFAAmF;IACnF,UAAU,KAAK,KAAK,CAAC;IACrB,WAAW,KAAK,KAAK,CAAC;IAEtB,wCAAwC;IACxC,8CAA8C;IAC9C,MAAM,YAAY,UAAU;IAC5B,MAAM,aAAa,WAAW;IAE9B,OAAO;QACL,CAAC;QACD;QACA;QACA,CAAC,WAAY,SAAS;KACvB;AACH","debugId":null}},
    {"offset": {"line": 1061, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/grid-manager.ts"],"sourcesContent":["// lib/grid-manager.ts\nimport JXG from 'jsxgraph'\nimport { WORLD_PER_CM, WORLD_PER_MM } from './measurement-scale'\n\nexport type GridMode = 'none' | 'major' | 'minor' | 'major-minor' | 'dot'\ntype JBoard = JXG.Board & { renderer: any }\n\nexport class GridManager {\n  private gridLines: any[] = []\n  private mode: GridMode = 'none'\n  private dotStep = WORLD_PER_MM // world units (1 mm)\n  private container: HTMLElement\n\n  constructor(private board: JBoard, container: HTMLElement) {\n    this.container = container\n    // ensure background sits below the canvas\n    this.container.style.position = this.container.style.position || 'relative'\n  }\n\n  setMode(mode: GridMode) {\n    if (this.mode === mode) return\n    this.mode = mode\n    this.clearAll()\n    switch (mode) {\n      case 'none':\n        this.applyDot(false)\n        break\n      case 'major':\n        this.createLineGrid(WORLD_PER_CM, '#e5e7eb', 1)\n        this.applyDot(false)\n        break\n      case 'minor':\n        this.createLineGrid(WORLD_PER_MM, '#f3f4f6', 0.5)\n        this.applyDot(false)\n        break\n      case 'major-minor':\n        this.createLineGrid(WORLD_PER_MM, '#f3f4f6', 0.5)\n        this.createLineGrid(WORLD_PER_CM, '#d1d5db', 1)\n        this.applyDot(false)\n        break\n      case 'dot':\n        this.applyDot(true)\n        break\n    }\n    this.board.update()\n  }\n\n  setDotStep(stepWorldUnits: number) {\n    this.dotStep = Math.max(0.1, stepWorldUnits)\n    if (this.mode === 'dot') this.applyDot(true)\n  }\n\n  /** Keep the dot background in sync with pixel scaling */\n  sync() {\n    if (this.mode !== 'dot') return\n    this.applyDot(true)\n  }\n\n  private createLineGrid(step: number, color: string, strokeWidth: number) {\n    const bbox = this.board.getBoundingBox()\n    // Ensure a shared Set on the board to track grid object ids\n    const gridIds: Set<string> = ((this.board as any).__gridIds ||= new Set<string>())\n    \n    // Create vertical lines\n    for (let x = bbox[0]; x <= bbox[2]; x += step) {\n      const line = this.board.create('line', [[x, bbox[1]], [x, bbox[3]]], {\n        strokeColor: color,\n        strokeWidth: strokeWidth,\n        fixed: true,\n        highlight: false,\n        layer: 0,\n        withLabel: false,\n        showInfobox: false,\n        visible: true,\n        trace: false,\n        track: false,\n        draggable: false\n      })\n      try { gridIds.add((line as any).id as string) } catch {}\n      try {\n        ((line as any).visProp ||= {}).pointerEvents = 'none'\n        const node = (line as any).rendNode\n        if (node) node.style.pointerEvents = 'none'\n      } catch {}\n      this.gridLines.push(line)\n    }\n    \n    // Create horizontal lines\n    for (let y = bbox[3]; y <= bbox[1]; y += step) {\n      const line = this.board.create('line', [[bbox[0], y], [bbox[2], y]], {\n        strokeColor: color,\n        strokeWidth: strokeWidth,\n        fixed: true,\n        highlight: false,\n        layer: 0,\n        withLabel: false,\n        showInfobox: false,\n        visible: true,\n        trace: false,\n        track: false,\n        draggable: false\n      })\n      try { gridIds.add((line as any).id as string) } catch {}\n      try {\n        ((line as any).visProp ||= {}).pointerEvents = 'none'\n        const node = (line as any).rendNode\n        if (node) node.style.pointerEvents = 'none'\n      } catch {}\n      this.gridLines.push(line)\n    }\n  }\n\n  private clearAll() {\n    const gridIds: Set<string> | undefined = (this.board as any).__gridIds\n    this.gridLines.forEach(line => {\n      try { this.board.removeObject(line) } catch {}\n      try { gridIds?.delete((line as any).id as string) } catch {}\n    })\n    this.gridLines = []\n  }\n\n  private applyDot(enabled: boolean) {\n    if (!enabled) {\n      this.container.style.backgroundImage = ''\n      this.container.style.backgroundSize = ''\n      this.container.style.backgroundPosition = ''\n      return\n    }\n    // Convert world units to pixels using board.unitX/unitY\n    const pxX = this.dotStep * this.board.unitX\n    const pxY = this.dotStep * this.board.unitY\n    // Subtle dot (1px) using radial gradient\n    this.container.style.backgroundImage =\n      'radial-gradient(circle, #e5e7eb 1px, transparent 1px)'\n    this.container.style.backgroundSize = `${pxX}px ${pxY}px`\n    // Keep the pattern aligned to the origin\n    // If you allow pan/zoom, you could compute an offset from the bbox.\n    this.container.style.backgroundPosition = `0 0`\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1233, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/board-manager.ts"],"sourcesContent":["// lib/board-manager.ts\nimport JXG from 'jsxgraph'\nimport { GridManager, GridMode } from './grid-manager'\n\nexport type JBoard = JXG.Board & { renderer: any }\n\nexport interface BoardOptions {\n  boundingbox?: [number, number, number, number]\n  axis?: boolean\n  showNavigation?: boolean\n  showCopyright?: boolean\n  grid?: boolean\n  pan?: { enabled: boolean }\n  zoom?: boolean\n  keepaspectratio?: boolean\n}\n\nexport interface BoardManagerOptions extends BoardOptions {\n  container: HTMLElement\n  defaultGridMode?: GridMode\n}\n\nexport class BoardManager {\n  private board: JBoard | null = null\n  private gridManager: GridManager | null = null\n  private container: HTMLElement | null = null\n  private options: BoardOptions\n\n  constructor(options: BoardManagerOptions) {\n    this.container = options.container\n    const { container, defaultGridMode, ...boardOptions } = options\n    this.options = {\n      boundingbox: [-1, 8, 11, -1],\n      axis: false,\n      showNavigation: false,\n      showCopyright: false,\n      grid: false,\n      pan: { enabled: false },\n      zoom: false,\n      keepaspectratio: true,\n      ...boardOptions\n    }\n    this.init(boardOptions, defaultGridMode)\n  }\n\n  private init(boardOptions: BoardOptions, defaultGridMode?: GridMode) {\n    if (!this.container) {\n      throw new Error('Container element is required')\n    }\n\n    if (this.board) {\n      throw new Error('Board already initialized')\n    }\n\n    // Create board\n    this.board = JXG.JSXGraph.initBoard(this.container, {\n      ...this.options,\n      ...boardOptions\n    }) as JBoard\n\n    // Create grid manager\n    this.gridManager = new GridManager(this.board, this.container)\n\n    // Set initial grid mode if provided\n    if (defaultGridMode) {\n      this.gridManager.setMode(defaultGridMode)\n    }\n\n    // Set up global event wiring for future pan/zoom support\n    // This can be extended later for pan/zoom functionality\n    this.setupGlobalEvents()\n  }\n\n  /**\n   * Get the board instance (typed getter)\n   */\n  getBoard(): JBoard {\n    if (!this.board) {\n      throw new Error('Board not initialized')\n    }\n    return this.board\n  }\n\n  /**\n   * Get the grid manager instance\n   */\n  getGridManager(): GridManager {\n    if (!this.gridManager) {\n      throw new Error('GridManager not initialized')\n    }\n    return this.gridManager\n  }\n\n  /**\n   * Set grid mode via GridManager\n   */\n  setGridMode(mode: GridMode) {\n    this.gridManager?.setMode(mode)\n  }\n\n  /**\n   * Setup global event wiring (for later pan/zoom support)\n   */\n  private setupGlobalEvents() {\n    if (!this.board) return\n\n    // If you ever enable pan/zoom, keep the dot grid in sync:\n    // this.board.on('boundingbox', () => {\n    //   this.gridManager?.sync()\n    // })\n\n    // Add other global event handlers here as needed\n  }\n\n  /**\n   * Update board options (for dynamic changes like pan/zoom)\n   */\n  updateOptions(options: Partial<BoardOptions>) {\n    if (!this.board) {\n      throw new Error('Board not initialized')\n    }\n    this.options = { ...this.options, ...options }\n    // Apply options to board as needed\n    // Note: Some options may require board recreation\n  }\n\n  /**\n   * Free the board and clean up resources\n   */\n  free() {\n    if (this.board) {\n      try {\n        JXG.JSXGraph.freeBoard(this.board)\n      } catch (e) {\n        // Ignore errors during cleanup\n      }\n      this.board = null\n    }\n    this.gridManager = null\n    this.container = null\n  }\n}\n\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;;;AACvB;AACA;;;;AAoBO,MAAM;IAuBH,KAAK,YAA0B,EAAE,eAA0B,EAAE;QACnE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,MAAM,IAAI,MAAM;QAClB;QAEA,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,MAAM,IAAI,MAAM;QAClB;QAEA,eAAe;QACf,IAAI,CAAC,KAAK,GAAG,sLAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE;YAClD,GAAG,IAAI,CAAC,OAAO;YACf,GAAG,YAAY;QACjB;QAEA,sBAAsB;QACtB,IAAI,CAAC,WAAW,GAAG,IAAI,wKAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS;QAE7D,oCAAoC;QACpC,IAAI,iBAAiB;YACnB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;QAC3B;QAEA,yDAAyD;QACzD,wDAAwD;QACxD,IAAI,CAAC,iBAAiB;IACxB;IAEA;;GAEC,GACD,WAAmB;QACjB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA;;GAEC,GACD,iBAA8B;QAC5B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,IAAI,CAAC,WAAW;IACzB;IAEA;;GAEC,GACD,YAAY,IAAc,EAAE;YAC1B;SAAA,oBAAA,IAAI,CAAC,WAAW,cAAhB,wCAAA,kBAAkB,OAAO,CAAC;IAC5B;IAEA;;GAEC,GACD,AAAQ,oBAAoB;QAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;IAEjB,0DAA0D;IAC1D,uCAAuC;IACvC,6BAA6B;IAC7B,KAAK;IAEL,iDAAiD;IACnD;IAEA;;GAEC,GACD,cAAc,OAA8B,EAAE;QAC5C,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,CAAC,OAAO,GAAG;YAAE,GAAG,IAAI,CAAC,OAAO;YAAE,GAAG,OAAO;QAAC;IAC7C,mCAAmC;IACnC,kDAAkD;IACpD;IAEA;;GAEC,GACD,OAAO;QACL,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI;gBACF,sLAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK;YACnC,EAAE,OAAO,GAAG;YACV,+BAA+B;YACjC;YACA,IAAI,CAAC,KAAK,GAAG;QACf;QACA,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,SAAS,GAAG;IACnB;IAhHA,YAAY,OAA4B,CAAE;QAL1C,+MAAQ,SAAuB;QAC/B,+MAAQ,eAAkC;QAC1C,+MAAQ,aAAgC;QACxC,+MAAQ,WAAR,KAAA;QAGE,IAAI,CAAC,SAAS,GAAG,QAAQ,SAAS;QAClC,MAAM,EAAE,SAAS,EAAE,eAAe,EAAE,GAAG,cAAc,GAAG;QACxD,IAAI,CAAC,OAAO,GAAG;YACb,aAAa;gBAAC,CAAC;gBAAG;gBAAG;gBAAI,CAAC;aAAE;YAC5B,MAAM;YACN,gBAAgB;YAChB,eAAe;YACf,MAAM;YACN,KAAK;gBAAE,SAAS;YAAM;YACtB,MAAM;YACN,iBAAiB;YACjB,GAAG,YAAY;QACjB;QACA,IAAI,CAAC,IAAI,CAAC,cAAc;IAC1B;AAkGF","debugId":null}},
    {"offset": {"line": 1361, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/geometry-factory.ts"],"sourcesContent":["// lib/geometry-factory.ts\nimport JXG from 'jsxgraph'\nimport { JBoard } from './board-manager'\nimport { GridMode } from './grid-manager'\nimport { WORLD_PER_MM, WORLD_PER_CM } from './measurement-scale'\n\nexport type CreateAttrs = Partial<JXG.Options>\n\nexport class GeometryFactory {\n  constructor(private board: JBoard) {}\n\n  /**\n   * Get snap size based on grid mode\n   */\n  getSnapSize(gridMode: GridMode): number {\n    if (gridMode === 'none') return WORLD_PER_MM\n    if (gridMode === 'minor') return WORLD_PER_MM\n    return WORLD_PER_CM\n  }\n\n  /**\n   * Get EPS for finding nearby points based on grid mode\n   */\n  getNearbyEps(gridMode: GridMode, baseEps: number = 0.05): number {\n    const snapSize = this.getSnapSize(gridMode)\n    return Math.max(baseEps, snapSize * 0.8)\n  }\n\n  point(x: number, y: number, snap = false, attrs: CreateAttrs = {}) {\n    const pt = this.board.create('point', [x, y], {\n      name: '', size: 2, strokeColor: '#444', fillColor: '#666',\n      snapToGrid: false,\n      ...attrs\n    })\n    ;(pt as any)._rawName = ''\n    return pt\n  }\n\n  /**\n   * Create a point with grid-aware snap settings\n   */\n  pointWithGrid(x: number, y: number, gridMode: GridMode, attrs: CreateAttrs = {}) {\n    // Always disable snapping for user-created points\n    return this.point(x, y, false, attrs)\n  }\n\n  segment(a: any, b: any, attrs: CreateAttrs = {}) {\n    return this.board.create('segment', [a, b], {\n      strokeColor:'#2563eb', strokeWidth:2, ...attrs\n    })\n  }\n\n  line(a: any, b: any, attrs: CreateAttrs = {}) {\n    return this.board.create('line', [a, b], {\n      strokeColor:'#059669', strokeWidth:1, dash:1, ...attrs\n    })\n  }\n\n  circle(center: any, on: any, attrs: CreateAttrs = {}) {\n    return this.board.create('circle', [center, on], {\n      strokeColor:'#dc2626', strokeWidth:2, ...attrs\n    })\n  }\n\n  findNearbyPoint(x: number, y: number, eps: number) {\n    const objs = Object.values(this.board.objects) as any[]\n    return objs.find(o => o?.elType === 'point' && !o.visProp?.fixed &&\n      Math.hypot(o.X() - x, o.Y() - y) <= eps) || null\n  }\n}\n\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;;AAI1B;;;AAIO,MAAM;IAGX;;GAEC,GACD,YAAY,QAAkB,EAAU;QACtC,IAAI,aAAa,QAAQ,OAAO,8KAAY;QAC5C,IAAI,aAAa,SAAS,OAAO,8KAAY;QAC7C,OAAO,8KAAY;IACrB;IAEA;;GAEC,GACD,aAAa,QAAkB,EAAkC;YAAhC,UAAA,iEAAkB;QACjD,MAAM,WAAW,IAAI,CAAC,WAAW,CAAC;QAClC,OAAO,KAAK,GAAG,CAAC,SAAS,WAAW;IACtC;IAEA,MAAM,CAAS,EAAE,CAAS,EAAyC;YAAvC,OAAA,iEAAO,OAAO,QAAA,iEAAqB,CAAC;QAC9D,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS;YAAC;YAAG;SAAE,EAAE;YAC5C,MAAM;YAAI,MAAM;YAAG,aAAa;YAAQ,WAAW;YACnD,YAAY;YACZ,GAAG,KAAK;QACV;QACE,GAAW,QAAQ,GAAG;QACxB,OAAO;IACT;IAEA;;GAEC,GACD,cAAc,CAAS,EAAE,CAAS,EAAE,QAAkB,EAA2B;YAAzB,QAAA,iEAAqB,CAAC;QAC5E,kDAAkD;QAClD,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO;IACjC;IAEA,QAAQ,CAAM,EAAE,CAAM,EAA2B;YAAzB,QAAA,iEAAqB,CAAC;QAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW;YAAC;YAAG;SAAE,EAAE;YAC1C,aAAY;YAAW,aAAY;YAAG,GAAG,KAAK;QAChD;IACF;IAEA,KAAK,CAAM,EAAE,CAAM,EAA2B;YAAzB,QAAA,iEAAqB,CAAC;QACzC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;YAAC;YAAG;SAAE,EAAE;YACvC,aAAY;YAAW,aAAY;YAAG,MAAK;YAAG,GAAG,KAAK;QACxD;IACF;IAEA,OAAO,MAAW,EAAE,EAAO,EAA2B;YAAzB,QAAA,iEAAqB,CAAC;QACjD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU;YAAC;YAAQ;SAAG,EAAE;YAC/C,aAAY;YAAW,aAAY;YAAG,GAAG,KAAK;QAChD;IACF;IAEA,gBAAgB,CAAS,EAAE,CAAS,EAAE,GAAW,EAAE;QACjD,MAAM,OAAO,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO;QAC7C,OAAO,KAAK,IAAI,CAAC,CAAA;gBAA+B;mBAA1B,CAAA,cAAA,wBAAA,EAAG,MAAM,MAAK,WAAW,GAAC,aAAA,EAAE,OAAO,cAAT,iCAAA,WAAW,KAAK,KAC9D,KAAK,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,MAAM;cAAQ;IAChD;IA3DA,YAAY,AAAQ,KAAa,CAAE;;aAAf,QAAA;IAAgB;AA4DtC","debugId":null}},
    {"offset": {"line": 1461, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/selection-manager.ts"],"sourcesContent":["// lib/selection-manager.ts\n/**\n * SelectionManager - manages temporary selection state for multi-step tools\n * \n * Responsibility: hold \"first click\" temporary selection, expose select, clear, getFirst.\n * Why: simplifies selected state + refs and makes it tool-agnostic.\n */\n\nexport class SelectionManager {\n  private first: any = null\n\n  /**\n   * Select an item (typically used for first click in multi-step tools)\n   */\n  select(item: any): void {\n    this.first = item\n  }\n\n  /**\n   * Get the first selected item (for two-click tools like segment/line/circle)\n   */\n  getFirst(): any {\n    return this.first\n  }\n\n  /**\n   * Clear the selection\n   */\n  clear(): void {\n    this.first = null\n  }\n\n  /**\n   * Check if there is a selection\n   */\n  hasSelection(): boolean {\n    return this.first !== null\n  }\n\n  /**\n   * Get all selected items (for potential future multi-selection support)\n   * Currently returns array with first item or empty array\n   */\n  getAll(): any[] {\n    return this.first ? [this.first] : []\n  }\n}\n\n"],"names":[],"mappings":"AAAA,2BAA2B;AAC3B;;;;;CAKC;;;;;;AAEM,MAAM;IAGX;;GAEC,GACD,OAAO,IAAS,EAAQ;QACtB,IAAI,CAAC,KAAK,GAAG;IACf;IAEA;;GAEC,GACD,WAAgB;QACd,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA;;GAEC,GACD,QAAc;QACZ,IAAI,CAAC,KAAK,GAAG;IACf;IAEA;;GAEC,GACD,eAAwB;QACtB,OAAO,IAAI,CAAC,KAAK,KAAK;IACxB;IAEA;;;GAGC,GACD,SAAgB;QACd,OAAO,IAAI,CAAC,KAAK,GAAG;YAAC,IAAI,CAAC,KAAK;SAAC,GAAG,EAAE;IACvC;;QApCA,+MAAQ,SAAa;;AAqCvB","debugId":null}},
    {"offset": {"line": 1513, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/rename-manager.ts"],"sourcesContent":["import JXG from 'jsxgraph'\n\n// Keep your local JBoard type in one place\nexport type JBoard = JXG.Board & { renderer: any }\n\nexport interface RenameManagerOptions {\n\t/** Max movement (world units) to still treat the interaction as a \"click\" */\n\tclickEps?: number\n\t/** Prompt label shown to the user */\n\tpromptLabel?: string\n\t/** Called after a successful rename (consumer can push an undo op) */\n\tonRenamed?: (args: { pointId: string; beforeRaw: string; afterRaw: string }) => void\n\t/** If true, board.update() is called after rename (default: true) */\n\tupdateBoard?: boolean\n\t/**\n\t * Return true to allow the event to trigger rename mode.\n\t * Useful to ignore clicks on your \"physical tools\" overlay etc.\n\t */\n\teventGuard?: (ev: any) => boolean\n}\n\nexport class RenameManager {\n\tprivate brd: JBoard\n\tprivate opts: Required<RenameManagerOptions>\n\tprivate enabled = false\n\n\t// internal state for down/up logic\n\tprivate armed: { pt: any | null; wasFixed: boolean } = { pt: null, wasFixed: false }\n\tprivate downPos: { x: number; y: number } | null = null\n\n\t// handlers references so we can cleanly detach\n\tprivate downHandler: ((e: any) => void) | null = null\n\tprivate upHandler: ((e: any) => void) | null = null\n\n\tconstructor(board: JBoard, options?: RenameManagerOptions) {\n\t\tthis.brd = board\n\t\tthis.opts = {\n\t\t\tclickEps: options?.clickEps ?? 0.12,\n\t\t\tpromptLabel: options?.promptLabel ?? 'Název bodu (např. A, B, C, A_1, A_2):',\n\t\t\tonRenamed: options?.onRenamed ?? (() => {}),\n\t\t\tupdateBoard: options?.updateBoard ?? true,\n\t\t\teventGuard: options?.eventGuard ?? defaultEventGuard,\n\t\t}\n\t}\n\n\t/** Attach event listeners */\n\tenable() {\n\t\tif (this.enabled) return\n\t\tthis.enabled = true\n\n\t\tthis.downHandler = (e: any) => {\n\t\t\tif (!this.opts.eventGuard(e)) return\n\n\t\t\tconst pt = this.pointUnder(e) as any\n\t\t\tif (!pt) return\n\n\t\t\t// Freeze to prevent accidental drags while we decide if it's a click\n\t\t\tconst wasFixed = !!pt.visProp.fixed\n\t\t\tpt.setAttribute({ fixed: true })\n\n\t\t\tthis.armed = { pt, wasFixed }\n\t\t\tthis.downPos = this.getMouseXY(e)\n\n\t\t\t// stop normal board interaction for this click\n\t\t\tstopEvent(e)\n\t\t}\n\n\t\tthis.upHandler = (e: any) => {\n\t\t\tif (!this.armed.pt) return\n\t\t\tconst up = this.getMouseXY(e)\n\t\t\tconst down = this.downPos ?? up\n\t\t\tconst moved = Math.hypot(up.x - down.x, up.y - down.y)\n\n\t\t\tif (moved <= this.opts.clickEps) {\n\t\t\t\t// Treat as click -> prompt & rename\n\t\t\t\tthis.promptAndRename(this.armed.pt, e)\n\t\t\t} else {\n\t\t\t\t// Treat as drag -> restore and do nothing\n\t\t\t\tthis.armed.pt.setAttribute({ fixed: this.armed.wasFixed })\n\t\t\t}\n\n\t\t\t// clear arm\n\t\t\tthis.armed = { pt: null, wasFixed: false }\n\t\t\tthis.downPos = null\n\t\t}\n\n\t\tthis.brd.on('down', this.downHandler)\n\t\tthis.brd.on('up', this.upHandler)\n\t}\n\n\t/** Detach event listeners */\n\tdisable() {\n\t\tif (!this.enabled) return\n\t\tthis.enabled = false\n\t\ttry {\n\t\t\tif (this.downHandler) this.brd.off('down', this.downHandler)\n\t\t\tif (this.upHandler) this.brd.off('up', this.upHandler)\n\t\t} catch {}\n\t\tthis.downHandler = null\n\t\tthis.upHandler = null\n\t\tthis.armed = { pt: null, wasFixed: false }\n\t\tthis.downPos = null\n\t}\n\n\ttoggle() {\n\t\tthis.enabled ? this.disable() : this.enable()\n\t}\n\n\tdestroy() {\n\t\tthis.disable()\n\t}\n\n\t// ---------- helpers ----------\n\n\tprivate getMouseXY(e: any) {\n\t\tconst c = this.brd.getUsrCoordsOfMouse(e)\n\t\treturn { x: c[0], y: c[1] }\n\t}\n\n\tprivate pointUnder(e: any) {\n\t\tconst under = this.brd.getAllObjectsUnderMouse(e)\n\t\treturn under.find((o: any) => o.elType === 'point') || null\n\t}\n\n\tprivate isNameTaken(raw: string, exceptId?: string) {\n\t\tfor (const key in this.brd.objects) {\n\t\t\tconst o: any = (this.brd.objects as any)[key]\n\t\t\tif (o?.elType === 'point' && o.id !== exceptId) {\n\t\t\t\tif ((o._rawName ?? '') === raw) return true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\n\tprivate toSubscript(name: string) {\n\t\tconst map: Record<string, string> = {\n\t\t\t'0': '₀', '1': '₁', '2': '₂', '3': '₃', '4': '₄',\n\t\t\t'5': '₅', '6': '₆', '7': '₇', '8': '₈', '9': '₉',\n\t\t}\n\t\treturn (name || '').replace(/_(\\d+)/g, (_: string, d: string) => d.split('').map((ch: string) => map[ch] ?? ch).join(''))\n\t}\n\n\tprivate normalizeAndApplyName(pt: any, raw: string) {\n\t\tconst trimmed = (raw || '').trim()\n\t\tconst pretty = this.toSubscript(trimmed)\n\t\tpt.setAttribute({ name: pretty, withLabel: !!trimmed })\n\t\tpt._rawName = trimmed\n\t}\n\n\tprivate promptAndRename(pt: any, e: any) {\n\t\tconst beforeRaw = pt._rawName || ''\n\t\tlet proposed = (window.prompt(this.opts.promptLabel, beforeRaw) ?? '').trim()\n\n\t\t// Deduplicate if necessary\n\t\tif (proposed) {\n\t\t\tif (this.isNameTaken(proposed, pt.id)) {\n\t\t\t\tlet i = 2\n\t\t\t\twhile (this.isNameTaken(`${proposed}_${i}`, pt.id)) i++\n\t\t\t\tproposed = `${proposed}_${i}`\n\t\t\t}\n\t\t}\n\n\t\tthis.normalizeAndApplyName(pt, proposed)\n\n\t\t// Restore mobility\n\t\tpt.setAttribute({ fixed: this.armed.wasFixed })\n\n\t\t// Push the rename event upward for undo/redo\n\t\tthis.opts.onRenamed({\n\t\t\tpointId: pt.id,\n\t\t\tbeforeRaw,\n\t\t\tafterRaw: proposed || '',\n\t\t})\n\n\t\tif (this.opts.updateBoard) this.brd.update()\n\n\t\t// stop this click from leaking into normal handlers\n\t\tstopEvent(e)\n\t}\n}\n\n// ---------- small utilities ----------\n\nfunction stopEvent(e: any) {\n\tif (e?.originalEvent) {\n\t\te.originalEvent.stopPropagation?.()\n\t\te.originalEvent.preventDefault?.()\n\t}\n}\n\n/** Default guard: ignore clicks on anything inside your physical tools (elements with .group) */\nfunction defaultEventGuard(e: any) {\n\tconst t = e?.originalEvent?.target as HTMLElement | null\n\tif (!t) return true\n\treturn !(t.closest('.group') || t.classList?.contains('group'))\n}\n\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1707, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/hooks/useBoardScale.ts"],"sourcesContent":["import { useCallback } from 'react'\nimport { calculateCenteredBoundingBoxCm } from '../../lib/measurement-scale'\n\nexport function useBoardScale(ref: React.RefObject<HTMLDivElement | null>) {\n  const get = useCallback(() => {\n    const box = ref.current?.closest('.jxgbox') as HTMLElement | null\n    if (!box) {\n      // Fallback with default bounding box\n      const [left, top, right, bottom] = calculateCenteredBoundingBoxCm(800, 500)\n      const unitsX = right - left\n      const unitsY = top - bottom\n      return { \n        pxPerUnitX: 50, \n        pxPerUnitY: 50, \n        uniformScale: 50,\n        boardLeft: left,\n        boardTop: top,\n        boardRight: right,\n        boardBottom: bottom,\n        boardWidth: unitsX,\n        boardHeight: unitsY\n      }\n    }\n    \n    const { width: w, height: h } = box.getBoundingClientRect()\n    \n    // Calculate bounding box in whole centimeters, centered at (0,0)\n    const [left, top, right, bottom] = calculateCenteredBoundingBoxCm(w, h)\n    const unitsX = right - left\n    const unitsY = top - bottom\n    \n    // Calculate uniform scale to maintain aspect ratio\n    const scaleX = w / unitsX\n    const scaleY = h / unitsY\n    const uniformScale = Math.min(scaleX, scaleY)\n    \n    return { \n      pxPerUnitX: uniformScale, \n      pxPerUnitY: uniformScale, \n      uniformScale,\n      boardLeft: left,\n      boardTop: top,\n      boardRight: right,\n      boardBottom: bottom,\n      boardWidth: unitsX,\n      boardHeight: unitsY\n    }\n  }, [ref])\n  \n  return get\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEO,SAAS,cAAc,GAA2C;;IACvE,MAAM,MAAM,IAAA,4MAAW;0CAAC;gBACV;YAAZ,MAAM,OAAM,eAAA,IAAI,OAAO,cAAX,mCAAA,aAAa,OAAO,CAAC;YACjC,IAAI,CAAC,KAAK;gBACR,qCAAqC;gBACrC,MAAM,CAAC,MAAM,KAAK,OAAO,OAAO,GAAG,IAAA,gMAA8B,EAAC,KAAK;gBACvE,MAAM,SAAS,QAAQ;gBACvB,MAAM,SAAS,MAAM;gBACrB,OAAO;oBACL,YAAY;oBACZ,YAAY;oBACZ,cAAc;oBACd,WAAW;oBACX,UAAU;oBACV,YAAY;oBACZ,aAAa;oBACb,YAAY;oBACZ,aAAa;gBACf;YACF;YAEA,MAAM,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,GAAG,IAAI,qBAAqB;YAEzD,iEAAiE;YACjE,MAAM,CAAC,MAAM,KAAK,OAAO,OAAO,GAAG,IAAA,gMAA8B,EAAC,GAAG;YACrE,MAAM,SAAS,QAAQ;YACvB,MAAM,SAAS,MAAM;YAErB,mDAAmD;YACnD,MAAM,SAAS,IAAI;YACnB,MAAM,SAAS,IAAI;YACnB,MAAM,eAAe,KAAK,GAAG,CAAC,QAAQ;YAEtC,OAAO;gBACL,YAAY;gBACZ,YAAY;gBACZ;gBACA,WAAW;gBACX,UAAU;gBACV,YAAY;gBACZ,aAAa;gBACb,YAAY;gBACZ,aAAa;YACf;QACF;yCAAG;QAAC;KAAI;IAER,OAAO;AACT;GA/CgB","debugId":null}},
    {"offset": {"line": 1773, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/DraggableRuler.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react'\nimport { useBoardScale } from '../hooks/useBoardScale'\n\ninterface DraggableRulerProps {\n  x: number\n  y: number\n  rotation: number\n  length: number\n  onPositionChange: (x: number, y: number, rotation: number, length: number) => void\n  isActive: boolean\n  onActivate: () => void\n  onUiBusyChange: (busy: boolean) => void\n}\n\nexport default function DraggableRuler({\n  x,\n  y,\n  rotation,\n  length,\n  onPositionChange,\n  isActive,\n  onActivate,\n  onUiBusyChange\n}: DraggableRulerProps) {\n  const [isDragging, setIsDragging] = useState(false)\n  const [isRotating, setIsRotating] = useState(false)\n  const [isResizing, setIsResizing] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 })\n  const [rotationStart, setRotationStart] = useState({ x: 0, y: 0, rotation: 0, initialAngle: 0 })\n  const [resizeStart, setResizeStart] = useState({ x: 0, y: 0, length: 0 })\n  const rulerRef = useRef<HTMLDivElement>(null)\n  const getScale = useBoardScale(rulerRef)\n  const { pxPerUnitX, pxPerUnitY } = getScale()\n  const pxPerUnit = Math.min(pxPerUnitX, pxPerUnitY)\n\n  // Memoized coordinate conversion functions for better performance\n  const coordinateConverter = useMemo(() => {\n    const scaleInfo = getScale()\n    const { boardLeft, boardTop, boardRight, boardBottom, boardWidth, boardHeight } = scaleInfo\n    \n    return {\n      boardToScreen: (boardX: number, boardY: number) => {\n        // Get actual container dimensions\n        const container = rulerRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const screenX = ((boardX - boardLeft) / boardWidth) * containerWidth\n        const screenY = containerHeight - ((boardY - boardBottom) / boardHeight) * containerHeight\n        \n        return { x: screenX, y: screenY }\n      },\n      screenToBoard: (screenX: number, screenY: number) => {\n        const container = rulerRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const boardX = (screenX / containerWidth) * boardWidth + boardLeft\n        const boardY = boardTop - (screenY / containerHeight) * boardHeight\n        \n        return { x: boardX, y: boardY }\n      }\n    }\n  }, [getScale])\n\n  const boardToScreen = coordinateConverter.boardToScreen\n  const screenToBoard = coordinateConverter.screenToBoard\n\n  // Helper functions for rotation with gain\n  const shortestDelta = (a: number, b: number) => {\n    return ((b - a + 540) % 360) - 180\n  }\n\n  const angleDeg = (px: number, py: number, mx: number, my: number) => {\n    return Math.atan2(my - py, mx - px) * 180 / Math.PI\n  }\n\n  const clamp = (v: number, lo: number, hi: number) => {\n    return Math.max(lo, Math.min(hi, v))\n  }\n\n  const screenPos = boardToScreen(x, y)\n\n  // Smooth movement without grid snapping\n  const smoothPosition = (boardX: number, boardY: number) => {\n    return { x: boardX, y: boardY }\n  }\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from ruler center to mouse position\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const initialAngle = Math.atan2(e.clientY - centerY, e.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: e.clientX, y: e.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: e.clientX, y: e.clientY, length })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    }\n  }\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const touch = e.touches[0]\n    if (!touch) return\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from ruler center to touch position\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const initialAngle = Math.atan2(touch.clientY - centerY, touch.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: touch.clientX, y: touch.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: touch.clientX, y: touch.clientY, length })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    }\n  }\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDragging) {\n      const newScreenX = e.clientX - dragStart.x\n      const newScreenY = e.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, length)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      \n      // Calculate current angle from center to mouse\n      const currentAngle = angleDeg(centerX, centerY, e.clientX, e.clientY)\n      \n      // Calculate the difference from the initial angle using shortest path\n      const delta = shortestDelta(rotationStart.initialAngle, currentAngle)\n      \n      // Compute radius from center to cursor (in px)\n      const r = Math.hypot(e.clientX - centerX, e.clientY - centerY)\n      \n      // Gain: tune these numbers; e.g., 120/r gives ~1.2x at r=100px, ~0.6x at r=200px\n      const gain = clamp(120 / (r || 1), 1.2, 3.0)\n      \n      const newRotation = rotationStart.rotation + delta * gain\n      onPositionChange(x, y, newRotation, length)\n    } else if (isResizing) {\n      const deltaX = e.clientX - resizeStart.x\n      const deltaY = e.clientY - resizeStart.y\n      \n      // Project the delta vector onto the ruler's axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const rulerAxisX = Math.cos(rotationRad)\n      const rulerAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the ruler axis\n      const projection = deltaX * rulerAxisX + deltaY * rulerAxisY\n      const deltaDistance = projection / pxPerUnit\n      \n      const newLength = Math.max(2, Math.min(10, resizeStart.length + deltaDistance))\n      onPositionChange(x, y, rotation, newLength)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, screenPos, x, y, rotation, length, onPositionChange, pxPerUnit, screenToBoard])\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    const touch = e.touches[0]\n    if (!touch) return\n    \n    if (isDragging) {\n      const newScreenX = touch.clientX - dragStart.x\n      const newScreenY = touch.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, length)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      \n      // Calculate current angle from center to touch\n      const currentAngle = angleDeg(centerX, centerY, touch.clientX, touch.clientY)\n      \n      // Calculate the difference from the initial angle using shortest path\n      const delta = shortestDelta(rotationStart.initialAngle, currentAngle)\n      \n      // Compute radius from center to cursor (in px)\n      const r = Math.hypot(touch.clientX - centerX, touch.clientY - centerY)\n      \n      // Gain: tune these numbers; e.g., 120/r gives ~1.2x at r=100px, ~0.6x at r=200px\n      const gain = clamp(120 / (r || 1), 1.2, 3.0)\n      \n      const newRotation = rotationStart.rotation + delta * gain\n      onPositionChange(x, y, newRotation, length)\n    } else if (isResizing) {\n      const deltaX = touch.clientX - resizeStart.x\n      const deltaY = touch.clientY - resizeStart.y\n      \n      // Project the delta vector onto the ruler's axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const rulerAxisX = Math.cos(rotationRad)\n      const rulerAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the ruler axis\n      const projection = deltaX * rulerAxisX + deltaY * rulerAxisY\n      const deltaDistance = projection / pxPerUnit\n      \n      const newLength = Math.max(2, Math.min(10, resizeStart.length + deltaDistance))\n      onPositionChange(x, y, rotation, newLength)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, screenPos, x, y, rotation, length, onPositionChange, pxPerUnit, screenToBoard])\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  useEffect(() => {\n    if (isDragging || isRotating || isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      document.addEventListener('touchmove', handleTouchMove, { passive: false })\n      document.addEventListener('touchend', handleTouchEnd)\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.removeEventListener('touchmove', handleTouchMove, { passive: false } as any)\n        document.removeEventListener('touchend', handleTouchEnd)\n      }\n    }\n  }, [isDragging, isRotating, isResizing, handleMouseMove, handleTouchMove, handleMouseUp, handleTouchEnd])\n\n  // ResizeObserver to handle container size changes\n  useEffect(() => {\n    const el = rulerRef.current?.closest('.jxgbox')\n    if (!el) return\n    \n    const ro = new ResizeObserver(() => {\n      // Force a light refresh by updating dragStart state\n      setDragStart(s => ({ ...s }))\n    })\n    ro.observe(el)\n    return () => ro.disconnect()\n  }, [])\n\n  // Generate ruler markings based on actual length units\n  const generateMarkings = () => {\n    const markings = []\n    const rulerWidthPx = length * pxPerUnit\n    \n    // Create markings every 0.1 units, with major marks at 1.0 and medium at 0.5\n    const markInterval = 0.1 // Mark every 0.1 units\n    const numMarks = Math.floor(length / markInterval)\n    \n    for (let i = 0; i <= numMarks; i++) {\n      const unitValue = i * markInterval\n      const position = (unitValue / length) * rulerWidthPx\n      \n      const isMajor = unitValue % 1 === 0 // Major marks every 1 unit\n      const isMedium = unitValue % 0.5 === 0 && !isMajor // Medium marks every 0.5 units\n      \n      let height = 'h-1'\n      let opacity = 0.3\n      if (isMajor) {\n        height = 'h-5'\n        opacity = 0.8\n      } else if (isMedium) {\n        height = 'h-3'\n        opacity = 0.6\n      }\n      \n      markings.push(\n        <div\n          key={`mark-${i}`}\n          className={`absolute w-[1px] ${height} bg-black transition-all duration-200`}\n          style={{\n            left: position,\n            top: -1,\n            transform: 'translateX(-50%)',\n            opacity\n          }}\n        />\n      )\n      \n      // Add labels for major marks (every 1 unit)\n      if (isMajor && unitValue > 0) {\n        markings.push(\n          <div\n            key={`label-${i}`}\n            className=\"absolute text-[10px] text-slate-600 font-medium tracking-tight\"\n            style={{\n              left: position,\n              top: -16,\n              transform: 'translateX(-50%)',\n              fontFeatureSettings: '\"tnum\"'\n            }}\n          >\n            {unitValue}\n          </div>\n        )\n      }\n    }\n    \n    return markings\n  }\n\n  return (\n    <div\n      ref={rulerRef}\n      className={`absolute select-none group ${isActive ? 'z-50' : 'z-40'}`}\n      style={{\n        left: screenPos.x,\n        top: screenPos.y,\n        transform: `rotate(${rotation}deg)`,\n        transformOrigin: '0 0'\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleTouchStart}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      {/* Ruler body with enhanced SVG styling */}\n      <div className=\"relative\" style={{ pointerEvents: 'none' }}>\n        <svg\n          width={length * pxPerUnit + 100}\n          height={40}\n          className=\"absolute\"\n          style={{ left: -50, top: -10, pointerEvents: 'auto' }}\n        >\n          <defs>\n            {/* Main plastic gradient with enhanced depth and contrast */}\n            <linearGradient id=\"rulerPlasticGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.6)\" />\n              <stop offset=\"15%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.2)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(240,245,250,0.1)\" />\n              <stop offset=\"70%\" stopColor=\"rgba(200,210,220,0.15)\" />\n              <stop offset=\"85%\" stopColor=\"rgba(150,160,170,0.2)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(100,110,120,0.25)\" />\n            </linearGradient>\n\n            {/* Secondary highlight gradient for more realistic plastic look */}\n            <linearGradient id=\"rulerHighlightGradient\" x1=\"0%\" y1=\"0%\" x2=\"60%\" y2=\"40%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.8)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"60%\" stopColor=\"rgba(255,255,255,0.1)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(255,255,255,0)\" />\n            </linearGradient>\n\n            {/* Shadow gradient for depth */}\n            <linearGradient id=\"rulerShadowGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(0,0,0,0)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(0,0,0,0.05)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(0,0,0,0.15)\" />\n            </linearGradient>\n\n            {/* Enhanced drop shadow with more depth and realism */}\n            <filter id=\"rulerSoftShadow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feDropShadow dx=\"0\" dy=\"8\" stdDeviation=\"16\" floodColor=\"#000\" floodOpacity=\"0.3\" />\n              <feDropShadow dx=\"0\" dy=\"4\" stdDeviation=\"8\" floodColor=\"#000\" floodOpacity=\"0.2\" />\n              <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"4\" floodColor=\"#000\" floodOpacity=\"0.1\" />\n            </filter>\n\n            {/* Glow effect for active state */}\n            <filter id=\"rulerGlow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/>\n              </feMerge>\n            </filter>\n          </defs>\n          \n          {/* Ruler plastic look: base fill, shine gradient overlay, and stroke */}\n          <g filter={isActive ? \"url(#rulerGlow)\" : \"url(#rulerSoftShadow)\"}>\n            {/* Base fill with enhanced opacity for better depth */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"rgba(240,245,250,0.25)\" />\n            {/* Shadow gradient for depth */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"url(#rulerShadowGradient)\" />\n            {/* Main plastic gradient overlay */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"url(#rulerPlasticGradient)\" />\n            {/* Highlight gradient for realistic plastic shine */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"url(#rulerHighlightGradient)\" />\n            {/* Enhanced outline with subtle inner shadow */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\"/>\n          </g>\n          \n          {/* Enhanced ruler markings with 0.1cm precision */}\n          {(() => {\n            const markings = []\n            const rulerWidthPx = length * pxPerUnit\n            const pxPerCm = pxPerUnit\n            const maxCm = Math.floor(length)\n            \n            // Create markings every 0.1cm (1mm)\n            for (let cm = 0; cm <= maxCm; cm++) {\n              const x = 50 + cm * pxPerCm\n              const isFive = cm % 5 === 0\n              const majorLen = isFive ? 18 : 12\n              \n              // Main centimeter tick mark\n              markings.push(\n                <rect\n                  key={`cm-${cm}`}\n                  x={x - 0.5}\n                  y={10}\n                  width={1}\n                  height={majorLen}\n                  fill=\"#000\"\n                />\n              )\n              \n              // Millimeter marks (9 small ticks between each centimeter)\n              if (cm < maxCm) {\n                for (let mm = 1; mm < 10; mm++) {\n                  const xx = x + (pxPerCm * mm) / 10\n                  const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n                  \n                  markings.push(\n                    <rect\n                      key={`mm-${cm}-${mm}`}\n                      x={xx - 0.25}\n                      y={10}\n                      width={0.5}\n                      height={mmLen}\n                      fill=\"#000\"\n                      opacity=\"0.75\"\n                    />\n                  )\n                }\n              }\n            }\n            \n            // Add millimeter marks between last whole centimeter and final length value\n            if (length % 1 !== 0) {\n              const lastWholeCm = Math.floor(length)\n              const finalX = 50 + length * pxPerCm\n              \n              // Add millimeter marks from last whole cm to final length\n              for (let mm = 1; mm <= Math.floor((length - lastWholeCm) * 10); mm++) {\n                const xx = 50 + (lastWholeCm + mm / 10) * pxPerCm\n                const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n                \n                markings.push(\n                  <rect\n                    key={`mm-final-${mm}`}\n                    x={xx - 0.25}\n                    y={10}\n                    width={0.5}\n                    height={mmLen}\n                    fill=\"#000\"\n                    opacity=\"0.75\"\n                  />\n                )\n              }\n              \n              // Add final marking at exact length value\n              markings.push(\n                <rect\n                  key={`cm-final`}\n                  x={finalX - 0.5}\n                  y={10}\n                  width={1}\n                  height={12}\n                  fill=\"#000\"\n                />\n              )\n            }\n            \n            return markings\n          })()}\n        </svg>\n        \n        {/* Ruler numbers - positioned as HTML elements like in the triangle component */}\n        {(() => {\n          const pxPerCm = pxPerUnit\n          const maxCm = Math.floor(length)\n          const numbers = []\n          \n          for (let cm = 1; cm <= maxCm; cm++) {\n            const x = cm * pxPerCm\n            const isFive = cm % 5 === 0\n            \n            numbers.push(\n              <div\n                key={`ruler-number-${cm}`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: x, // Direct positioning without SVG offset\n                  top: -25, // Position above the ruler\n                  transform: 'translateX(-50%)',\n                  fontWeight: isFive ? 'bold' : 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {cm}\n              </div>\n            )\n          }\n\n          // Add final number at exact length value (only if not a whole number)\n          if (length % 1 !== 0) {\n            const finalX = length * pxPerCm\n            numbers.push(\n              <div\n                key={`ruler-number-final`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: finalX, // Direct positioning without SVG offset\n                  top: -25, // Position above the ruler\n                  transform: 'translateX(-50%)',\n                  fontWeight: 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {length.toFixed(1)}\n              </div>\n            )\n          }\n          \n          return numbers\n        })()}\n        \n        {/* Rotation handle - enhanced styling to match triangle */}\n        <div\n          className=\"rotation-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-emerald-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like triangle\n            left: length * pxPerUnit - 2,\n            top: 2,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 20\n          }}\n          title=\"Otočit pravítko\"\n        >\n          <div className=\"w-2 h-2 bg-emerald-500 rounded-full\" />\n        </div>\n        \n        {/* Resize handle - enhanced styling to match triangle */}\n        <div\n          className=\"resize-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-amber-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like triangle\n            left: length * pxPerUnit - 2,\n            top: 14,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 15\n          }}\n          title=\"Změnit délku\"\n        >\n          <div className=\"w-2 h-2 bg-amber-500 rounded-full\" />\n        </div>\n      </div>\n      \n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2724, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/DraggableTriangle.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react'\nimport { useBoardScale } from '../hooks/useBoardScale'\n\ninterface DraggableTriangleProps {\n  x: number\n  y: number\n  rotation: number\n  size: number\n  type: '45-45-90' | '30-60-90'\n  onPositionChange: (x: number, y: number, rotation: number, size: number) => void\n  isActive: boolean\n  onActivate: () => void\n  onUiBusyChange: (busy: boolean) => void\n}\n\nexport default function DraggableTriangle({\n  x,\n  y,\n  rotation,\n  size,\n  type,\n  onPositionChange,\n  isActive,\n  onActivate,\n  onUiBusyChange\n}: DraggableTriangleProps) {\n  const [isDragging, setIsDragging] = useState(false)\n  const [isRotatingResizing, setIsRotatingResizing] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 })\n  const [rotateResizeStart, setRotateResizeStart] = useState({ \n    x: 0, \n    y: 0, \n    rotation: 0, \n    size: 0, \n    initialMouseX: 0,\n    initialMouseY: 0,\n    pivotScreen: { x: 0, y: 0 },\n    initialHandleAngle: 0,\n    initialHandleDistance: 0\n  })\n  const triangleRef = useRef<HTMLDivElement>(null)\n  \n  // Refs to avoid state lag\n  const isGlueActiveRef = useRef(false)\n  const lastPointerIdRef = useRef<number | null>(null)\n  const dragModeRef = useRef<'move' | 'glue' | null>(null)\n  const dragOffsetRef = useRef({ dx: 0, dy: 0 }) // for move (drag) only\n  const rafIdRef = useRef<number | null>(null)\n  const glueCalibRef = useRef<{ \n    k: number; \n    rotationOffset: number; \n    localAngleDeg: number;\n    initialMouseR: number;  // Initial mouse distance from pivot\n    initialSize: number;     // Initial size\n    initialRotation: number; // Initial rotation\n  } | null>(null)\n  const getScale = useBoardScale(triangleRef)\n  const { pxPerUnitX, pxPerUnitY } = getScale()\n  const pxPerUnit = Math.min(pxPerUnitX, pxPerUnitY)\n  \n  // Pivot offset: the right-angle vertex sits at (50, 50) in wrapper coords\n  // due to SVG offset of (-50, -50), matching where (0, 0) in SVG coords is\n  const PIVOT_OFFSET = { x: 50, y: 50 }\n\n  // Memoized coordinate conversion functions for better performance\n  const coordinateConverter = useMemo(() => {\n    const scaleInfo = getScale()\n    const { boardLeft, boardTop, boardRight, boardBottom, boardWidth, boardHeight } = scaleInfo\n    \n    return {\n      boardToScreen: (boardX: number, boardY: number) => {\n        // Get actual container dimensions\n        const container = triangleRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const screenX = ((boardX - boardLeft) / boardWidth) * containerWidth\n        const screenY = containerHeight - ((boardY - boardBottom) / boardHeight) * containerHeight\n        \n        return { x: screenX, y: screenY }\n      },\n      screenToBoard: (screenX: number, screenY: number) => {\n        const container = triangleRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const boardX = (screenX / containerWidth) * boardWidth + boardLeft\n        const boardY = boardTop - (screenY / containerHeight) * boardHeight\n        \n        return { x: boardX, y: boardY }\n      }\n    }\n  }, [getScale])\n\n  const boardToScreen = coordinateConverter.boardToScreen\n  const screenToBoard = coordinateConverter.screenToBoard\n\n  // Helper functions for rotation with gain\n  const shortestDelta = (a: number, b: number) => {\n    return ((b - a + 540) % 360) - 180\n  }\n\n  const angleDeg = (px: number, py: number, mx: number, my: number) => {\n    return Math.atan2(my - py, mx - px) * 180 / Math.PI\n  }\n\n  const clamp = (v: number, lo: number, hi: number) => {\n    return Math.max(lo, Math.min(hi, v))\n  }\n\n  // Calculate screen position with state to ensure it updates after mount\n  const [screenPos, setScreenPos] = useState(() => {\n    const pos = boardToScreen(x, y)\n    // Ensure valid numbers\n    return {\n      x: isNaN(pos.x) ? 0 : pos.x,\n      y: isNaN(pos.y) ? 0 : pos.y\n    }\n  })\n\n  // Update screen position when coordinates or scale changes\n  useEffect(() => {\n    const pos = boardToScreen(x, y)\n    // Ensure valid numbers\n    setScreenPos({\n      x: isNaN(pos.x) ? 0 : pos.x,\n      y: isNaN(pos.y) ? 0 : pos.y\n    })\n  }, [x, y, boardToScreen])\n\n  // Ensure position is recalculated after mount when ref is ready\n  useEffect(() => {\n    // Use a small timeout to ensure the DOM is fully mounted\n    const timeoutId = setTimeout(() => {\n      if (triangleRef.current) {\n        const pos = boardToScreen(x, y)\n        // Ensure valid numbers\n        setScreenPos({\n          x: isNaN(pos.x) ? 0 : pos.x,\n          y: isNaN(pos.y) ? 0 : pos.y\n        })\n      }\n    }, 0)\n    return () => clearTimeout(timeoutId)\n  }, [boardToScreen, x, y])\n\n  // Smooth movement without grid snapping\n  const smoothPosition = (boardX: number, boardY: number) => {\n    return { x: boardX, y: boardY }\n  }\n\n  // Calculate handle position in screen coordinates for given size and rotation\n  const getHandleScreenPosition = useCallback((sizeValue: number, rotationValue: number) => {\n    // Calculate handle position in triangle's local coordinate system (SVG coords)\n    const basePxLocal = sizeValue * pxPerUnit\n    const heightPxLocal = type === '45-45-90' ? basePxLocal : basePxLocal * Math.sqrt(3) / 2\n    const hypMidXLocal = basePxLocal / 2\n    const hypMidYLocal = heightPxLocal / 2\n    \n    // Handle offset in SVG coordinates (relative to right-angle vertex at 0,0)\n    const handleXLocal = 1.35 * hypMidXLocal - basePxLocal * 0.2\n    const handleYLocal = 1.35 * hypMidYLocal - heightPxLocal * 0.2\n    \n    // Rotate the handle position by rotationValue degrees\n    const rotationRad = (rotationValue * Math.PI) / 180\n    const cosR = Math.cos(rotationRad)\n    const sinR = Math.sin(rotationRad)\n    const rotatedX = handleXLocal * cosR - handleYLocal * sinR\n    const rotatedY = handleXLocal * sinR + handleYLocal * cosR\n    \n    // Convert to board coordinates (handle is in pixels, convert to units)\n    const handleBoardX = x + rotatedX / pxPerUnit\n    const handleBoardY = y + rotatedY / pxPerUnit\n    \n    // Convert to screen coordinates\n    return boardToScreen(handleBoardX, handleBoardY)\n  }, [pxPerUnit, type, x, y, boardToScreen])\n\n  // Distance from pivot to the handle for a given size (in *pixels*)\n  const handleDistanceForSize = useCallback((s: number) => {\n    const base = s * pxPerUnit\n    const height = type === '45-45-90' ? base : base * Math.sqrt(3) / 2\n    const localHandleX = 1.35 * (base / 2) - base * 0.2\n    const localHandleY = 1.35 * (height / 2) - height * 0.2\n    return Math.hypot(localHandleX, localHandleY)\n  }, [pxPerUnit, type])\n\n  // Angle (deg) of the handle in local (unrotated) coords for a given size\n  const handleLocalAngleForSize = useCallback((s: number) => {\n    const base = s * pxPerUnit\n    const h = type === '45-45-90' ? base : base * Math.sqrt(3) / 2\n    const localHandleX = 1.35 * (base / 2) - base * 0.2\n    const localHandleY = 1.35 * (h / 2) - h * 0.2\n    return Math.atan2(localHandleY, localHandleX) * (180 / Math.PI)\n  }, [pxPerUnit, type])\n\n  // Clamp size to your current min/max \"height\" constraints\n  const clampSizeByHeight = useCallback((s: number) => {\n    const heightFrom = (ss: number) => (type === '45-45-90' ? ss : ss * Math.sqrt(3) / 2)\n    const minH = 3\n    const maxH = 10\n    const h0 = heightFrom(s)\n    if (h0 < minH) return (type === '45-45-90') ? minH : minH / (Math.sqrt(3) / 2)\n    if (h0 > maxH) return (type === '45-45-90') ? maxH : maxH / (Math.sqrt(3) / 2)\n    return s\n  }, [type])\n\n  // Clamp size strictly (for use on release only)\n  const clampSizeByHeightStrict = useCallback((s: number) => {\n    const heightFrom = (ss: number) => (type === '45-45-90' ? ss : ss * Math.sqrt(3) / 2)\n    const minH = 3\n    const maxH = 10\n    const h = heightFrom(s)\n    if (h < minH) return (type === '45-45-90') ? minH : minH / (Math.sqrt(3) / 2)\n    if (h > maxH) return (type === '45-45-90') ? maxH : maxH / (Math.sqrt(3) / 2)\n    return s\n  }, [type])\n\n  // Local handle vector in *unrotated* SVG coords for a given size (in px)\n  const handleLocalVecPx = useCallback((sizePx: number, is454590: boolean) => {\n    const base = sizePx\n    const height = is454590 ? base : base * Math.sqrt(3) / 2\n    const vx = 1.35 * (base / 2) - base * 0.2\n    const vy = 1.35 * (height / 2) - height * 0.2\n    return { vx, vy }\n  }, [])\n\n  // Length and angle (deg) of that vector. Angle is size-invariant (vx,vy scale by size).\n  const handleLocalPolar = useCallback((sizePx: number, is454590: boolean) => {\n    const { vx, vy } = handleLocalVecPx(sizePx, is454590)\n    const r = Math.hypot(vx, vy)\n    const a = Math.atan2(vy, vx) * 180 / Math.PI\n    return { r, a }\n  }, [handleLocalVecPx])\n\n  // Pointer down handler - replaces mouse/touch handlers\n  const onPointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    e.stopPropagation()\n    const target = e.target as HTMLElement\n    if (target.setPointerCapture) {\n      target.setPointerCapture(e.pointerId)\n    }\n    lastPointerIdRef.current = e.pointerId\n    onActivate()\n    onUiBusyChange(true)\n\n    const isHandle = target.classList.contains('rotate-resize-handle') || !!target.closest('.rotate-resize-handle')\n\n    if (isHandle) {\n      // --- GLUE start: Store initial state ---\n      const pivot = boardToScreen(x, y)\n      \n      // Where the mouse actually is right now\n      const dx = e.clientX - pivot.x\n      const dy = e.clientY - pivot.y\n      const initialMouseR = Math.hypot(dx, dy)\n      const mouseAngle = Math.atan2(dy, dx) * 180 / Math.PI\n      \n      // Handle geometry at current size\n      const handleR = handleDistanceForSize(size)\n      const localHandleAngleDeg = handleLocalAngleForSize(size)\n\n      // k calibration: we want the formula newSize = initialSize + k * (mouseR - initialMouseR)\n      // At initialMouseR, we want initialSize (deltaR = 0), so newSize = initialSize ✓\n      // For proportional scaling: newSize = initialSize * (mouseR / initialMouseR)\n      // = initialSize + initialSize * (mouseR / initialMouseR - 1)\n      // = initialSize + initialSize * (mouseR - initialMouseR) / initialMouseR\n      // So: k = initialSize / initialMouseR\n      const k = size / (initialMouseR || 1)\n\n      // Rotation calibration\n      const rotationOffset = rotation - (mouseAngle - localHandleAngleDeg)\n\n      glueCalibRef.current = { \n        k, \n        rotationOffset, \n        localAngleDeg: localHandleAngleDeg,\n        initialMouseR,        // Store where we started\n        initialSize: size,    // Store initial size\n        initialRotation: rotation  // Store initial rotation\n      }\n\n      dragModeRef.current = 'glue'\n      isGlueActiveRef.current = true\n      setIsRotatingResizing(true)\n\n    } else {\n      // --- MOVE: drag whole triangle; remember offset in screen space ---\n      const startLeft = screenPos.x\n      const startTop = screenPos.y\n      dragOffsetRef.current = { dx: e.clientX - startLeft, dy: e.clientY - startTop }\n      if (isDragging) setIsDragging(false) // ensure React state not fighting us\n      dragModeRef.current = 'move'\n    }\n\n    // Start listening\n    setIsDragging(true)\n  }\n\n  // Global pointer move (single source of truth), + requestAnimationFrame\n  const onPointerMoveDoc = useCallback((e: PointerEvent) => {\n    if (!isDragging || !dragModeRef.current) return\n\n    if (rafIdRef.current) cancelAnimationFrame(rafIdRef.current)\n    rafIdRef.current = requestAnimationFrame(() => {\n      if (dragModeRef.current === 'move') {\n        const { dx, dy } = dragOffsetRef.current\n        const newScreenX = e.clientX - dx\n        const newScreenY = e.clientY - dy\n        const pos = screenToBoard(newScreenX, newScreenY)\n        onPositionChange(pos.x, pos.y, rotation, size)\n      } else if (dragModeRef.current === 'glue') {\n        const pivot = boardToScreen(x, y)\n        const dx = e.clientX - pivot.x\n        const dy = e.clientY - pivot.y\n        const mouseAngle = Math.atan2(dy, dx) * 180 / Math.PI\n        const mouseR = Math.hypot(dx, dy)\n\n        const calib = glueCalibRef.current\n        if (!calib) return\n\n        // Calculate relative to where we started\n        const deltaR = mouseR - calib.initialMouseR\n        const newSize = calib.initialSize + calib.k * deltaR\n        \n        // Recalculate local angle for the new size\n        const newLocalAngle = handleLocalAngleForSize(newSize)\n        const newRotation = (mouseAngle - newLocalAngle) + calib.rotationOffset\n\n        onPositionChange(x, y, newRotation, newSize)\n      }\n    })\n  }, [isDragging, x, y, screenToBoard, boardToScreen, onPositionChange, rotation, size, handleLocalAngleForSize])\n\n  // Pointer up: stop, then clamp once\n  const onPointerUpDoc = useCallback((e: PointerEvent) => {\n    if (!isDragging) return\n\n    // Clamp only once at the end if we were glue-dragging\n    if (dragModeRef.current === 'glue') {\n      const clamped = clampSizeByHeightStrict(size)\n      if (clamped !== size) {\n        // Keep current rotation, only snap size to limit\n        onPositionChange(x, y, rotation, clamped)\n      }\n    }\n\n    isGlueActiveRef.current = false\n    dragModeRef.current = null\n    glueCalibRef.current = null // Clear calibration\n    setIsDragging(false)\n    setIsRotatingResizing(false)\n    onUiBusyChange(false)\n\n    if (lastPointerIdRef.current != null && triangleRef.current) {\n      triangleRef.current.releasePointerCapture?.(lastPointerIdRef.current)\n    }\n  }, [isDragging, clampSizeByHeightStrict, size, rotation, x, y, onPositionChange, onUiBusyChange])\n\n  useEffect(() => {\n    if (!isDragging) return\n    const move = (e: PointerEvent) => onPointerMoveDoc(e)\n    const up = (e: PointerEvent) => onPointerUpDoc(e)\n    document.addEventListener('pointermove', move, { passive: true })\n    document.addEventListener('pointerup', up, { passive: true })\n    return () => {\n      document.removeEventListener('pointermove', move as any)\n      document.removeEventListener('pointerup', up as any)\n      if (rafIdRef.current) cancelAnimationFrame(rafIdRef.current)\n    }\n  }, [isDragging, onPointerMoveDoc, onPointerUpDoc])\n\n  // ResizeObserver to handle container size changes\n  useEffect(() => {\n    const el = triangleRef.current?.closest('.jxgbox')\n    if (!el) return\n    \n    const ro = new ResizeObserver(() => {\n      // Recalculate screen position when container resizes\n      const pos = boardToScreen(x, y)\n      setScreenPos({\n        x: isNaN(pos.x) ? 0 : pos.x,\n        y: isNaN(pos.y) ? 0 : pos.y\n      })\n      // Force a light refresh by updating dragStart state\n      setDragStart(s => ({ ...s }))\n    })\n    ro.observe(el)\n    return () => ro.disconnect()\n  }, [x, y, boardToScreen])\n\n  // Generate triangle points based on type\n  const getTrianglePoints = () => {\n    const screenSize = size * pxPerUnit\n    const halfSize = screenSize / 2\n    \n    if (type === '45-45-90') {\n      // Right triangle with 45-45-90 angles\n      return [\n        { x: 0, y: 0 },           // Right angle vertex\n        { x: screenSize, y: 0 },  // Bottom right\n        { x: 0, y: screenSize }   // Top left\n      ]\n    } else {\n      // Right triangle with 30-60-90 angles\n      const height = screenSize * Math.sqrt(3) / 2\n      return [\n        { x: 0, y: 0 },           // Right angle vertex\n        { x: screenSize, y: 0 },  // Bottom right\n        { x: 0, y: height }       // Top left (60° angle)\n      ]\n    }\n  }\n\n  // Generate enhanced ruler markings as SVG elements matching the detailed specifications\n  const renderRulerMarkingsSvg = () => {\n    const screenSize = size * pxPerUnit\n    const pxPerCm = pxPerUnit // 1 cm = pxPerUnit pixels\n    const verticalLength = type === '45-45-90' ? screenSize : (screenSize * Math.sqrt(3)) / 2\n    const maxCm = Math.min(16, Math.floor(size)) // Use floor to stop at or before actual size\n    const maxVerticalCm = Math.min(16, Math.floor(type === '45-45-90' ? size : size * Math.sqrt(3) / 2))\n\n    // Horizontal ruler (bottom edge) - 0 to maxCm\n    const horizontalTicks: React.ReactNode[] = []\n    for (let cm = 0; cm <= maxCm; cm++) {\n      const x = cm * pxPerCm\n      const isFive = cm % 5 === 0\n      const majorLen = isFive ? 18 : 12 // Length of tick mark\n      \n      // Main centimeter tick mark\n      horizontalTicks.push(\n        <rect\n          key={`h-cm-${cm}`}\n          x={x - 0.75}\n          y={0}\n          width={1.5}\n          height={majorLen}\n          fill=\"#000\"\n        />\n      )\n      \n      // Number labels will be handled separately as HTML elements\n      \n      // Millimeter marks (9 small ticks between each centimeter)\n      if (cm < maxCm) {\n        for (let mm = 1; mm < 10; mm++) {\n          const xx = x + (pxPerCm * mm) / 10\n          const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n          \n          horizontalTicks.push(\n            <rect\n              key={`h-mm-${cm}-${mm}`}\n              x={xx - 0.5}\n              y={0}\n              width={1}\n              height={mmLen}\n              fill=\"#000\"\n              opacity=\"0.75\"\n            />\n          )\n        }\n      }\n    }\n\n    // Add millimeter marks between last whole centimeter and final size value\n    if (size % 1 !== 0) {\n      const lastWholeCm = Math.floor(size)\n      const finalX = size * pxPerCm\n      \n      // Add millimeter marks from last whole cm to final size\n      for (let mm = 1; mm <= Math.floor((size - lastWholeCm) * 10); mm++) {\n        const xx = (lastWholeCm + mm / 10) * pxPerCm\n        const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n        \n        horizontalTicks.push(\n          <rect\n            key={`h-mm-final-${mm}`}\n            x={xx - 0.5}\n            y={0}\n            width={1}\n            height={mmLen}\n            fill=\"#000\"\n            opacity=\"0.75\"\n          />\n        )\n      }\n      \n      // Add final marking at exact size value\n      horizontalTicks.push(\n        <rect\n          key={`h-cm-final`}\n          x={finalX - 0.75}\n          y={0}\n          width={1.5}\n          height={12}\n          fill=\"#000\"\n        />\n      )\n    }\n\n    // Vertical ruler (left edge) - 0 to maxVerticalCm\n    const verticalTicks: React.ReactNode[] = []\n    for (let cm = 0; cm <= maxVerticalCm; cm++) {\n      const y = cm * pxPerCm\n      const isFive = cm % 5 === 0\n      const majorLen = isFive ? 18 : 12 // Length of tick mark\n      \n      // Main centimeter tick mark (extends LEFT from the edge)\n      verticalTicks.push(\n        <rect\n          key={`v-cm-${cm}`}\n          x={-majorLen}\n          y={y - 0.75}\n          width={majorLen}\n          height={1.5}\n          fill=\"#000\"\n        />\n      )\n      \n      // No number labels on the vertical ruler (left side)\n      \n      // Millimeter marks (9 small ticks between each centimeter)\n      if (cm < maxVerticalCm) {\n        for (let mm = 1; mm < 10; mm++) {\n          const yy = y + (pxPerCm * mm) / 10\n          const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n          \n          verticalTicks.push(\n            <rect\n              key={`v-mm-${cm}-${mm}`}\n              x={-mmLen}\n              y={yy - 0.5}\n              width={mmLen}\n              height={1}\n              fill=\"#000\"\n              opacity=\"0.75\"\n            />\n          )\n        }\n      }\n    }\n\n    // Add millimeter marks between last whole centimeter and final height value\n    const actualHeight = type === '45-45-90' ? size : size * Math.sqrt(3) / 2\n    if (actualHeight % 1 !== 0) {\n      const lastWholeCm = Math.floor(actualHeight)\n      const finalY = actualHeight * pxPerCm\n      \n      // Add millimeter marks from last whole cm to final height\n      for (let mm = 1; mm <= Math.floor((actualHeight - lastWholeCm) * 10); mm++) {\n        const yy = (lastWholeCm + mm / 10) * pxPerCm\n        const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n        \n        verticalTicks.push(\n          <rect\n            key={`v-mm-final-${mm}`}\n            x={-mmLen}\n            y={yy - 0.5}\n            width={mmLen}\n            height={1}\n            fill=\"#000\"\n            opacity=\"0.75\"\n          />\n        )\n      }\n      \n      // Add final marking at exact height value\n      verticalTicks.push(\n        <rect\n          key={`v-cm-final`}\n          x={-12}\n          y={finalY - 0.75}\n          width={12}\n          height={1.5}\n          fill=\"#000\"\n        />\n      )\n    }\n\n    return (\n      <g>\n        {/* Origin label with \"0\" */}\n        <text x={4} y={-8} fontSize=\"11\" fontFamily=\"Arial, sans-serif\" fontWeight=\"bold\" fill=\"#000\">0</text>\n        \n        {/* Bottom edge ruler (horizontal) */}\n        <g transform={`translate(${points[0]?.x || 0},${points[0]?.y || 0})`}>\n          {horizontalTicks}\n        </g>\n        \n        {/* Left edge ruler (vertical) */}\n        <g transform={`translate(${points[0]?.x || 0},${points[0]?.y || 0})`}>\n          {verticalTicks}\n        </g>\n      </g>\n    )\n  }\n\n  const points = getTrianglePoints()\n  const pathData = `M ${points[0]?.x || 0} ${points[0]?.y || 0} L ${points[1]?.x || 0} ${points[1]?.y || 0} L ${points[2]?.x || 0} ${points[2]?.y || 0} Z`\n\n  // Calculate triangle dimensions for dynamic handle positioning\n  const basePx = size * pxPerUnit\n  const heightPx = type === '45-45-90' ? basePx : basePx * Math.sqrt(3) / 2\n  \n  // Calculate hypotenuse midpoint (relative to SVG origin at 50, 50)\n  const hypMidX = basePx / 2\n  const hypMidY = heightPx / 2\n  \n  // Calculate handle position using the same function used in drag calculations\n  const { vx, vy } = handleLocalVecPx(basePx, type === '45-45-90')\n\n  // Derived geometry for inner triangular cutouts (proportional to size)\n  const baseLength = size * pxPerUnit\n  const verticalLength = type === '45-45-90' ? baseLength : (baseLength * Math.sqrt(3)) / 2\n  // Diagonal unit direction (ux, uy) from right-angle vertex and its origin point\n  const origin = { x: points[0]?.x || 0, y: points[0]?.y || 0 }\n  const mDiag = verticalLength / baseLength\n  const len = Math.sqrt(1 + mDiag * mDiag)\n  const ux = 1 / len\n  const uy = mDiag / len\n  // Reflect a point across the diagonal line through origin with unit direction (ux, uy)\n  const reflectAcrossDiagonal = (px: number, py: number) => {\n    const rx = px - origin.x\n    const ry = py - origin.y\n    const dot = rx * ux + ry * uy\n    const rpx = 2 * dot * ux - rx\n    const rpy = 2 * dot * uy - ry\n    return { x: origin.x + rpx, y: origin.y + rpy }\n  }\n  \n  // Construct cutouts similar to the two half-triangles split by the diagonal\n  // Unit normal to diagonal\n  const nx = -uy\n  const ny = ux\n  // Hypotenuse unit direction (from top-left to bottom-right corner)\n  const hypX = baseLength\n  const hypY = -verticalLength\n  const hypLen = Math.hypot(hypX, hypY) || 1\n  const hx = hypX / hypLen\n  const hy = hypY / hypLen\n  // Length of diagonal segment OM (origin to hypotenuse midpoint)\n  const OMlen = 0.5 * Math.hypot(baseLength, verticalLength)\n  // Choose base length along diagonal as a fraction of OM\n  const L = OMlen * 0.7\n  // Position along diagonal from origin and small gap offset\n  const tAlong = OMlen * 0.55\n  const gap = Math.max(-11, -baseLength * 0.12) // increased perpendicular offset from diagonal; no rotation or along-diagonal change\n\n  // First cutout (similar to triangle O-P1-M): base parallel to diagonal, other sides // x-axis and // hypotenuse\n  const c1x = origin.x + ux * tAlong + nx * gap\n  const c1y = origin.y + uy * tAlong + ny * gap\n  const a1 = { x: c1x - (L / 2) * ux, y: c1y - (L / 2) * uy }\n  const b1 = { x: c1x + (L / 2) * ux, y: c1y + (L / 2) * uy }\n  // Apex c1 is intersection of: line through a1 parallel to x-axis and line through b1 parallel to hypotenuse\n  const s1 = (a1.y - b1.y) / (hy || 1e-6)\n  const c1 = { x: b1.x + s1 * hx, y: b1.y + s1 * hy }\n  const cut1 = `M ${a1.x} ${a1.y} L ${b1.x} ${b1.y} L ${c1.x} ${c1.y} Z`\n\n  // Second cutout is mirror image of the first across the diagonal (perfect symmetry)\n  const a2r = reflectAcrossDiagonal(a1.x, a1.y)\n  const b2r = reflectAcrossDiagonal(b1.x, b1.y)\n  const c2r = reflectAcrossDiagonal(c1.x, c1.y)\n  const cut2 = `M ${a2r.x} ${a2r.y} L ${b2r.x} ${b2r.y} L ${c2r.x} ${c2r.y} Z`\n\n  // Diagonal from right-angle vertex to the midpoint of the hypotenuse\n  const hypMid = {\n    x: ((points[1]?.x || 0) + (points[2]?.x || 0)) / 2,\n    y: ((points[1]?.y || 0) + (points[2]?.y || 0)) / 2\n  }\n\n  return (\n    <div\n      ref={triangleRef}\n      className={`absolute select-none group ${isActive ? 'z-50' : 'z-40'}`}\n      style={{\n        // (x,y) is the right-angle vertex in BOARD coords.\n        // Place the wrapper so that this vertex lands at the wrapper's transform origin.\n        left: screenPos.x - PIVOT_OFFSET.x,\n        top: screenPos.y - PIVOT_OFFSET.y,\n        // rotate around the right-angle vertex\n        transform: `rotate(${rotation}deg)`,\n        transformOrigin: `${-PIVOT_OFFSET.x}px ${-PIVOT_OFFSET.y}px`,\n        // Debug: add background to see hover area\n        backgroundColor: isHovering ? 'rgba(255, 0, 0, 0.1)' : 'transparent'\n      }}\n      onPointerDown={onPointerDown}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      {/* Triangle SVG */}\n      <div className=\"relative\" style={{ pointerEvents: 'auto' }}>\n        <svg\n          width={size * pxPerUnit + 100}\n          height={type === '45-45-90' ? size * pxPerUnit + 100 : size * pxPerUnit * Math.sqrt(3) / 2 + 100}\n          className=\"absolute\"\n          style={{ left: -50, top: -50, pointerEvents: 'auto' }}\n        >\n          <defs>\n            {/* Main plastic gradient with enhanced depth and contrast */}\n            <linearGradient id={`plasticGradient-${type}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.6)\" />\n              <stop offset=\"15%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.2)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(240,245,250,0.1)\" />\n              <stop offset=\"70%\" stopColor=\"rgba(200,210,220,0.15)\" />\n              <stop offset=\"85%\" stopColor=\"rgba(150,160,170,0.2)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(100,110,120,0.25)\" />\n            </linearGradient>\n\n            {/* Secondary highlight gradient for more realistic plastic look */}\n            <linearGradient id={`highlightGradient-${type}`} x1=\"0%\" y1=\"0%\" x2=\"60%\" y2=\"40%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.8)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"60%\" stopColor=\"rgba(255,255,255,0.1)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(255,255,255,0)\" />\n            </linearGradient>\n\n            {/* Shadow gradient for depth */}\n            <linearGradient id={`shadowGradient-${type}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(0,0,0,0)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(0,0,0,0.05)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(0,0,0,0.15)\" />\n            </linearGradient>\n\n            {/* Enhanced drop shadow with more depth and realism */}\n            <filter id={`softShadow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feDropShadow dx=\"0\" dy=\"8\" stdDeviation=\"16\" floodColor=\"#000\" floodOpacity=\"0.3\" />\n              <feDropShadow dx=\"0\" dy=\"4\" stdDeviation=\"8\" floodColor=\"#000\" floodOpacity=\"0.2\" />\n              <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"4\" floodColor=\"#000\" floodOpacity=\"0.1\" />\n            </filter>\n\n            {/* Enhanced inner shadow for cutout edges with more depth */}\n            <filter id={`innerShadow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feFlood floodColor=\"#000\" floodOpacity=\"0.2\" result=\"flood\"/>\n              <feComposite in=\"flood\" in2=\"SourceGraphic\" operator=\"in\" result=\"composite\"/>\n              <feGaussianBlur in=\"composite\" stdDeviation=\"3\" result=\"blur\"/>\n              <feOffset in=\"blur\" dx=\"2\" dy=\"2\" result=\"offset\"/>\n              <feComposite in=\"offset\" in2=\"SourceGraphic\" operator=\"over\"/>\n            </filter>\n\n            {/* Additional depth shadow for inner cutouts */}\n            <filter id={`deepInnerShadow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feFlood floodColor=\"#000\" floodOpacity=\"0.15\" result=\"flood\"/>\n              <feComposite in=\"flood\" in2=\"SourceGraphic\" operator=\"in\" result=\"composite\"/>\n              <feGaussianBlur in=\"composite\" stdDeviation=\"5\" result=\"blur\"/>\n              <feOffset in=\"blur\" dx=\"3\" dy=\"3\" result=\"offset\"/>\n              <feComposite in=\"offset\" in2=\"SourceGraphic\" operator=\"over\"/>\n            </filter>\n            \n            {/* Glow effect for active state */}\n            <filter id={`glow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/>\n              </feMerge>\n            </filter>\n\n            {/* Create mask for main triangle with inner cutouts as holes */}\n            <mask id={`triangle-mask-${type}`}>\n              {/* Reveal main triangle */}\n              <path d={pathData} fill=\"white\" />\n              {/* Hide inner similar triangles to make them transparent */}\n              <path d={cut1} fill=\"black\" />\n              <path d={cut2} fill=\"black\" />\n            </mask>\n          </defs>\n          \n          {/* Triangle plastic look: base fill, shine gradient overlay, and stroke */}\n          <g filter={isActive ? `url(#glow-${type})` : `url(#softShadow-${type})`}>\n            {/* Base fill with enhanced opacity for better depth */}\n            <path d={pathData} fill=\"rgba(240,245,250,0.25)\" mask={`url(#triangle-mask-${type})`} />\n            {/* Shadow gradient for depth */}\n            <path d={pathData} fill={`url(#shadowGradient-${type})`} mask={`url(#triangle-mask-${type})`} />\n            {/* Main plastic gradient overlay */}\n            <path d={pathData} fill={`url(#plasticGradient-${type})`} mask={`url(#triangle-mask-${type})`} />\n            {/* Highlight gradient for realistic plastic shine */}\n            <path d={pathData} fill={`url(#highlightGradient-${type})`} mask={`url(#triangle-mask-${type})`} />\n            {/* Enhanced outline with subtle inner shadow */}\n            <path d={pathData} fill=\"none\" stroke=\"#000000\" strokeWidth=\"2.5\"/>\n          </g>\n\n          {/* Internal diagonal (median to hypotenuse) */}\n          <line\n            x1={origin.x}\n            y1={origin.y}\n            x2={hypMid.x}\n            y2={hypMid.y}\n            stroke=\"#000000\"\n            strokeWidth=\"1.2\"\n            strokeDasharray=\"4 3\"\n          />\n          \n          {/* Right angle indicator with 90° label - properly aligned */}\n          <path\n            d={`M ${(points[0]?.x || 0) + 6} ${points[0]?.y || 0} L ${(points[0]?.x || 0) + 6} ${(points[0]?.y || 0) + 6} L ${points[0]?.x || 0} ${(points[0]?.y || 0) + 6}`}\n            fill=\"none\"\n            stroke=\"#000000\"\n            strokeWidth=\"1.2\"\n            strokeLinecap=\"round\"\n          />\n          \n          {/* 90° text label - properly positioned */}\n          <text\n            x={(points[0]?.x || 0) + 10}\n            y={(points[0]?.y || 0) + 3}\n            fontSize=\"8\"\n            fill=\"#000000\"\n            fontFamily=\"Arial, sans-serif\"\n            fontWeight=\"bold\"\n          >\n            90°\n          </text>\n\n          {/* Inner similar triangles as transparent holes: stroke only with enhanced inner shadows */}\n          <path d={cut1} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#deepInnerShadow-${type})`} />\n          <path d={cut2} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#deepInnerShadow-${type})`} />\n          {/* Additional inner shadow layer for more depth */}\n          <path d={cut1} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#innerShadow-${type})`} />\n          <path d={cut2} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#innerShadow-${type})`} />\n          {/* SVG ruler markings glued to the right-angle corner */}\n          {renderRulerMarkingsSvg()}\n        </svg>\n        \n        {/* Ruler numbers - positioned as HTML elements like in the ruler component */}\n        {(() => {\n          const screenSize = size * pxPerUnit\n          const pxPerCm = pxPerUnit\n          const maxCm = Math.min(16, Math.floor(size)) // Use floor to stop at or before actual size\n          const numbers = []\n          \n          for (let cm = 1; cm <= maxCm; cm++) {\n            const x = cm * pxPerCm\n            const isFive = cm % 5 === 0\n            \n            numbers.push(\n              <div\n                key={`h-number-${cm}`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: x - 50, // Account for SVG container offset\n                  top: -65, // Position well above the triangle\n                  transform: 'translateX(-50%)',\n                  fontWeight: isFive ? 'bold' : 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {cm}\n              </div>\n            )\n          }\n\n          // Add final number at exact size value (only if not a whole number)\n          if (size % 1 !== 0) {\n            const finalX = size * pxPerCm\n            numbers.push(\n              <div\n                key={`h-number-final`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: finalX - 50, // Account for SVG container offset\n                  top: -65, // Position well above the triangle\n                  transform: 'translateX(-50%)',\n                  fontWeight: 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {size.toFixed(1)}\n              </div>\n            )\n          }\n          \n          return numbers\n        })()}\n        \n        {/* Combined rotation and resize handle - positioned relative to hypotenuse midpoint */}\n        <div\n          className=\"rotate-resize-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-blue-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Temporarily only show on hover\n            left: `${vx - 50}px`,  // (-50,-50) is your SVG offset\n            top: `${vy - 50}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 20\n          }}\n          title=\"Otočit a změnit velikost\"\n        >\n          <div className=\"w-2 h-2 bg-blue-500 rounded-full\" />\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4198, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/DraggableProtractor.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react'\nimport { useBoardScale } from '../hooks/useBoardScale'\n\ninterface DraggableProtractorProps {\n  x: number\n  y: number\n  rotation: number\n  size: number\n  onPositionChange: (x: number, y: number, rotation: number, size: number) => void\n  isActive: boolean\n  onActivate: () => void\n  onUiBusyChange: (busy: boolean) => void\n}\n\nexport default function DraggableProtractor({\n  x,\n  y,\n  rotation,\n  size,\n  onPositionChange,\n  isActive,\n  onActivate,\n  onUiBusyChange\n}: DraggableProtractorProps) {\n  const [isDragging, setIsDragging] = useState(false)\n  const [isRotating, setIsRotating] = useState(false)\n  const [isResizing, setIsResizing] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 })\n  const [rotationStart, setRotationStart] = useState({ x: 0, y: 0, rotation: 0, initialAngle: 0 })\n  const [resizeStart, setResizeStart] = useState({ x: 0, y: 0, size: 0 })\n\n  const protractorRef = useRef<HTMLDivElement>(null)\n  const getScale = useBoardScale(protractorRef)\n  const { pxPerUnitX, pxPerUnitY } = getScale()\n  const pxPerUnit = Math.min(pxPerUnitX, pxPerUnitY)\n\n  // ------- Coordinate conversion (memoized) -------\n  const { boardToScreen, screenToBoard } = useMemo(() => {\n    const s = getScale()\n    const { boardLeft, boardTop, boardBottom, boardWidth, boardHeight } = s\n\n    return {\n      boardToScreen: (boardX: number, boardY: number) => {\n        const container = protractorRef.current?.closest('.jxgbox') as HTMLElement\n        const cw = container?.offsetWidth || 800\n        const ch = container?.offsetHeight || 500\n        const sx = ((boardX - boardLeft) / boardWidth) * cw\n        const sy = ch - ((boardY - boardBottom) / boardHeight) * ch\n        return { x: sx, y: sy }\n      },\n      screenToBoard: (screenX: number, screenY: number) => {\n        const container = protractorRef.current?.closest('.jxgbox') as HTMLElement\n        const cw = container?.offsetWidth || 800\n        const ch = container?.offsetHeight || 500\n        const bx = (screenX / cw) * boardWidth + boardLeft\n        const by = boardTop - (screenY / ch) * boardHeight\n        return { x: bx, y: by }\n      }\n    }\n  }, [getScale])\n\n  const screenPos = boardToScreen(x, y)\n\n  // ------- Box + pivot (with bleed) -----\n  // Add extra padding around the drawing so the box is larger than the semicircle + labels + shadow\n  const bleed = Math.max(24, (size * pxPerUnit) * 0.25) // 24px or 25% of radius\n  \n  const radiusPx = size * pxPerUnit\n  const boxW = radiusPx * 2.6 + bleed * 2\n  const boxH = radiusPx * 2.4 + bleed * 2\n  \n  // Red dot position inside the box (shifted by bleed)\n  const centerX = bleed + radiusPx * 1.2\n  const centerY = bleed + radiusPx * 1.1\n\n  // Red dot in screen coordinates (true pivot for rotation math):\n  const pivotScreen = useMemo(() => ({\n    x: screenPos.x - boxW / 2 + centerX,\n    y: screenPos.y - boxH / 2 + centerY,\n  }), [screenPos.x, screenPos.y, boxW, boxH, centerX, centerY])\n\n  // ------- Helpers -------\n  const shortestDelta = (a: number, b: number) => ((b - a + 540) % 360) - 180\n  const angleDeg = (px: number, py: number, mx: number, my: number) =>\n    Math.atan2(my - py, mx - px) * 180 / Math.PI\n  const clamp = (v: number, lo: number, hi: number) => Math.max(lo, Math.min(hi, v))\n  const smoothPosition = (bx: number, by: number) => ({ x: bx, y: by })\n\n  // ------- Events -------\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n\n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle')) {\n      setIsRotating(true)\n      const initialAngle = angleDeg(pivotScreen.x, pivotScreen.y, e.clientX, e.clientY)\n      setRotationStart({ x: e.clientX, y: e.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: e.clientX, y: e.clientY, size })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    }\n  }\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n\n    const touch = e.touches[0]\n    if (!touch) return\n    const target = e.target as HTMLElement\n\n    if (target.classList.contains('rotation-handle')) {\n      setIsRotating(true)\n      const initialAngle = angleDeg(pivotScreen.x, pivotScreen.y, touch.clientX, touch.clientY)\n      setRotationStart({ x: touch.clientX, y: touch.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: touch.clientX, y: touch.clientY, size })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    }\n  }\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDragging) {\n      const newScreenX = e.clientX - dragStart.x\n      const newScreenY = e.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const p = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(p.x, p.y, rotation, size)\n      return\n    }\n\n    if (isRotating) {\n      const currentAngle = angleDeg(pivotScreen.x, pivotScreen.y, e.clientX, e.clientY)\n      const delta = shortestDelta(rotationStart.initialAngle, currentAngle)\n      const r = Math.hypot(e.clientX - pivotScreen.x, e.clientY - pivotScreen.y)\n      const gain = clamp(120 / (r || 1), 1.2, 3.0)\n      const newRotationRaw = rotationStart.rotation + delta * gain\n      const snapped = Math.round(newRotationRaw / 5) * 5\n      const normalized = ((snapped % 360) + 360) % 360\n      onPositionChange(x, y, normalized, size)\n      return\n    }\n\n    if (isResizing) {\n      const dx = e.clientX - resizeStart.x\n      const dy = e.clientY - resizeStart.y\n      const rotRad = (rotation * Math.PI) / 180\n      const ax = Math.cos(rotRad)\n      const ay = Math.sin(rotRad)\n      const projection = dx * ax + dy * ay\n      const deltaSize = projection / 20\n      const newSize = Math.max(2, Math.min(6, resizeStart.size + deltaSize))\n      onPositionChange(x, y, rotation, newSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, pivotScreen, screenToBoard, x, y, rotation, size, onPositionChange])\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    const touch = e.touches[0]\n    if (!touch) return\n\n    if (isDragging) {\n      const newScreenX = touch.clientX - dragStart.x\n      const newScreenY = touch.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const p = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(p.x, p.y, rotation, size)\n      return\n    }\n\n    if (isRotating) {\n      const currentAngle = angleDeg(pivotScreen.x, pivotScreen.y, touch.clientX, touch.clientY)\n      const delta = shortestDelta(rotationStart.initialAngle, currentAngle)\n      const r = Math.hypot(touch.clientX - pivotScreen.x, touch.clientY - pivotScreen.y)\n      const gain = clamp(120 / (r || 1), 1.2, 3.0)\n      const newRotationRaw = rotationStart.rotation + delta * gain\n      const snapped = Math.round(newRotationRaw / 5) * 5\n      const normalized = ((snapped % 360) + 360) % 360\n      onPositionChange(x, y, normalized, size)\n      return\n    }\n\n    if (isResizing) {\n      const dx = touch.clientX - resizeStart.x\n      const dy = touch.clientY - resizeStart.y\n      const rotRad = (rotation * Math.PI) / 180\n      const ax = Math.cos(rotRad)\n      const ay = Math.sin(rotRad)\n      const projection = dx * ax + dy * ay\n      const deltaSize = projection / 20\n      const newSize = Math.max(2, Math.min(6, resizeStart.size + deltaSize))\n      onPositionChange(x, y, rotation, newSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, pivotScreen, screenToBoard, x, y, rotation, size, onPositionChange])\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  useEffect(() => {\n    if (isDragging || isRotating || isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      document.addEventListener('touchmove', handleTouchMove, { passive: false })\n      document.addEventListener('touchend', handleTouchEnd)\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.removeEventListener('touchmove', handleTouchMove as any)\n        document.removeEventListener('touchend', handleTouchEnd)\n      }\n    }\n  }, [isDragging, isRotating, isResizing, handleMouseMove, handleTouchMove, handleMouseUp, handleTouchEnd])\n\n  // Keep layout responsive\n  useEffect(() => {\n    const el = protractorRef.current?.closest('.jxgbox')\n    if (!el) return\n    const ro = new ResizeObserver(() => setDragStart(s => ({ ...s })))\n    ro.observe(el)\n    return () => ro.disconnect()\n  }, [])\n\n  // ----- Visual geometry -----\n  const R = radiusPx\n  const ring = Math.max(8, R * 0.075)\n  const innerR = R - ring\n  const uid = useMemo(() => Math.random().toString(36).slice(2), [])\n  const arc = (rad:number) => `M ${centerX - rad} ${centerY} A ${rad} ${rad} 0 0 1 ${centerX + rad} ${centerY}`\n  const ringBandPath = (RR: number, r: number) => `\n    M ${centerX - RR} ${centerY}\n    A ${RR} ${RR} 0 0 1 ${centerX + RR} ${centerY}\n    L ${centerX + r} ${centerY}\n    A ${r} ${r} 0 0 0 ${centerX - r} ${centerY}\n    Z\n  `\n\n  const generateMarkings = () => {\n    const m = []\n    for (let angle = 0; angle <= 180; angle += 1) {\n      const rad = (angle * Math.PI) / 180\n      const isMajor = angle % 10 === 0\n      const isMedium = angle % 5 === 0 && !isMajor\n      const isMinor = !isMajor && !isMedium\n\n      let tickLength = 0\n      let strokeWidth = 0.5\n      if (isMajor) { tickLength = R - innerR; strokeWidth = 2.5 }\n      else if (isMedium) { tickLength = (R - innerR) * 0.7; strokeWidth = 1.5 }\n      else if (isMinor) { tickLength = (R - innerR) * 0.4; strokeWidth = 0.8 }\n\n      const x1 = centerX + Math.cos(rad) * (R - tickLength)\n      const y1 = centerY - Math.sin(rad) * (R - tickLength)\n      const x2 = centerX + Math.cos(rad) * R\n      const y2 = centerY - Math.sin(rad) * R\n\n      m.push(<line key={`mark-${angle}`} x1={x1} y1={y1} x2={x2} y2={y2} stroke=\"#374151\" strokeWidth={strokeWidth} />)\n\n      if (isMajor) {\n        const labelDistance = R + 20\n        const lx = centerX + Math.cos(rad) * labelDistance\n        const ly = centerY - Math.sin(rad) * labelDistance\n        m.push(\n          <text key={`label-${angle}`} x={lx} y={ly} fontSize=\"11\" fill=\"#1f2937\" fontFamily=\"Arial, sans-serif\"\n                fontWeight=\"bold\" textAnchor=\"middle\" dominantBaseline=\"middle\">\n            {angle}°\n          </text>\n        )\n      }\n    }\n    return m\n  }\n\n  return (\n    <div\n      ref={protractorRef}\n      className={`absolute select-none group ${isActive ? 'z-50' : 'z-40'}`}\n      style={{\n        left: screenPos.x,\n        top: screenPos.y,\n        width: boxW,\n        height: boxH,\n        transform: `translate(-50%, -50%) rotate(${rotation}deg)`,\n        // Crucial: rotate around red dot defined in local (box) pixels\n        transformOrigin: `${centerX}px ${centerY}px`,\n        overflow: 'visible', // important: allow rotated content to extend outside\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleTouchStart}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      <div className=\"relative\" style={{ pointerEvents: 'auto', width: boxW, height: boxH, overflow: 'visible' }}>\n        <svg\n          width={boxW}\n          height={boxH}\n          className=\"absolute\"\n          style={{ left: 0, top: 0, pointerEvents: 'auto', overflow: 'visible' }}\n          viewBox={`0 0 ${boxW} ${boxH}`}\n        >\n          <defs>\n            <filter \n              id=\"protractorShadow\"\n              filterUnits=\"userSpaceOnUse\"\n              x={-bleed} \n              y={-bleed}\n              width={boxW + bleed * 2}\n              height={boxH + bleed * 2}>\n              <feDropShadow dx=\"1\" dy=\"1\" stdDeviation=\"2\" floodColor=\"#000\" floodOpacity=\"0.15\"/>\n            </filter>\n            <mask id={`innerArcMask-${uid}`}>\n              <rect width=\"100%\" height=\"100%\" fill=\"white\"/>\n              <rect x={centerX - innerR * 2} y={centerY - ring - 1} width={innerR * 4} height={ring + 20} fill=\"black\"/>\n            </mask>\n          </defs>\n\n          <path d={ringBandPath(R, innerR)} fill=\"rgba(107,114,128,0.22)\" stroke=\"none\" />\n          <rect x={centerX - innerR} y={centerY - ring} width={innerR * 2} height={ring} fill=\"rgba(107,114,128,0.22)\"/>\n          <path d={arc(R)} fill=\"none\" stroke=\"#0f172a\" strokeWidth=\"2.2\" opacity=\"0.95\" filter=\"url(#protractorShadow)\"/>\n          <line x1={centerX - R} y1={centerY} x2={centerX + R} y2={centerY} stroke=\"#000\" strokeWidth={isActive ? 1.9 : 1} strokeLinecap=\"round\" />\n          <line x1={centerX - innerR} y1={centerY - ring} x2={centerX + innerR} y2={centerY - ring} stroke=\"#000\" strokeWidth=\"1.4\" strokeLinecap=\"round\" />\n          <path d={`M ${centerX - innerR} ${centerY} A ${innerR} ${innerR} 0 0 1 ${centerX + innerR} ${centerY} Z`} fill=\"none\" stroke=\"#000\" strokeWidth=\"1\" mask={`url(#innerArcMask-${uid})`} />\n\n          {/* Red pivot dot */}\n          <circle cx={centerX} cy={centerY} r={isActive ? 4 : 3} fill=\"#dc2626\" stroke=\"#fff\" strokeWidth=\"2\" filter=\"url(#protractorShadow)\"/>\n\n          {generateMarkings()}\n        </svg>\n\n        {/* Rotation handle aligned around the pivot horizontally */}\n        <div\n          className=\"rotation-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-emerald-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{\n            pointerEvents: 'auto',\n            opacity: isHovering ? 1 : 0,\n            left: `${centerX - radiusPx * 0.08}px`,\n            top: `${centerY + radiusPx * 0.01}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 20\n          }}\n          title=\"Otočit úhloměr\"\n        >\n          <div className=\"w-2 h-2 bg-emerald-500 rounded-full\" />\n        </div>\n\n        {/* Resize handle symmetric to the other side */}\n        <div\n          className=\"resize-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-amber-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{\n            pointerEvents: 'auto',\n            opacity: isHovering ? 1 : 0,\n            left: `${centerX + radiusPx * 0.08}px`,\n            top: `${centerY + radiusPx * 0.01}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 15\n          }}\n          title=\"Změnit velikost\"\n        >\n          <div className=\"w-2 h-2 bg-amber-500 rounded-full\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4866, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/GeometryConstructionTester.tsx"],"sourcesContent":["  'use client'\n\nimport React, { useEffect, useRef, useState, useCallback } from 'react'\nimport JXG from 'jsxgraph'\nimport { Save, Trash2, Circle, Pencil, RotateCcw, Eraser, Ruler, Triangle, Gauge, ZoomIn, ZoomOut } from 'lucide-react'\nimport { UndoRedoManager } from '../../lib/undo-redo'\nimport { GridMode } from '../../lib/grid-manager'\nimport { BoardManager, JBoard } from '../../lib/board-manager'\nimport { GeometryFactory } from '../../lib/geometry-factory'\nimport { SelectionManager } from '../../lib/selection-manager'\nimport { RenameManager } from '../../lib/rename-manager'\nimport { calculateCenteredBoundingBoxCm } from '../../lib/measurement-scale'\nimport DraggableRuler from './DraggableRuler'\nimport DraggableTriangle from './DraggableTriangle'\nimport DraggableProtractor from './DraggableProtractor'\n\ntype JBoardLocal = JXG.Board & { renderer: any }\n\nconst EPS = 0.03\n\nfunction dist(a: {x:number,y:number}, b:{x:number,y:number}) {\n  return Math.hypot(a.x - b.x, a.y - b.y)\n}\n\nfunction coordsOfPoint(p: any) { return { x: p.X(), y: p.Y() } }\n\nfunction pointOnLineXY(p:{x:number,y:number}, line:any, eps=EPS){\n  const P = coordsOfPoint(line.point1)\n  const Q = coordsOfPoint(line.point2)\n  const A = Q.y - P.y, B = P.x - Q.x, C = -(A*P.x + B*P.y)\n  return Math.abs(A*p.x + B*p.y + C) / Math.hypot(A,B) < eps\n}\n\nfunction hasEndpoints(seg:any, [P,Q]:any[], eps=EPS){\n  const pts = [coordsOfPoint(seg.point1), coordsOfPoint(seg.point2)]\n  const d = (u:any,v:any)=>dist(u,v)\n  return (d(pts[0],coordsOfPoint(P))<eps && d(pts[1],coordsOfPoint(Q))<eps) ||\n         (d(pts[1],coordsOfPoint(P))<eps && d(pts[0],coordsOfPoint(Q))<eps)\n}\n\nexport default function GeometryConstructionTester() {\n  const boardManagerRef = useRef<BoardManager | null>(null)\n  const containerRef = useRef<HTMLDivElement | null>(null)\n  const undoRedoRef = useRef<UndoRedoManager | null>(null)\n  const geometryFactoryRef = useRef<GeometryFactory | null>(null)\n  const selectionManagerRef = useRef<SelectionManager | null>(null)\n  const renameMgrRef = useRef<RenameManager | null>(null)\n\n  const [tool, setTool] = useState<'mouse'|'point'|'segment'|'line'|'circle'|'rubber'>('mouse')\n  const [selected, setSelected] = useState<any[]>([])\n  const [feedback, setFeedback] = useState('')\n  const [data, setData] = useState<any>(null)\n  const [createdStack, setCreatedStack] = useState<string[]>([])\n  \n  // Physical tools state\n  const [rulerVisible, setRulerVisible] = useState(false)\n  const [triangleVisible, setTriangleVisible] = useState(false)\n  const [protractorVisible, setProtractorVisible] = useState(false)\n  const [rulerPosition, setRulerPosition] = useState({ x: 0, y: 0, rotation: 0, length: 6 })\n  const [trianglePosition, setTrianglePosition] = useState({ x: 2, y: 0, rotation: 0, size: 3 })\n  const [protractorPosition, setProtractorPosition] = useState({ x: -2, y: 0, rotation: 0, size: 3 })\n  const [activeTool, setActiveTool] = useState<'ruler' | 'triangle' | 'protractor' | null>(null)\n  const [uiBusy, setUiBusy] = useState(false)\n  \n  // Point naming state\n  const [renameMode, setRenameMode] = useState(false)\n  const [selectedPointId, setSelectedPointId] = useState<string|null>(null)\n\n  const [gridOption, setGridOption] = useState<GridMode>('major')\n  const [canUndoState, setCanUndoState] = useState(false)\n  const [canRedoState, setCanRedoState] = useState(false)\n\n  const toolRef = useRef(tool)\n  const selectedRef = useRef(selected)\n  const uiBusyRef = useRef(uiBusy)\n  const renameModeRef = useRef(renameMode)\n  const handleClickRef = useRef<((brd: JBoard, e: any) => void) | null>(null)\n  \n  // Rename mode refs for down+up approach\n  const renameArmRef = useRef<{ pt:any|null, wasFixed:boolean }>(\n    { pt:null, wasFixed:false }\n  )\n  const downPosRef = useRef<{x:number,y:number}|null>(null)\n  \n  useEffect(() => { toolRef.current = tool }, [tool])\n  useEffect(() => { selectedRef.current = selected }, [selected])\n  useEffect(() => { uiBusyRef.current = uiBusy }, [uiBusy])\n  useEffect(() => { renameModeRef.current = renameMode }, [renameMode])\n\n  const givensRef = useRef<{ q:any, S:any, C:any } | null>(null)\n\n  function pushCreated(obj: any) {\n    if (obj?.id) setCreatedStack(s => [...s, obj.id])\n  }\n\n  function getMouseCoords(brd: JBoard, e: any): {x: number, y: number} {\n    const coords = brd.getUsrCoordsOfMouse(e)\n    return { x: coords[0], y: coords[1] }\n  }\n\n  // \"A_12\" -> \"A₁₂\"\n  function toSubscript(name: string) {\n    const map: Record<string,string> = { '0':'₀','1':'₁','2':'₂','3':'₃','4':'₄','5':'₅','6':'₆','7':'₇','8':'₈','9':'₉' }\n    return name.replace(/_(\\d+)/g, (_, d) => d.split('').map((ch: string) => map[ch] ?? ch).join(''))\n  }\n\n  // normalize and set the visible + raw name on a JSXGraph point\n  const renamePoint = useCallback((pt:any, newName:string) => {\n    const trimmed = (newName || '').trim()\n    const pretty = toSubscript(trimmed)                 // converts A_1 -> A₁\n    pt.setAttribute({ name: pretty, withLabel: !!trimmed })\n    ;(pt as any)._rawName = trimmed                      // keep searchable original\n    // Removed pt.board.update() to prevent point attachment issues\n  }, [])\n\n  // find a point under event (prefers non-fixed)\n  function pointUnder(brd:JBoard, e:any) {\n    const under = brd.getAllObjectsUnderMouse(e)\n    return under.find((o:any)=>o.elType==='point') || null\n  }\n\n  function isNameTaken(brd:JBoard, raw:string, exceptId?:string) {\n    for (const k in brd.objects) {\n      const o:any = (brd.objects as any)[k]\n      if (o.elType === 'point' && o.id !== exceptId) {\n        if ((o._rawName ?? '') === raw) return true\n      }\n    }\n    return false\n  }\n\n  function nearestFreePoint(brd: JBoard, e: any) {\n    const under = brd.getAllObjectsUnderMouse(e)\n    const pt = under.find((o:any) => o.elType === 'point' && !o.visProp.fixed)\n    return pt || null\n  }\n\n  const createPointSmart = useCallback((brd: JBoard, xy: {x:number, y:number}) => {\n    const factory = geometryFactoryRef.current\n    if (!factory) return null\n    const { q } = givensRef.current!\n\n    // If near given line q, create a glider via undo/redo\n    if (pointOnLineXY(xy, q, 0.15)) {\n      const glider = brd.create('glider', [xy.x, xy.y, q], {\n        name: '', size: 3, strokeColor: '#e11d48', fillColor: '#e11d48', label: { offset: [5, 10] }\n      })\n      ;(glider as any)._rawName = ''\n      pushCreated(glider)\n      return glider\n    }\n\n    // Otherwise create normal point (always without snap)\n    const pt = factory.pointWithGrid(xy.x, xy.y, 'none')\n    pushCreated(pt)\n    return pt\n  }, [])\n\n  const handleClick = useCallback((brd: JBoard, e: any) => {\n    if (uiBusyRef.current) return\n    \n    // Prevent tools from firing while in rename mode\n    if (renameModeRef.current) return\n    \n    // Check if the click is on a physical tool - if so, don't handle it\n    const target = e.originalEvent?.target as HTMLElement\n    if (target && (target.closest('.group') || target.classList.contains('group'))) {\n      return // Let the physical tool handle the interaction\n    }\n    \n    const xy = getMouseCoords(brd, e)\n    const currentTool = toolRef.current\n\n    switch (currentTool) {\n      case 'mouse': {\n        // Mouse tool - do nothing, just allow interaction without creating objects\n        // Check if clicking on a point and prevent default behavior\n        const under = brd.getAllObjectsUnderMouse(e)\n        const clickedPoint = under.find((o:any) => o.elType === 'point' && !o.visProp.fixed)\n        if (clickedPoint) {\n          // Prevent default JSXGraph behavior for points when using mouse tool\n          if (e.originalEvent) {\n            e.originalEvent.preventDefault()\n            e.originalEvent.stopPropagation()\n          }\n          setFeedback('Bod vybrán')\n        } else {\n          setFeedback('')\n        }\n        break\n      }\n      case 'point': {\n        const p = createPointSmart(brd, xy)\n        if (p) setFeedback('Bod vytvořen')\n        break\n      }\n      case 'segment': {\n        const selectionMgr = selectionManagerRef.current\n        if (!selectionMgr) break\n        const first = selectionMgr.getFirst()\n        if (!first) {\n          undoRedoRef.current?.begin()\n          const p = createPointSmart(brd, xy)\n          if (!p) { undoRedoRef.current?.commit(); break }\n          selectionMgr.select(p)\n          setFeedback('Klikněte na druhý bod')\n          break\n        }\n        const a:any = first\n        const b = createPointSmart(brd, xy)\n        if (!b) { undoRedoRef.current?.commit(); selectionMgr.clear(); break }\n        const p1 = { x: a.X(), y: a.Y() }\n        const p2 = { x: (b as any).X(), y: (b as any).Y() }\n        const attr = { strokeColor:'#2563eb', strokeWidth:2 }\n        const op = undoRedoRef.current?.createSegmentOperation(p1, p2, attr)\n        if (op) {\n          op.pointIds = [a.id, (b as any).id]\n          undoRedoRef.current?.pushOperation(op)\n        }\n        undoRedoRef.current?.commit()\n        updateUndoRedoState()\n        selectionMgr.clear()\n        setFeedback('Úsečka vytvořena')\n        break\n      }\n      case 'line': {\n        const selectionMgr = selectionManagerRef.current\n        if (!selectionMgr) break\n        const first = selectionMgr.getFirst()\n        if (!first) {\n          undoRedoRef.current?.begin()\n          const p = createPointSmart(brd, xy)\n          if (!p) { undoRedoRef.current?.commit(); break }\n          selectionMgr.select(p)\n          setFeedback('Klikněte na druhý bod')\n          break\n        }\n        const a:any = first\n        const b = createPointSmart(brd, xy)\n        if (!b) { undoRedoRef.current?.commit(); selectionMgr.clear(); break }\n        const p1 = { x: a.X(), y: a.Y() }\n        const p2 = { x: (b as any).X(), y: (b as any).Y() }\n        const attr = { strokeColor:'#059669', strokeWidth:1, dash:1 }\n        const op = undoRedoRef.current?.createLineOperation(p1, p2, attr)\n        if (op) {\n          op.pointIds = [a.id, (b as any).id]\n          undoRedoRef.current?.pushOperation(op)\n        }\n        undoRedoRef.current?.commit()\n        updateUndoRedoState()\n        selectionMgr.clear()\n        setFeedback('Přímka vytvořena')\n        break\n      }\n      case 'circle': {\n        const selectionMgr = selectionManagerRef.current\n        if (!selectionMgr) break\n        const first = selectionMgr.getFirst()\n        if (!first) {\n          undoRedoRef.current?.begin()\n          const c = createPointSmart(brd, xy)\n          if (!c) { undoRedoRef.current?.commit(); break }\n          selectionMgr.select(c)\n          setFeedback('Klikněte na bod na kružnici')\n          break\n        }\n        const c:any = first\n        const p = createPointSmart(brd, xy)\n        if (!p) { undoRedoRef.current?.commit(); selectionMgr.clear(); break }\n        const center = { x: c.X(), y: c.Y() }\n        const on = { x: (p as any).X(), y: (p as any).Y() }\n        const attr = { strokeColor:'#dc2626', strokeWidth:2 }\n        const op = undoRedoRef.current?.createCircleOperation(center, on, attr)\n        if (op) {\n          op.pointIds = [c.id, (p as any).id]\n          undoRedoRef.current?.pushOperation(op)\n        }\n        undoRedoRef.current?.commit()\n        updateUndoRedoState()\n        selectionMgr.clear()\n        setFeedback('Kružnice vytvořena')\n        break\n      }\n      case 'rubber': {\n        const under = brd.getAllObjectsUnderMouse(e)\n        const toRemove = under.find((o:any) => !o.visProp?.fixed && o.name !== 'S' && o.name !== 'C')\n        if (toRemove) {\n          const delOp = undoRedoRef.current?.createDeleteOperation(toRemove)\n          if (delOp) {\n            undoRedoRef.current?.pushOperation(delOp)\n            updateUndoRedoState()\n            setFeedback('Objekt smazán')\n          } else {\n            brd.removeObject(toRemove as JXG.GeometryElement)\n            setFeedback('Objekt smazán (bez historie)')\n          }\n        }\n        break\n      }\n    }\n  }, [createPointSmart])\n\n  useEffect(() => { handleClickRef.current = handleClick }, [handleClick])\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if ((e.key === 'n' || e.key === 'N') && !uiBusyRef.current) {\n        setRenameMode(v => !v)\n      }\n      if ((e.key === 'z' || e.key === 'Z') && (e.ctrlKey || e.metaKey) && !e.shiftKey) {\n        e.preventDefault()\n        undoRedoRef.current?.undo()\n        updateUndoRedoState()\n      }\n      if ((e.key === 'z' || e.key === 'Z') && (e.ctrlKey || e.metaKey) && e.shiftKey) {\n        e.preventDefault()\n        undoRedoRef.current?.redo()\n        updateUndoRedoState()\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyPress)\n    return () => window.removeEventListener('keydown', handleKeyPress)\n  }, [])\n\n  // Handle ruler position changes\n  const handleRulerPositionChange = (x: number, y: number, rotation: number, length: number) => {\n    setRulerPosition({ x, y, rotation, length })\n  }\n\n  // Handle triangle position changes\n  const handleTrianglePositionChange = (x: number, y: number, rotation: number, size: number) => {\n    setTrianglePosition({ x, y, rotation, size })\n  }\n\n  // Handle protractor position changes\n  const handleProtractorPositionChange = (x: number, y: number, rotation: number, size: number) => {\n    setProtractorPosition({ x, y, rotation, size })\n  }\n\n  function toggleRuler() {\n    setRulerVisible(!rulerVisible)\n    if (!rulerVisible) {\n      setActiveTool('ruler')\n      setTool('mouse') // Automatically switch to mouse mode when activating ruler\n    } else if (activeTool === 'ruler') {\n      setActiveTool(null)\n    }\n  }\n\n  function toggleTriangle() {\n    setTriangleVisible(!triangleVisible)\n    if (!triangleVisible) {\n      setActiveTool('triangle')\n      setTool('mouse') // Automatically switch to mouse mode when activating triangle\n    } else if (activeTool === 'triangle') {\n      setActiveTool(null)\n    }\n  }\n\n  function toggleProtractor() {\n    setProtractorVisible(!protractorVisible)\n    if (!protractorVisible) {\n      setActiveTool('protractor')\n      setTool('mouse') // Automatically switch to mouse mode when activating protractor\n    } else if (activeTool === 'protractor') {\n      setActiveTool(null)\n    }\n  }\n\n  useEffect(() => {\n    if (!containerRef.current) return\n\n    // Calculate dynamic bounding box in whole centimeters, centered at (0,0)\n    const containerRect = containerRef.current.getBoundingClientRect()\n    const boundingBox = calculateCenteredBoundingBoxCm(containerRect.width, containerRect.height)\n\n    // Create board manager\n    const boardManager = new BoardManager({\n      container: containerRef.current,\n      boundingbox: boundingBox,\n      axis: false,\n      showNavigation: false,\n      showCopyright: false,\n      grid: false,\n      pan: { enabled: false },\n      zoom: false,\n      keepaspectratio: true\n    })\n    boardManagerRef.current = boardManager\n    const brd = boardManager.getBoard()\n\n    // Geometry factory, selection, undo/redo\n    geometryFactoryRef.current = new GeometryFactory(brd)\n    selectionManagerRef.current = new SelectionManager()\n    undoRedoRef.current = new UndoRedoManager({ board: brd, onFeedback: setFeedback, EPS })\n\n    // Rename manager\n    const renameMgr = new RenameManager(brd, {\n      clickEps: 0.12,\n      promptLabel: 'Název bodu (např. A, B, C, A_1, A_2):',\n      eventGuard: (ev) => {\n        const t = ev?.originalEvent?.target as HTMLElement | null\n        if (t && (t.closest('.group') || t.classList?.contains('group'))) return false\n        return !uiBusyRef.current\n      },\n      onRenamed: ({ pointId, beforeRaw, afterRaw }) => {\n        if (beforeRaw === afterRaw) return\n        const pt: any = (brd.objects as any)[pointId]\n        if (!pt) return\n        const before = { x: pt.X(), y: pt.Y(), name: beforeRaw }\n        const after = { x: pt.X(), y: pt.Y(), name: afterRaw }\n        const op = undoRedoRef.current?.createModifyOperation(pointId, before, after)\n        if (op) {\n          undoRedoRef.current!.pushOperation(op)\n          updateUndoRedoState()\n        }\n      },\n    })\n    renameMgrRef.current = renameMgr\n\n    // Down handler always forwards to our click logic\n    const downHandler = (e:any) => { handleClickRef.current?.(brd, e) }\n    brd.on('down', downHandler)\n\n    // Initialize givens - positioned relative to center (0,0)\n    // Line q: horizontal line below center\n    const q = brd.create('line', [[-3, -2], [3, -2]], {\n      strokeColor: '#000', strokeWidth: 2,\n      name: 'q', withLabel: true, fixed: true,\n      label: { position: 'rt', offset: [10, 0] }\n    })\n    const S = brd.create('point', [0, 0], {\n      name: 'S', size: 3, strokeColor: '#000', fillColor: '#000', fixed: true,\n      label: { offset: [5, 10] }\n    })\n    const C = brd.create('point', [-0.5, -4], {\n      name: 'C', size: 3, strokeColor: '#000', fillColor: '#000', fixed: true,\n      label: { offset: [5, -15] }\n    })\n    givensRef.current = { q, S, C }\n\n    return () => {\n      try { brd.off('down', downHandler) } catch {}\n      try { renameMgrRef.current?.destroy() } catch {}\n      renameMgrRef.current = null\n      undoRedoRef.current = null\n      geometryFactoryRef.current = null\n      selectionManagerRef.current = null\n      boardManager.free()\n      boardManagerRef.current = null\n      givensRef.current = null\n    }\n  }, [])\n\n  // Apply grid changes\n  useEffect(() => {\n    boardManagerRef.current?.setGridMode(gridOption)\n  }, [gridOption])\n\n  // Update event handlers when rename mode changes\n  useEffect(() => {\n    const brd = boardManagerRef.current?.getBoard()\n    if (!brd) return\n\n    // Clean old handlers\n    brd.off('down')\n    brd.off('up')\n    brd.off('dblclick')\n\n    const CLICK_EPS = 0.12 // world units; tweak if needed\n\n    const openPrompt = (pt:any, e:any) => {\n      const currentRaw = (pt as any)._rawName || ''\n      let proposed = (window.prompt('Název bodu (např. A, B, C, A_1, A_2):', currentRaw) ?? '').trim()\n\n      if (proposed && isNameTaken(brd, proposed, (pt as any).id)) {\n        let i = 2\n        while (isNameTaken(brd, `${proposed}_${i}`, (pt as any).id)) i++\n        proposed = `${proposed}_${i}`\n      }\n\n      renamePoint(pt, proposed)\n\n      // Restore mobility\n      const arm = renameArmRef.current\n      ;(pt as any).setAttribute({ fixed: arm.wasFixed })\n\n      // Stop further board interaction from this click\n      if (e?.originalEvent) {\n        e.originalEvent.stopPropagation()\n        e.originalEvent.preventDefault()\n      }\n      brd.update()\n\n      if (!proposed) setRenameMode(false)\n\n      // Clear arm\n      renameArmRef.current = { pt:null, wasFixed:false }\n      downPosRef.current = null\n    }\n\n    // 1) DOWN: if in rename mode and on a point, FREEZE it and arm rename\n    const downHandler = (e:any) => {\n      if (uiBusyRef.current) return\n\n      // If not in rename mode, pass through to normal drawing handler\n      if (!renameModeRef.current) {\n        if (handleClickRef.current) handleClickRef.current(brd, e)\n        return\n      }\n\n      const pt = pointUnder(brd, e)\n      if (!pt) return\n\n      // Freeze now (before any drag begins)\n      const wasFixed = !!(pt as any).visProp.fixed\n      ;(pt as any).setAttribute({ fixed: true })\n\n      renameArmRef.current = { pt, wasFixed }\n      downPosRef.current = getMouseCoords(brd, e)\n\n      // Kill default drag start\n      if (e.originalEvent) {\n        e.originalEvent.stopPropagation()\n        e.originalEvent.preventDefault()\n      }\n    }\n\n    // 2) UP: if we armed a point and movement was small → open prompt\n    const upHandler = (e:any) => {\n      const arm = renameArmRef.current\n      if (!arm.pt) return\n\n      const up = getMouseCoords(brd, e)\n      const down = downPosRef.current || up\n      const moved = Math.hypot(up.x - down.x, up.y - down.y)\n\n      // Only treat as rename if it was a click, not a drag\n      if (moved <= CLICK_EPS) {\n        openPrompt(arm.pt, e)\n        return\n      }\n\n      // If it was a drag after all, restore the point & abort rename\n      const { pt } = arm\n      ;(pt as any).setAttribute({ fixed: arm.wasFixed })\n      renameArmRef.current = { pt:null, wasFixed:false }\n      downPosRef.current = null\n    }\n\n    brd.on('down', downHandler)\n    brd.on('up', upHandler)\n\n    return () => {\n      try { brd.off('down', downHandler); brd.off('up', upHandler) } catch {}\n    }\n  }, [renameMode, renamePoint])\n\n  function undoLast() {\n    undoRedoRef.current?.undo()\n    updateUndoRedoState()\n  }\n\n  function clearAll() {\n    const brd = boardManagerRef.current?.getBoard()\n    if (!brd) return\n    const toRemove: any[] = []\n    for (const key in brd.objects) {\n      const o: any = brd.objects[key]\n      if (!o?.visProp?.fixed && o.name !== 'S' && o.name !== 'C' && o.name !== 'q') {\n        toRemove.push(o)\n      }\n    }\n    toRemove.forEach(o => brd.removeObject(o))\n    setSelected([])\n    setFeedback('')\n    setData(null)\n    setCreatedStack([])\n  }\n\n  function validateNow() {\n    const brd = boardManagerRef.current!.getBoard()!\n    const { q, S, C } = givensRef.current!\n\n    const pts = Object.values(brd.objects).filter((o:any) => o.elType === 'point') as any[]\n    const getRaw = (p:any) => (p?._rawName ?? p?.name ?? '')\n    const A = pts.find(p => getRaw(p) === 'A')\n    const B = pts.find(p => getRaw(p) === 'B')\n    if (!A || !B) {\n      return { \n        passed:false, \n        message:'Označte vrcholy A a B.', \n        score:0 \n      }\n    }\n\n    const AonQ = pointOnLineXY(coordsOfPoint(A), q, EPS)\n    const BonQ = pointOnLineXY(coordsOfPoint(B), q, EPS)\n    if (!(AonQ && BonQ)) {\n      return { passed:false, message:'A i B musí ležet na přímce q.', score:1 }\n    }\n\n    const AC = dist(coordsOfPoint(A), coordsOfPoint(C))\n    const BC = dist(coordsOfPoint(B), coordsOfPoint(C))\n    const isIso = Math.abs(AC - BC) < EPS\n    \n    const SA = dist(coordsOfPoint(S), coordsOfPoint(A))\n    const SB = dist(coordsOfPoint(S), coordsOfPoint(B))\n    const SC = dist(coordsOfPoint(S), coordsOfPoint(C))\n    const midOnAC = Math.abs(SA - SC) < EPS\n    const midOnBC = Math.abs(SB - SC) < EPS\n\n    if (!(isIso && (midOnAC || midOnBC))) {\n      return { \n        passed:false, \n        message:'Zkontrolujte: AC = BC a S je střed ramene.', \n        score:2 \n      }\n    }\n\n    const segs = Object.values(brd.objects).filter((o:any) => o.elType === 'segment')\n    const hasAB = segs.some(s => hasEndpoints(s, [A, B]))\n    const hasAC = segs.some(s => hasEndpoints(s, [A, C]))\n    const hasBC = segs.some(s => hasEndpoints(s, [B, C]))\n    \n    if (!(hasAB && hasAC && hasBC)) {\n      return { \n        passed:true, \n        message:'Správně, ale chybí narýsované strany.', \n        score:3 \n      }\n    }\n    \n    return { passed:true, message:'✅ Výborně! Podmínky splněny.', score:3 }\n  }\n\n  function saveConstruction() {\n    const brd = boardManagerRef.current?.getBoard()\n    if (!brd) return\n    const validation = validateNow()\n    setData({ validation, timestamp: new Date().toISOString() })\n    setFeedback(validation.message)\n  }\n\n  function updateUndoRedoState() {\n    setCanUndoState(undoRedoRef.current?.canUndo() ?? false)\n    setCanRedoState(undoRedoRef.current?.canRedo() ?? false)\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\n          <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">\n            Úloha 9: Konstrukce trojúhelníku\n          </h1>\n\n          <div className=\"bg-blue-50 border-l-4 border-blue-500 p-4 mb-4\">\n            <p className=\"text-gray-700\">\n              Sestrojte rovnoramenný trojúhelník ABC. Bod C je vrchol, S je střed ramene, AB leží na přímce q.\n            </p>\n          </div>\n\n          {/* Toolbar */}\n          <div className=\"flex flex-wrap gap-2 mb-4 p-4 bg-gray-100 rounded-lg\">\n            <button \n              onClick={() => setTool('mouse')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'mouse' ? 'bg-gray-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <path d=\"M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z\"/>\n                <path d=\"M13 13l6 6\"/>\n              </svg>\n              Myš\n            </button>\n            <button \n              onClick={() => setTool('point')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'point' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Circle size={18}/> Bod\n            </button>\n            <button \n              onClick={() => setTool('segment')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'segment' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Pencil size={18}/> Úsečka\n            </button>\n            <button \n              onClick={() => setTool('line')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'line' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Pencil size={18}/> Přímka\n            </button>\n            <button \n              onClick={() => setTool('circle')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'circle' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Circle size={18}/> Kružnice\n            </button>\n            <button \n              onClick={() => setTool('rubber')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'rubber' ? 'bg-red-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Eraser size={18}/> Guma\n            </button>\n            <button \n              onClick={() => setRenameMode(v => !v)}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                renameMode ? 'bg-teal-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n              title=\"Přejmenovat bod (klikněte na bod)\"\n            >\n              ✎ Název bodu\n            </button>\n            \n            <div className=\"border-l-2 border-gray-300 mx-2\"></div>\n            \n            <button \n              onClick={toggleRuler}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                rulerVisible ? 'bg-yellow-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Ruler size={18}/> Pravítko\n            </button>\n            <button \n              onClick={toggleTriangle}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                triangleVisible ? 'bg-purple-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Triangle size={18}/> Trojúhelník\n            </button>\n            <button \n              onClick={toggleProtractor}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                protractorVisible ? 'bg-orange-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Gauge size={18}/> Úhloměr\n            </button>\n\n            <div className=\"flex-1\"></div>\n\n            <button \n              onClick={undoLast}\n              disabled={!canUndoState}\n              className=\"px-3 py-2 rounded bg-gray-700 text-white hover:bg-gray-800 disabled:opacity-40 disabled:cursor-not-allowed flex items-center gap-2\"\n            >\n              <RotateCcw size={18}/> Zpět\n            </button>\n            <button onClick={clearAll} className=\"px-3 py-2 rounded bg-red-500 text-white hover:bg-red-600 flex items-center gap-2\">\n              <Trash2 size={18}/> Vymazat\n            </button>\n            <button onClick={saveConstruction} className=\"px-3 py-2 rounded bg-green-600 text-white hover:bg-green-700 flex items-center gap-2\">\n              <Save size={18}/> Uložit\n            </button>\n          </div>\n\n          <div \n            ref={containerRef} \n            id=\"jxgbox\" \n            className=\"w-full border-2 border-gray-300 rounded-lg bg-white jxgbox relative\" \n            style={{ height: 500, touchAction: 'none' }} \n          >\n            {/* Draggable Ruler */}\n            {rulerVisible && (\n              <DraggableRuler\n                x={rulerPosition.x}\n                y={rulerPosition.y}\n                rotation={rulerPosition.rotation}\n                length={rulerPosition.length}\n                onPositionChange={handleRulerPositionChange}\n                isActive={activeTool === 'ruler'}\n                onActivate={() => {\n                  setActiveTool('ruler')\n                  setTool('mouse') // Automatically switch to mouse mode when clicking ruler\n                }}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n            \n            {/* Draggable Triangle */}\n            {triangleVisible && (\n              <DraggableTriangle\n                x={trianglePosition.x}\n                y={trianglePosition.y}\n                rotation={trianglePosition.rotation}\n                size={trianglePosition.size}\n                type=\"45-45-90\"\n                onPositionChange={handleTrianglePositionChange}\n                isActive={activeTool === 'triangle'}\n                onActivate={() => {\n                  setActiveTool('triangle')\n                  setTool('mouse') // Automatically switch to mouse mode when clicking triangle\n                }}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n            \n            {/* Draggable Protractor */}\n            {protractorVisible && (\n              <DraggableProtractor\n                x={protractorPosition.x}\n                y={protractorPosition.y}\n                rotation={protractorPosition.rotation}\n                size={protractorPosition.size}\n                onPositionChange={handleProtractorPositionChange}\n                isActive={activeTool === 'protractor'}\n                onActivate={() => {\n                  setActiveTool('protractor')\n                  setTool('mouse') // Automatically switch to mouse mode when clicking protractor\n                }}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n          </div>\n\n\n          {feedback && (\n            <div className={`mt-4 p-4 rounded-lg ${\n              feedback.includes('✅') ? 'bg-green-50 border-l-4 border-green-500' : 'bg-yellow-50 border-l-4 border-yellow-500'\n            }`}>\n              <p className=\"text-gray-800\">{feedback}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}