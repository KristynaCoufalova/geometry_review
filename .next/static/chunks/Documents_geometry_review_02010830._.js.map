{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/measurement-scale.ts"],"sourcesContent":["// lib/measurement-scale.ts\n// Centralized logical measurement scale: 1 world unit = 1 cm\n\nexport const WORLD_PER_CM = 1\nexport const CM_PER_WORLD = 1 / WORLD_PER_CM\nexport const WORLD_PER_MM = WORLD_PER_CM / 10\n\nexport const UNIT_LABEL = 'cm'\n\nexport function toCm(valueInWorld: number): number {\n  return valueInWorld * CM_PER_WORLD\n}\n\nexport function fromCm(valueInCm: number): number {\n  return valueInCm * WORLD_PER_CM\n}\n\nexport function defaultBoundingBoxCm(widthCm: number, heightCm: number, marginCm = 0): [number, number, number, number] {\n  return [\n    0 - marginCm,\n    heightCm + marginCm,\n    widthCm + marginCm,\n    0 - marginCm\n  ]\n}\n\n\n"],"names":[],"mappings":"AAAA,2BAA2B;AAC3B,6DAA6D;;;;;;;;;;;;;;;;;AAEtD,MAAM,eAAe;AACrB,MAAM,eAAe,IAAI;AACzB,MAAM,eAAe,eAAe;AAEpC,MAAM,aAAa;AAEnB,SAAS,KAAK,YAAoB;IACvC,OAAO,eAAe;AACxB;AAEO,SAAS,OAAO,SAAiB;IACtC,OAAO,YAAY;AACrB;AAEO,SAAS,qBAAqB,OAAe,EAAE,QAAgB;QAAE,WAAA,iEAAW;IACjF,OAAO;QACL,IAAI;QACJ,WAAW;QACX,UAAU;QACV,IAAI;KACL;AACH","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/board-serializer.ts"],"sourcesContent":["import type JXG from 'jsxgraph'\nimport { UNIT_LABEL } from './measurement-scale'\n\nexport type Snapshot = {\n  version: 1\n  timestamp: string\n  unit: string\n  bbox: number[]\n  objects: Array<\n    | { id?: string; type: 'point'; name?: string; properties?: any; x: number; y: number }\n    | { id?: string; type: 'segment'|'line'; name?: string; properties?: any;\n        x1: number; y1: number; x2: number; y2: number }\n    | { id?: string; type: 'circle'; name?: string; properties?: any;\n        center:{x:number;y:number}; radius:number }\n    | { id?: string; type: 'polygon'; name?: string; properties?: any;\n        vertices:{x:number;y:number}[] }\n  >\n  meta?: Record<string, any> // tool positions, gridMode, etc.\n}\n\nexport function exportBoard(brd: JXG.Board, meta?: Record<string, any>): Snapshot {\n  const bbox = brd.getBoundingBox()\n  const [left, top, right, bottom] = bbox\n  const EPS = 1e-9\n  const isOnBorder = (x:number, y:number) => (\n    Math.abs(x - left) < EPS || Math.abs(x - right) < EPS ||\n    Math.abs(y - top) < EPS || Math.abs(y - bottom) < EPS\n  )\n\n  const objects = Object.values(brd.objects).flatMap((o: any): Snapshot['objects'] => {\n    const t = o.elType\n    if (t === 'point') {\n      const x = o.X(), y = o.Y()\n      // Drop unnamed border points to avoid exporting grid/bbox helpers\n      if (!o.name && isOnBorder(x, y)) return []\n      return [{ id:o.id, type:'point' as const, name:o.name, x, y }]\n    }\n    if (t === 'segment' || t === 'line') {\n      const p1 = o.points?.[0] ?? o.point1\n      const p2 = o.points?.[1] ?? o.point2\n      if (!p1 || !p2) return []\n      return [{ id:o.id, type:t, name:o.name, x1:p1.X(), y1:p1.Y(), x2:p2.X(), y2:p2.Y() }]\n    }\n    if (t === 'circle') {\n      const c = o.center\n      const on = o.point2 ?? o.points?.[1]\n      if (!c || !on) return []\n      const r = Math.hypot(on.X() - c.X(), on.Y() - c.Y())\n      return [{ id:o.id, type:'circle' as const, name:o.name, center:{x:c.X(),y:c.Y()}, radius:r }]\n    }\n    if (t === 'polygon') {\n      const verts = (o.vertices ?? []).map((v:any)=>({x:v.X(),y:v.Y()}))\n      if (verts.length < 3) return []\n      return [{ id:o.id, type:'polygon' as const, name:o.name, vertices:verts }]\n    }\n    return []\n  })\n\n  const result: Snapshot = {\n    version: 1,\n    timestamp: new Date().toISOString(),\n    unit: UNIT_LABEL,\n    bbox,\n    objects,\n  }\n  if (meta) result.meta = meta\n  return result\n}\n\n// Convert old format (with geometry nested) to new format\nfunction normalizeSnapshot(data: any): Snapshot | null {\n  // Already new format\n  if (data && data.version === 1 && Array.isArray(data.objects)) {\n    return data as Snapshot\n  }\n  \n  // Old format: objects have geometry nested\n  if (Array.isArray(data.objects)) {\n    const normalized: Snapshot = {\n      version: 1,\n      timestamp: data.timestamp || new Date().toISOString(),\n      unit: data.unit || 'cm',\n      bbox: data.boundingBoxCm || data.bbox || [-1, 8, 11, -1],\n      objects: []\n    }\n    \n    for (const o of data.objects) {\n      if (!o || !o.type || o.geometry === null) continue\n      \n      const g = o.geometry\n      if (!g) continue\n      \n      if (o.type === 'point' && g.x != null && g.y != null) {\n        normalized.objects.push({ type: 'point', id: o.id, name: o.name, x: g.x, y: g.y })\n      } else if ((o.type === 'segment' || o.type === 'line') && g.x1 != null && g.y1 != null && g.x2 != null && g.y2 != null) {\n        normalized.objects.push({ type: o.type, id: o.id, name: o.name, x1: g.x1, y1: g.y1, x2: g.x2, y2: g.y2 })\n      } else if (o.type === 'circle' && g.center && g.radius != null) {\n        normalized.objects.push({ type: 'circle', id: o.id, name: o.name, center: g.center, radius: g.radius })\n      } else if (o.type === 'polygon' && Array.isArray(g.vertices) && g.vertices.length >= 3) {\n        normalized.objects.push({ type: 'polygon', id: o.id, name: o.name, vertices: g.vertices })\n      }\n    }\n    \n    if (data.gridOption || data.rulerPosition || data.trianglePosition || data.protractorPosition) {\n      normalized.meta = {\n        gridOption: data.gridOption,\n        rulerPosition: data.rulerPosition,\n        trianglePosition: data.trianglePosition,\n        protractorPosition: data.protractorPosition,\n        rulerVisible: data.rulerVisible,\n        triangleVisible: data.triangleVisible,\n        protractorVisible: data.protractorVisible,\n        createdStack: data.createdStack\n      }\n    }\n    \n    return normalized\n  }\n  \n  return null\n}\n\n// Strict, whitelisted import. No DOM here.\nexport function importBoard(brd: JXG.Board, snapshot: any) {\n  const normalized = normalizeSnapshot(snapshot)\n  if (!normalized || normalized.version !== 1) {\n    throw new Error('Unsupported snapshot version or invalid format')\n  }\n  \n  const data = normalized\n\n  // Remove current (non-fixed) objects first\n  const remove: any[] = []\n  for (const k in brd.objects) {\n    const o: any = (brd.objects as any)[k]\n    if (!o?.visProp?.fixed) remove.push(o)\n  }\n  remove.forEach(o => brd.removeObject(o))\n\n  const idMap: Record<string, any> = {}\n  const pointMap = new Map<string, any>() // key: \"x,y\" -> point element\n  const EPS = 1e-6\n\n  // Helper to find or create point (deduplication)\n  const findOrCreatePointNear = (x:number, y:number, name?:string): any => {\n    if (x == null || y == null || !isFinite(x) || !isFinite(y)) return null\n    const rx = Math.round(x / EPS) * EPS\n    const ry = Math.round(y / EPS) * EPS\n    const key = `${rx},${ry}`\n    if (pointMap.has(key)) {\n      const existing = pointMap.get(key)\n      if (existing && typeof existing.X === 'function') return existing\n    }\n    try {\n      const pt = brd.create('point', [x, y], { \n        name: name ?? '', \n        withLabel: !!name, \n        snapToGrid: false,\n        size: 2, \n        strokeColor: '#444', \n        fillColor: '#666' \n      })\n      if (pt && typeof pt.X === 'function') {\n        pointMap.set(key, pt)\n        return pt\n      }\n    } catch (e) {\n      // Creation failed\n    }\n    return null\n  }\n\n  const baseStyle = (kind:string, props?:any) => {\n    const base:any = { visible:true }\n    if (kind==='segment') base.strokeWidth=2\n    if (kind==='line')    base.strokeWidth=1\n    if (kind==='circle')  base.strokeWidth=2\n    // whitelist safe properties\n    const safe:any = {}\n    const allow = ['strokeColor','strokeWidth','dash','fillColor','size','withLabel','visible','fixed']\n    for (const k of allow) if (props && Object.prototype.hasOwnProperty.call(props,k)) safe[k]=props[k]\n    return { ...base, ...safe }\n  }\n\n  // First pass: create points needed explicitly\n  for (const o of snapshot.objects) {\n    if (o.type === 'point') {\n      const p = findOrCreatePointNear(o.x, o.y, o.name)\n      if (o.id) { try { (p as any).id = o.id } catch {}; idMap[o.id] = p }\n    }\n  }\n\n  // Second pass: segments/lines/circles/polygons\n  for (const o of snapshot.objects) {\n    try {\n      if (o.type === 'segment' || o.type === 'line') {\n        const p1 = findOrCreatePointNear(o.x1, o.y1)\n        const p2 = findOrCreatePointNear(o.x2, o.y2)\n        if (!p1 || !p2) continue // Skip if points couldn't be created\n        const el = brd.create(o.type, [p1, p2], baseStyle(o.type, o.properties))\n        if (o.id) { try { (el as any).id = o.id } catch {}; idMap[o.id] = el }\n        if (o.name && 'setAttribute' in el) (el as any).setAttribute({ name:o.name, withLabel:true })\n      } else if (o.type === 'circle') {\n        const c = findOrCreatePointNear(o.center.x, o.center.y)\n        if (!c) continue // Skip if center couldn't be created\n        const on = brd.create('point', [o.center.x + o.radius, o.center.y], {visible:false, fixed:true})\n        if (!on) continue // Skip if on-point couldn't be created\n        const el = brd.create('circle', [c, on], baseStyle('circle', o.properties))\n        if (o.id) { try { (el as any).id = o.id } catch {}; idMap[o.id] = el }\n        if (o.name && 'setAttribute' in el) (el as any).setAttribute({ name:o.name, withLabel:true })\n      } else if (o.type === 'polygon') {\n        const pts = o.vertices.map((v:any) => findOrCreatePointNear(v.x, v.y)).filter(Boolean)\n        if (pts.length < 3) continue // Need at least 3 points for polygon\n        const el = brd.create('polygon', pts, baseStyle('polygon', o.properties))\n        if (o.id) { try { (el as any).id = o.id } catch {}; idMap[o.id] = el }\n        if (o.name && 'setAttribute' in el) (el as any).setAttribute({ name:o.name, withLabel:true })\n      }\n    } catch (e) {\n      // Skip if creation fails\n    }\n  }\n\n  brd.update?.()\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/hooks/useBoardScale.ts"],"sourcesContent":["import { useCallback } from 'react'\n\nexport function useBoardScale(ref: React.RefObject<HTMLDivElement | null>) {\n  const get = useCallback(() => {\n    const box = ref.current?.closest('.jxgbox') as HTMLElement | null\n    if (!box) return { pxPerUnitX: 50, pxPerUnitY: 50, uniformScale: 50 } // fallback\n    \n    const { width: w, height: h } = box.getBoundingClientRect()\n    // Must match your board bounding box:\n    const left = -1, top = 8, right = 11, bottom = -1\n    const unitsX = right - left   // 12\n    const unitsY = top - bottom   // 9\n    \n    // Calculate uniform scale to maintain aspect ratio\n    const scaleX = w / unitsX\n    const scaleY = h / unitsY\n    const uniformScale = Math.min(scaleX, scaleY)\n    \n    return { \n      pxPerUnitX: uniformScale, \n      pxPerUnitY: uniformScale, \n      uniformScale,\n      boardLeft: left,\n      boardTop: top,\n      boardRight: right,\n      boardBottom: bottom,\n      boardWidth: unitsX,\n      boardHeight: unitsY\n    }\n  }, [ref])\n  \n  return get\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,SAAS,cAAc,GAA2C;;IACvE,MAAM,MAAM,IAAA,4MAAW;0CAAC;gBACV;YAAZ,MAAM,OAAM,eAAA,IAAI,OAAO,cAAX,mCAAA,aAAa,OAAO,CAAC;YACjC,IAAI,CAAC,KAAK,OAAO;gBAAE,YAAY;gBAAI,YAAY;gBAAI,cAAc;YAAG,EAAE,WAAW;;YAEjF,MAAM,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,GAAG,IAAI,qBAAqB;YACzD,sCAAsC;YACtC,MAAM,OAAO,CAAC,GAAG,MAAM,GAAG,QAAQ,IAAI,SAAS,CAAC;YAChD,MAAM,SAAS,QAAQ,KAAO,KAAK;;YACnC,MAAM,SAAS,MAAM,OAAS,IAAI;;YAElC,mDAAmD;YACnD,MAAM,SAAS,IAAI;YACnB,MAAM,SAAS,IAAI;YACnB,MAAM,eAAe,KAAK,GAAG,CAAC,QAAQ;YAEtC,OAAO;gBACL,YAAY;gBACZ,YAAY;gBACZ;gBACA,WAAW;gBACX,UAAU;gBACV,YAAY;gBACZ,aAAa;gBACb,YAAY;gBACZ,aAAa;YACf;QACF;yCAAG;QAAC;KAAI;IAER,OAAO;AACT;GA9BgB","debugId":null}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/DraggableRuler.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react'\nimport { useBoardScale } from '../hooks/useBoardScale'\n\ninterface DraggableRulerProps {\n  x: number\n  y: number\n  rotation: number\n  length: number\n  onPositionChange: (x: number, y: number, rotation: number, length: number) => void\n  isActive: boolean\n  onActivate: () => void\n  onUiBusyChange: (busy: boolean) => void\n}\n\nexport default function DraggableRuler({\n  x,\n  y,\n  rotation,\n  length,\n  onPositionChange,\n  isActive,\n  onActivate,\n  onUiBusyChange\n}: DraggableRulerProps) {\n  const [isDragging, setIsDragging] = useState(false)\n  const [isRotating, setIsRotating] = useState(false)\n  const [isResizing, setIsResizing] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 })\n  const [rotationStart, setRotationStart] = useState({ x: 0, y: 0, rotation: 0, initialAngle: 0 })\n  const [resizeStart, setResizeStart] = useState({ x: 0, y: 0, length: 0 })\n  const rulerRef = useRef<HTMLDivElement>(null)\n  const getScale = useBoardScale(rulerRef)\n  const { pxPerUnitX, pxPerUnitY } = getScale()\n  const pxPerUnit = Math.min(pxPerUnitX, pxPerUnitY)\n\n  // Memoized coordinate conversion functions for better performance\n  const coordinateConverter = useMemo(() => {\n    const boardLeft = -1\n    const boardTop = 8\n    const boardRight = 11\n    const boardBottom = -1\n    const boardWidth = boardRight - boardLeft // 12\n    const boardHeight = boardTop - boardBottom // 9\n    \n    return {\n      boardToScreen: (boardX: number, boardY: number) => {\n        // Get actual container dimensions\n        const container = rulerRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const screenX = ((boardX - boardLeft) / boardWidth) * containerWidth\n        const screenY = containerHeight - ((boardY - boardBottom) / boardHeight) * containerHeight\n        \n        return { x: screenX, y: screenY }\n      },\n      screenToBoard: (screenX: number, screenY: number) => {\n        const container = rulerRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const boardX = (screenX / containerWidth) * boardWidth + boardLeft\n        const boardY = boardTop - (screenY / containerHeight) * boardHeight\n        \n        return { x: boardX, y: boardY }\n      }\n    }\n  }, [])\n\n  const boardToScreen = coordinateConverter.boardToScreen\n  const screenToBoard = coordinateConverter.screenToBoard\n\n  const screenPos = boardToScreen(x, y)\n\n  // Smooth movement without grid snapping\n  const smoothPosition = (boardX: number, boardY: number) => {\n    return { x: boardX, y: boardY }\n  }\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from ruler center to mouse position\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const initialAngle = Math.atan2(e.clientY - centerY, e.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: e.clientX, y: e.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: e.clientX, y: e.clientY, length })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    }\n  }\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const touch = e.touches[0]\n    if (!touch) return\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from ruler center to touch position\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const initialAngle = Math.atan2(touch.clientY - centerY, touch.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: touch.clientX, y: touch.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: touch.clientX, y: touch.clientY, length })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    }\n  }\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDragging) {\n      const newScreenX = e.clientX - dragStart.x\n      const newScreenY = e.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, length)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      \n      // Calculate current angle from center to mouse\n      const currentAngle = Math.atan2(e.clientY - centerY, e.clientX - centerX) * (180 / Math.PI)\n      \n      // Calculate the difference from the initial angle\n      let deltaAngle = currentAngle - rotationStart.initialAngle\n      \n      // Handle angle wrapping (ensure we take the shorter path)\n      while (deltaAngle > 180) deltaAngle -= 360\n      while (deltaAngle < -180) deltaAngle += 360\n      \n      const newRotation = rotationStart.rotation + deltaAngle\n      onPositionChange(x, y, newRotation, length)\n    } else if (isResizing) {\n      const deltaX = e.clientX - resizeStart.x\n      const deltaY = e.clientY - resizeStart.y\n      \n      // Project the delta vector onto the ruler's axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const rulerAxisX = Math.cos(rotationRad)\n      const rulerAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the ruler axis\n      const projection = deltaX * rulerAxisX + deltaY * rulerAxisY\n      const deltaDistance = projection / pxPerUnit\n      \n      const newLength = Math.max(2, Math.min(10, resizeStart.length + deltaDistance))\n      onPositionChange(x, y, rotation, newLength)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, screenPos, x, y, rotation, length, onPositionChange, pxPerUnit, screenToBoard])\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    const touch = e.touches[0]\n    if (!touch) return\n    \n    if (isDragging) {\n      const newScreenX = touch.clientX - dragStart.x\n      const newScreenY = touch.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, length)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      \n      // Calculate current angle from center to touch\n      const currentAngle = Math.atan2(touch.clientY - centerY, touch.clientX - centerX) * (180 / Math.PI)\n      \n      // Calculate the difference from the initial angle\n      let deltaAngle = currentAngle - rotationStart.initialAngle\n      \n      // Handle angle wrapping (ensure we take the shorter path)\n      while (deltaAngle > 180) deltaAngle -= 360\n      while (deltaAngle < -180) deltaAngle += 360\n      \n      const newRotation = rotationStart.rotation + deltaAngle\n      onPositionChange(x, y, newRotation, length)\n    } else if (isResizing) {\n      const deltaX = touch.clientX - resizeStart.x\n      const deltaY = touch.clientY - resizeStart.y\n      \n      // Project the delta vector onto the ruler's axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const rulerAxisX = Math.cos(rotationRad)\n      const rulerAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the ruler axis\n      const projection = deltaX * rulerAxisX + deltaY * rulerAxisY\n      const deltaDistance = projection / pxPerUnit\n      \n      const newLength = Math.max(2, Math.min(10, resizeStart.length + deltaDistance))\n      onPositionChange(x, y, rotation, newLength)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, screenPos, x, y, rotation, length, onPositionChange, pxPerUnit, screenToBoard])\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  useEffect(() => {\n    if (isDragging || isRotating || isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      document.addEventListener('touchmove', handleTouchMove, { passive: false })\n      document.addEventListener('touchend', handleTouchEnd)\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.removeEventListener('touchmove', handleTouchMove, { passive: false } as any)\n        document.removeEventListener('touchend', handleTouchEnd)\n      }\n    }\n  }, [isDragging, isRotating, isResizing, handleMouseMove, handleTouchMove, handleMouseUp, handleTouchEnd])\n\n  // ResizeObserver to handle container size changes\n  useEffect(() => {\n    const el = rulerRef.current?.closest('.jxgbox')\n    if (!el) return\n    \n    const ro = new ResizeObserver(() => {\n      // Force a light refresh by updating dragStart state\n      setDragStart(s => ({ ...s }))\n    })\n    ro.observe(el)\n    return () => ro.disconnect()\n  }, [])\n\n  // Generate ruler markings based on actual length units\n  const generateMarkings = () => {\n    const markings = []\n    const rulerWidthPx = length * pxPerUnit\n    \n    // Create markings every 0.1 units, with major marks at 1.0 and medium at 0.5\n    const markInterval = 0.1 // Mark every 0.1 units\n    const numMarks = Math.floor(length / markInterval)\n    \n    for (let i = 0; i <= numMarks; i++) {\n      const unitValue = i * markInterval\n      const position = (unitValue / length) * rulerWidthPx\n      \n      const isMajor = unitValue % 1 === 0 // Major marks every 1 unit\n      const isMedium = unitValue % 0.5 === 0 && !isMajor // Medium marks every 0.5 units\n      \n      let height = 'h-1'\n      let opacity = 0.3\n      if (isMajor) {\n        height = 'h-5'\n        opacity = 0.8\n      } else if (isMedium) {\n        height = 'h-3'\n        opacity = 0.6\n      }\n      \n      markings.push(\n        <div\n          key={`mark-${i}`}\n          className={`absolute w-[1px] ${height} bg-black transition-all duration-200`}\n          style={{\n            left: position,\n            top: -1,\n            transform: 'translateX(-50%)',\n            opacity\n          }}\n        />\n      )\n      \n      // Add labels for major marks (every 1 unit)\n      if (isMajor && unitValue > 0) {\n        markings.push(\n          <div\n            key={`label-${i}`}\n            className=\"absolute text-[10px] text-slate-600 font-medium tracking-tight\"\n            style={{\n              left: position,\n              top: -16,\n              transform: 'translateX(-50%)',\n              fontFeatureSettings: '\"tnum\"'\n            }}\n          >\n            {unitValue}\n          </div>\n        )\n      }\n    }\n    \n    return markings\n  }\n\n  return (\n    <div\n      ref={rulerRef}\n      className={`absolute select-none group ${isActive ? 'z-50' : 'z-40'}`}\n      style={{\n        left: screenPos.x,\n        top: screenPos.y,\n        transform: `rotate(${rotation}deg)`,\n        transformOrigin: '0 0'\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleTouchStart}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      {/* Ruler body with enhanced SVG styling */}\n      <div className=\"relative\" style={{ pointerEvents: 'none' }}>\n        <svg\n          width={length * pxPerUnit + 100}\n          height={40}\n          className=\"absolute\"\n          style={{ left: -50, top: -10, pointerEvents: 'auto' }}\n        >\n          <defs>\n            {/* Main plastic gradient with enhanced depth and contrast */}\n            <linearGradient id=\"rulerPlasticGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.6)\" />\n              <stop offset=\"15%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.2)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(240,245,250,0.1)\" />\n              <stop offset=\"70%\" stopColor=\"rgba(200,210,220,0.15)\" />\n              <stop offset=\"85%\" stopColor=\"rgba(150,160,170,0.2)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(100,110,120,0.25)\" />\n            </linearGradient>\n\n            {/* Secondary highlight gradient for more realistic plastic look */}\n            <linearGradient id=\"rulerHighlightGradient\" x1=\"0%\" y1=\"0%\" x2=\"60%\" y2=\"40%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.8)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"60%\" stopColor=\"rgba(255,255,255,0.1)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(255,255,255,0)\" />\n            </linearGradient>\n\n            {/* Shadow gradient for depth */}\n            <linearGradient id=\"rulerShadowGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(0,0,0,0)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(0,0,0,0.05)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(0,0,0,0.15)\" />\n            </linearGradient>\n\n            {/* Enhanced drop shadow with more depth and realism */}\n            <filter id=\"rulerSoftShadow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feDropShadow dx=\"0\" dy=\"8\" stdDeviation=\"16\" floodColor=\"#000\" floodOpacity=\"0.3\" />\n              <feDropShadow dx=\"0\" dy=\"4\" stdDeviation=\"8\" floodColor=\"#000\" floodOpacity=\"0.2\" />\n              <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"4\" floodColor=\"#000\" floodOpacity=\"0.1\" />\n            </filter>\n\n            {/* Glow effect for active state */}\n            <filter id=\"rulerGlow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/>\n              </feMerge>\n            </filter>\n          </defs>\n          \n          {/* Ruler plastic look: base fill, shine gradient overlay, and stroke */}\n          <g filter={isActive ? \"url(#rulerGlow)\" : \"url(#rulerSoftShadow)\"}>\n            {/* Base fill with enhanced opacity for better depth */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"rgba(240,245,250,0.25)\" />\n            {/* Shadow gradient for depth */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"url(#rulerShadowGradient)\" />\n            {/* Main plastic gradient overlay */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"url(#rulerPlasticGradient)\" />\n            {/* Highlight gradient for realistic plastic shine */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"url(#rulerHighlightGradient)\" />\n            {/* Enhanced outline with subtle inner shadow */}\n            <rect x={50} y={10} width={length * pxPerUnit} height={20} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\"/>\n          </g>\n          \n          {/* Enhanced ruler markings with 0.1cm precision */}\n          {(() => {\n            const markings = []\n            const rulerWidthPx = length * pxPerUnit\n            const pxPerCm = pxPerUnit\n            const maxCm = Math.floor(length)\n            \n            // Create markings every 0.1cm (1mm)\n            for (let cm = 0; cm <= maxCm; cm++) {\n              const x = 50 + cm * pxPerCm\n              const isFive = cm % 5 === 0\n              const majorLen = isFive ? 18 : 12\n              \n              // Main centimeter tick mark\n              markings.push(\n                <rect\n                  key={`cm-${cm}`}\n                  x={x - 0.5}\n                  y={10}\n                  width={1}\n                  height={majorLen}\n                  fill=\"#000\"\n                />\n              )\n              \n              // Millimeter marks (9 small ticks between each centimeter)\n              if (cm < maxCm) {\n                for (let mm = 1; mm < 10; mm++) {\n                  const xx = x + (pxPerCm * mm) / 10\n                  const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n                  \n                  markings.push(\n                    <rect\n                      key={`mm-${cm}-${mm}`}\n                      x={xx - 0.25}\n                      y={10}\n                      width={0.5}\n                      height={mmLen}\n                      fill=\"#000\"\n                      opacity=\"0.75\"\n                    />\n                  )\n                }\n              }\n            }\n            \n            // Add millimeter marks between last whole centimeter and final length value\n            if (length % 1 !== 0) {\n              const lastWholeCm = Math.floor(length)\n              const finalX = 50 + length * pxPerCm\n              \n              // Add millimeter marks from last whole cm to final length\n              for (let mm = 1; mm <= Math.floor((length - lastWholeCm) * 10); mm++) {\n                const xx = 50 + (lastWholeCm + mm / 10) * pxPerCm\n                const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n                \n                markings.push(\n                  <rect\n                    key={`mm-final-${mm}`}\n                    x={xx - 0.25}\n                    y={10}\n                    width={0.5}\n                    height={mmLen}\n                    fill=\"#000\"\n                    opacity=\"0.75\"\n                  />\n                )\n              }\n              \n              // Add final marking at exact length value\n              markings.push(\n                <rect\n                  key={`cm-final`}\n                  x={finalX - 0.5}\n                  y={10}\n                  width={1}\n                  height={12}\n                  fill=\"#000\"\n                />\n              )\n            }\n            \n            return markings\n          })()}\n        </svg>\n        \n        {/* Ruler numbers - positioned as HTML elements like in the triangle component */}\n        {(() => {\n          const pxPerCm = pxPerUnit\n          const maxCm = Math.floor(length)\n          const numbers = []\n          \n          for (let cm = 1; cm <= maxCm; cm++) {\n            const x = cm * pxPerCm\n            const isFive = cm % 5 === 0\n            \n            numbers.push(\n              <div\n                key={`ruler-number-${cm}`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: x, // Direct positioning without SVG offset\n                  top: -25, // Position above the ruler\n                  transform: 'translateX(-50%)',\n                  fontWeight: isFive ? 'bold' : 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {cm}\n              </div>\n            )\n          }\n\n          // Add final number at exact length value (only if not a whole number)\n          if (length % 1 !== 0) {\n            const finalX = length * pxPerCm\n            numbers.push(\n              <div\n                key={`ruler-number-final`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: finalX, // Direct positioning without SVG offset\n                  top: -25, // Position above the ruler\n                  transform: 'translateX(-50%)',\n                  fontWeight: 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {length.toFixed(1)}\n              </div>\n            )\n          }\n          \n          return numbers\n        })()}\n        \n        {/* Rotation handle - enhanced styling to match triangle */}\n        <div\n          className=\"rotation-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-emerald-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like triangle\n            left: length * pxPerUnit - 2,\n            top: 2,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 20\n          }}\n          title=\"Otočit pravítko\"\n        >\n          <div className=\"w-2 h-2 bg-emerald-500 rounded-full\" />\n        </div>\n        \n        {/* Resize handle - enhanced styling to match triangle */}\n        <div\n          className=\"resize-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-amber-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like triangle\n            left: length * pxPerUnit - 2,\n            top: 14,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 15\n          }}\n          title=\"Změnit délku\"\n        >\n          <div className=\"w-2 h-2 bg-amber-500 rounded-full\" />\n        </div>\n      </div>\n      \n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1382, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/DraggableTriangle.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react'\nimport { useBoardScale } from '../hooks/useBoardScale'\n\ninterface DraggableTriangleProps {\n  x: number\n  y: number\n  rotation: number\n  size: number\n  type: '45-45-90' | '30-60-90'\n  onPositionChange: (x: number, y: number, rotation: number, size: number) => void\n  isActive: boolean\n  onActivate: () => void\n  onUiBusyChange: (busy: boolean) => void\n}\n\nexport default function DraggableTriangle({\n  x,\n  y,\n  rotation,\n  size,\n  type,\n  onPositionChange,\n  isActive,\n  onActivate,\n  onUiBusyChange\n}: DraggableTriangleProps) {\n  const [isDragging, setIsDragging] = useState(false)\n  const [isRotating, setIsRotating] = useState(false)\n  const [isResizing, setIsResizing] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 })\n  const [rotationStart, setRotationStart] = useState({ x: 0, y: 0, rotation: 0, initialAngle: 0 })\n  const [resizeStart, setResizeStart] = useState({ x: 0, y: 0, size: 0 })\n  const triangleRef = useRef<HTMLDivElement>(null)\n  const getScale = useBoardScale(triangleRef)\n  const { pxPerUnitX, pxPerUnitY } = getScale()\n  const pxPerUnit = Math.min(pxPerUnitX, pxPerUnitY)\n\n  // Memoized coordinate conversion functions for better performance\n  const coordinateConverter = useMemo(() => {\n    const boardLeft = -1\n    const boardTop = 8\n    const boardRight = 11\n    const boardBottom = -1\n    const boardWidth = boardRight - boardLeft // 12\n    const boardHeight = boardTop - boardBottom // 9\n    \n    return {\n      boardToScreen: (boardX: number, boardY: number) => {\n        // Get actual container dimensions\n        const container = triangleRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const screenX = ((boardX - boardLeft) / boardWidth) * containerWidth\n        const screenY = containerHeight - ((boardY - boardBottom) / boardHeight) * containerHeight\n        \n        return { x: screenX, y: screenY }\n      },\n      screenToBoard: (screenX: number, screenY: number) => {\n        const container = triangleRef.current?.closest('.jxgbox') as HTMLElement\n        const containerWidth = container?.offsetWidth || 800\n        const containerHeight = container?.offsetHeight || 500\n        \n        const boardX = (screenX / containerWidth) * boardWidth + boardLeft\n        const boardY = boardTop - (screenY / containerHeight) * boardHeight\n        \n        return { x: boardX, y: boardY }\n      }\n    }\n  }, [])\n\n  const boardToScreen = coordinateConverter.boardToScreen\n  const screenToBoard = coordinateConverter.screenToBoard\n\n  const screenPos = boardToScreen(x, y)\n\n  // Smooth movement without grid snapping\n  const smoothPosition = (boardX: number, boardY: number) => {\n    return { x: boardX, y: boardY }\n  }\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from triangle center to mouse position\n      const currentScreenPos = boardToScreen(x, y)\n      const centerX = currentScreenPos.x\n      const centerY = currentScreenPos.y\n      const initialAngle = Math.atan2(e.clientY - centerY, e.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: e.clientX, y: e.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: e.clientX, y: e.clientY, size })\n    } else if (target.classList.contains('drag-handle') || target.closest('.drag-handle')) {\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    } else {\n      // Allow dragging from anywhere on the triangle\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    }\n  }\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const touch = e.touches[0]\n    if (!touch) return\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle') || target.closest('.rotation-handle')) {\n      setIsRotating(true)\n      // Calculate initial angle from triangle center to touch position\n      const currentScreenPos = boardToScreen(x, y)\n      const centerX = currentScreenPos.x\n      const centerY = currentScreenPos.y\n      const initialAngle = Math.atan2(touch.clientY - centerY, touch.clientX - centerX) * (180 / Math.PI)\n      setRotationStart({ x: touch.clientX, y: touch.clientY, rotation, initialAngle })\n    } else if (target.classList.contains('resize-handle') || target.closest('.resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: touch.clientX, y: touch.clientY, size })\n    } else if (target.classList.contains('drag-handle') || target.closest('.drag-handle')) {\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    } else {\n      // Allow dragging from anywhere on the triangle\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    }\n  }\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDragging) {\n      const newScreenX = e.clientX - dragStart.x\n      const newScreenY = e.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      // Get the current screen position of the triangle center\n      const currentScreenPos = boardToScreen(x, y)\n      const centerX = currentScreenPos.x\n      const centerY = currentScreenPos.y\n      \n      // Calculate current angle from center to mouse\n      const currentAngle = Math.atan2(e.clientY - centerY, e.clientX - centerX) * (180 / Math.PI)\n      \n      // Calculate the difference from the initial angle\n      let deltaAngle = currentAngle - rotationStart.initialAngle\n      \n      // Handle angle wrapping (ensure we take the shorter path)\n      while (deltaAngle > 180) deltaAngle -= 360\n      while (deltaAngle < -180) deltaAngle += 360\n      \n      const newRotation = rotationStart.rotation + deltaAngle\n      onPositionChange(x, y, newRotation, size)\n    } else if (isResizing) {\n      const deltaX = e.clientX - resizeStart.x\n      const deltaY = e.clientY - resizeStart.y\n      \n      // Project the delta vector onto the triangle's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const triangleAxisX = Math.cos(rotationRad)\n      const triangleAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the triangle axis\n      const projection = deltaX * triangleAxisX + deltaY * triangleAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const proposedSize = resizeStart.size + deltaSize\n      \n      // Calculate height based on triangle type\n      const height = type === '45-45-90' ? proposedSize : proposedSize * Math.sqrt(3) / 2\n      \n      // Enforce height constraints: minimum 3cm, maximum 10cm\n      let constrainedSize = proposedSize\n      if (height < 3) {\n        // Calculate size needed for 3cm height\n        constrainedSize = type === '45-45-90' ? 3 : 3 / (Math.sqrt(3) / 2)\n      } else if (height > 10) {\n        // Calculate size needed for 10cm height\n        constrainedSize = type === '45-45-90' ? 10 : 10 / (Math.sqrt(3) / 2)\n      }\n      \n      onPositionChange(x, y, rotation, constrainedSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, x, y, rotation, size, type, onPositionChange, screenToBoard, boardToScreen])\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    const touch = e.touches[0]\n    if (!touch) return\n    \n    if (isDragging) {\n      const newScreenX = touch.clientX - dragStart.x\n      const newScreenY = touch.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      // Get the current screen position of the triangle center\n      const currentScreenPos = boardToScreen(x, y)\n      const centerX = currentScreenPos.x\n      const centerY = currentScreenPos.y\n      \n      // Calculate current angle from center to touch\n      const currentAngle = Math.atan2(touch.clientY - centerY, touch.clientX - centerX) * (180 / Math.PI)\n      \n      // Calculate the difference from the initial angle\n      let deltaAngle = currentAngle - rotationStart.initialAngle\n      \n      // Handle angle wrapping (ensure we take the shorter path)\n      while (deltaAngle > 180) deltaAngle -= 360\n      while (deltaAngle < -180) deltaAngle += 360\n      \n      const newRotation = rotationStart.rotation + deltaAngle\n      onPositionChange(x, y, newRotation, size)\n    } else if (isResizing) {\n      const deltaX = touch.clientX - resizeStart.x\n      const deltaY = touch.clientY - resizeStart.y\n      \n      // Project the delta vector onto the triangle's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const triangleAxisX = Math.cos(rotationRad)\n      const triangleAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the triangle axis\n      const projection = deltaX * triangleAxisX + deltaY * triangleAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const proposedSize = resizeStart.size + deltaSize\n      \n      // Calculate height based on triangle type\n      const height = type === '45-45-90' ? proposedSize : proposedSize * Math.sqrt(3) / 2\n      \n      // Enforce height constraints: minimum 3cm, maximum 10cm\n      let constrainedSize = proposedSize\n      if (height < 3) {\n        // Calculate size needed for 3cm height\n        constrainedSize = type === '45-45-90' ? 3 : 3 / (Math.sqrt(3) / 2)\n      } else if (height > 10) {\n        // Calculate size needed for 10cm height\n        constrainedSize = type === '45-45-90' ? 10 : 10 / (Math.sqrt(3) / 2)\n      }\n      \n      onPositionChange(x, y, rotation, constrainedSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, rotationStart, x, y, rotation, size, type, onPositionChange, screenToBoard, boardToScreen])\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  useEffect(() => {\n    if (isDragging || isRotating || isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      document.addEventListener('touchmove', handleTouchMove, { passive: false })\n      document.addEventListener('touchend', handleTouchEnd)\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.removeEventListener('touchmove', handleTouchMove, { passive: false } as any)\n        document.removeEventListener('touchend', handleTouchEnd)\n      }\n    }\n  }, [isDragging, isRotating, isResizing, handleMouseMove, handleTouchMove, handleMouseUp, handleTouchEnd])\n\n  // ResizeObserver to handle container size changes\n  useEffect(() => {\n    const el = triangleRef.current?.closest('.jxgbox')\n    if (!el) return\n    \n    const ro = new ResizeObserver(() => {\n      // Force a light refresh by updating dragStart state\n      setDragStart(s => ({ ...s }))\n    })\n    ro.observe(el)\n    return () => ro.disconnect()\n  }, [])\n\n  // Generate triangle points based on type\n  const getTrianglePoints = () => {\n    const screenSize = size * pxPerUnit\n    const halfSize = screenSize / 2\n    \n    if (type === '45-45-90') {\n      // Right triangle with 45-45-90 angles\n      return [\n        { x: 0, y: 0 },           // Right angle vertex\n        { x: screenSize, y: 0 },  // Bottom right\n        { x: 0, y: screenSize }   // Top left\n      ]\n    } else {\n      // Right triangle with 30-60-90 angles\n      const height = screenSize * Math.sqrt(3) / 2\n      return [\n        { x: 0, y: 0 },           // Right angle vertex\n        { x: screenSize, y: 0 },  // Bottom right\n        { x: 0, y: height }       // Top left (60° angle)\n      ]\n    }\n  }\n\n  // Generate enhanced ruler markings as SVG elements matching the detailed specifications\n  const renderRulerMarkingsSvg = () => {\n    const screenSize = size * pxPerUnit\n    const pxPerCm = pxPerUnit // 1 cm = pxPerUnit pixels\n    const verticalLength = type === '45-45-90' ? screenSize : (screenSize * Math.sqrt(3)) / 2\n    const maxCm = Math.min(16, Math.floor(size)) // Use floor to stop at or before actual size\n    const maxVerticalCm = Math.min(16, Math.floor(type === '45-45-90' ? size : size * Math.sqrt(3) / 2))\n\n    // Horizontal ruler (bottom edge) - 0 to maxCm\n    const horizontalTicks: React.ReactNode[] = []\n    for (let cm = 0; cm <= maxCm; cm++) {\n      const x = cm * pxPerCm\n      const isFive = cm % 5 === 0\n      const majorLen = isFive ? 18 : 12 // Length of tick mark\n      \n      // Main centimeter tick mark\n      horizontalTicks.push(\n        <rect\n          key={`h-cm-${cm}`}\n          x={x - 0.75}\n          y={0}\n          width={1.5}\n          height={majorLen}\n          fill=\"#000\"\n        />\n      )\n      \n      // Number labels will be handled separately as HTML elements\n      \n      // Millimeter marks (9 small ticks between each centimeter)\n      if (cm < maxCm) {\n        for (let mm = 1; mm < 10; mm++) {\n          const xx = x + (pxPerCm * mm) / 10\n          const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n          \n          horizontalTicks.push(\n            <rect\n              key={`h-mm-${cm}-${mm}`}\n              x={xx - 0.5}\n              y={0}\n              width={1}\n              height={mmLen}\n              fill=\"#000\"\n              opacity=\"0.75\"\n            />\n          )\n        }\n      }\n    }\n\n    // Add millimeter marks between last whole centimeter and final size value\n    if (size % 1 !== 0) {\n      const lastWholeCm = Math.floor(size)\n      const finalX = size * pxPerCm\n      \n      // Add millimeter marks from last whole cm to final size\n      for (let mm = 1; mm <= Math.floor((size - lastWholeCm) * 10); mm++) {\n        const xx = (lastWholeCm + mm / 10) * pxPerCm\n        const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n        \n        horizontalTicks.push(\n          <rect\n            key={`h-mm-final-${mm}`}\n            x={xx - 0.5}\n            y={0}\n            width={1}\n            height={mmLen}\n            fill=\"#000\"\n            opacity=\"0.75\"\n          />\n        )\n      }\n      \n      // Add final marking at exact size value\n      horizontalTicks.push(\n        <rect\n          key={`h-cm-final`}\n          x={finalX - 0.75}\n          y={0}\n          width={1.5}\n          height={12}\n          fill=\"#000\"\n        />\n      )\n    }\n\n    // Vertical ruler (left edge) - 0 to maxVerticalCm\n    const verticalTicks: React.ReactNode[] = []\n    for (let cm = 0; cm <= maxVerticalCm; cm++) {\n      const y = cm * pxPerCm\n      const isFive = cm % 5 === 0\n      const majorLen = isFive ? 18 : 12 // Length of tick mark\n      \n      // Main centimeter tick mark (extends LEFT from the edge)\n      verticalTicks.push(\n        <rect\n          key={`v-cm-${cm}`}\n          x={-majorLen}\n          y={y - 0.75}\n          width={majorLen}\n          height={1.5}\n          fill=\"#000\"\n        />\n      )\n      \n      // No number labels on the vertical ruler (left side)\n      \n      // Millimeter marks (9 small ticks between each centimeter)\n      if (cm < maxVerticalCm) {\n        for (let mm = 1; mm < 10; mm++) {\n          const yy = y + (pxPerCm * mm) / 10\n          const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n          \n          verticalTicks.push(\n            <rect\n              key={`v-mm-${cm}-${mm}`}\n              x={-mmLen}\n              y={yy - 0.5}\n              width={mmLen}\n              height={1}\n              fill=\"#000\"\n              opacity=\"0.75\"\n            />\n          )\n        }\n      }\n    }\n\n    // Add millimeter marks between last whole centimeter and final height value\n    const actualHeight = type === '45-45-90' ? size : size * Math.sqrt(3) / 2\n    if (actualHeight % 1 !== 0) {\n      const lastWholeCm = Math.floor(actualHeight)\n      const finalY = actualHeight * pxPerCm\n      \n      // Add millimeter marks from last whole cm to final height\n      for (let mm = 1; mm <= Math.floor((actualHeight - lastWholeCm) * 10); mm++) {\n        const yy = (lastWholeCm + mm / 10) * pxPerCm\n        const mmLen = mm === 5 ? 8 : 5 // 5mm mark is longer\n        \n        verticalTicks.push(\n          <rect\n            key={`v-mm-final-${mm}`}\n            x={-mmLen}\n            y={yy - 0.5}\n            width={mmLen}\n            height={1}\n            fill=\"#000\"\n            opacity=\"0.75\"\n          />\n        )\n      }\n      \n      // Add final marking at exact height value\n      verticalTicks.push(\n        <rect\n          key={`v-cm-final`}\n          x={-12}\n          y={finalY - 0.75}\n          width={12}\n          height={1.5}\n          fill=\"#000\"\n        />\n      )\n    }\n\n    return (\n      <g>\n        {/* Origin label with \"0\" */}\n        <text x={4} y={-8} fontSize=\"11\" fontFamily=\"Arial, sans-serif\" fontWeight=\"bold\" fill=\"#000\">0</text>\n        \n        {/* Bottom edge ruler (horizontal) */}\n        <g transform={`translate(${points[0]?.x || 0},${points[0]?.y || 0})`}>\n          {horizontalTicks}\n        </g>\n        \n        {/* Left edge ruler (vertical) */}\n        <g transform={`translate(${points[0]?.x || 0},${points[0]?.y || 0})`}>\n          {verticalTicks}\n        </g>\n      </g>\n    )\n  }\n\n  const points = getTrianglePoints()\n  const pathData = `M ${points[0]?.x || 0} ${points[0]?.y || 0} L ${points[1]?.x || 0} ${points[1]?.y || 0} L ${points[2]?.x || 0} ${points[2]?.y || 0} Z`\n\n  // Calculate triangle dimensions for dynamic handle positioning\n  const basePx = size * pxPerUnit\n  const heightPx = type === '45-45-90' ? basePx : basePx * Math.sqrt(3) / 2\n  \n  // Calculate hypotenuse midpoint (relative to SVG origin at 50, 50)\n  const hypMidX = basePx / 2\n  const hypMidY = heightPx / 2\n\n  // Derived geometry for inner triangular cutouts (proportional to size)\n  const baseLength = size * pxPerUnit\n  const verticalLength = type === '45-45-90' ? baseLength : (baseLength * Math.sqrt(3)) / 2\n  // Diagonal unit direction (ux, uy) from right-angle vertex and its origin point\n  const origin = { x: points[0]?.x || 0, y: points[0]?.y || 0 }\n  const mDiag = verticalLength / baseLength\n  const len = Math.sqrt(1 + mDiag * mDiag)\n  const ux = 1 / len\n  const uy = mDiag / len\n  // Reflect a point across the diagonal line through origin with unit direction (ux, uy)\n  const reflectAcrossDiagonal = (px: number, py: number) => {\n    const rx = px - origin.x\n    const ry = py - origin.y\n    const dot = rx * ux + ry * uy\n    const rpx = 2 * dot * ux - rx\n    const rpy = 2 * dot * uy - ry\n    return { x: origin.x + rpx, y: origin.y + rpy }\n  }\n  \n  // Construct cutouts similar to the two half-triangles split by the diagonal\n  // Unit normal to diagonal\n  const nx = -uy\n  const ny = ux\n  // Hypotenuse unit direction (from top-left to bottom-right corner)\n  const hypX = baseLength\n  const hypY = -verticalLength\n  const hypLen = Math.hypot(hypX, hypY) || 1\n  const hx = hypX / hypLen\n  const hy = hypY / hypLen\n  // Length of diagonal segment OM (origin to hypotenuse midpoint)\n  const OMlen = 0.5 * Math.hypot(baseLength, verticalLength)\n  // Choose base length along diagonal as a fraction of OM\n  const L = OMlen * 0.7\n  // Position along diagonal from origin and small gap offset\n  const tAlong = OMlen * 0.55\n  const gap = Math.max(-11, -baseLength * 0.12) // increased perpendicular offset from diagonal; no rotation or along-diagonal change\n\n  // First cutout (similar to triangle O-P1-M): base parallel to diagonal, other sides // x-axis and // hypotenuse\n  const c1x = origin.x + ux * tAlong + nx * gap\n  const c1y = origin.y + uy * tAlong + ny * gap\n  const a1 = { x: c1x - (L / 2) * ux, y: c1y - (L / 2) * uy }\n  const b1 = { x: c1x + (L / 2) * ux, y: c1y + (L / 2) * uy }\n  // Apex c1 is intersection of: line through a1 parallel to x-axis and line through b1 parallel to hypotenuse\n  const s1 = (a1.y - b1.y) / (hy || 1e-6)\n  const c1 = { x: b1.x + s1 * hx, y: b1.y + s1 * hy }\n  const cut1 = `M ${a1.x} ${a1.y} L ${b1.x} ${b1.y} L ${c1.x} ${c1.y} Z`\n\n  // Second cutout is mirror image of the first across the diagonal (perfect symmetry)\n  const a2r = reflectAcrossDiagonal(a1.x, a1.y)\n  const b2r = reflectAcrossDiagonal(b1.x, b1.y)\n  const c2r = reflectAcrossDiagonal(c1.x, c1.y)\n  const cut2 = `M ${a2r.x} ${a2r.y} L ${b2r.x} ${b2r.y} L ${c2r.x} ${c2r.y} Z`\n\n  // Diagonal from right-angle vertex to the midpoint of the hypotenuse\n  const hypMid = {\n    x: ((points[1]?.x || 0) + (points[2]?.x || 0)) / 2,\n    y: ((points[1]?.y || 0) + (points[2]?.y || 0)) / 2\n  }\n\n  return (\n    <div\n      ref={triangleRef}\n      className={`absolute select-none group ${isActive ? 'z-50' : 'z-40'}`}\n      style={{\n        left: screenPos.x,\n        top: screenPos.y,\n        transform: `rotate(${rotation}deg)`,\n        transformOrigin: '0 0',\n        // Debug: add background to see hover area\n        backgroundColor: isHovering ? 'rgba(255, 0, 0, 0.1)' : 'transparent'\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleTouchStart}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      {/* Triangle SVG */}\n      <div className=\"relative\" style={{ pointerEvents: 'auto' }}>\n        <svg\n          width={size * pxPerUnit + 100}\n          height={type === '45-45-90' ? size * pxPerUnit + 100 : size * pxPerUnit * Math.sqrt(3) / 2 + 100}\n          className=\"absolute\"\n          style={{ left: -50, top: -50, pointerEvents: 'auto' }}\n        >\n          <defs>\n            {/* Main plastic gradient with enhanced depth and contrast */}\n            <linearGradient id={`plasticGradient-${type}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.6)\" />\n              <stop offset=\"15%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.2)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(240,245,250,0.1)\" />\n              <stop offset=\"70%\" stopColor=\"rgba(200,210,220,0.15)\" />\n              <stop offset=\"85%\" stopColor=\"rgba(150,160,170,0.2)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(100,110,120,0.25)\" />\n            </linearGradient>\n\n            {/* Secondary highlight gradient for more realistic plastic look */}\n            <linearGradient id={`highlightGradient-${type}`} x1=\"0%\" y1=\"0%\" x2=\"60%\" y2=\"40%\">\n              <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.8)\" />\n              <stop offset=\"30%\" stopColor=\"rgba(255,255,255,0.4)\" />\n              <stop offset=\"60%\" stopColor=\"rgba(255,255,255,0.1)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(255,255,255,0)\" />\n            </linearGradient>\n\n            {/* Shadow gradient for depth */}\n            <linearGradient id={`shadowGradient-${type}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"rgba(0,0,0,0)\" />\n              <stop offset=\"50%\" stopColor=\"rgba(0,0,0,0.05)\" />\n              <stop offset=\"100%\" stopColor=\"rgba(0,0,0,0.15)\" />\n            </linearGradient>\n\n            {/* Enhanced drop shadow with more depth and realism */}\n            <filter id={`softShadow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feDropShadow dx=\"0\" dy=\"8\" stdDeviation=\"16\" floodColor=\"#000\" floodOpacity=\"0.3\" />\n              <feDropShadow dx=\"0\" dy=\"4\" stdDeviation=\"8\" floodColor=\"#000\" floodOpacity=\"0.2\" />\n              <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"4\" floodColor=\"#000\" floodOpacity=\"0.1\" />\n            </filter>\n\n            {/* Enhanced inner shadow for cutout edges with more depth */}\n            <filter id={`innerShadow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feFlood floodColor=\"#000\" floodOpacity=\"0.2\" result=\"flood\"/>\n              <feComposite in=\"flood\" in2=\"SourceGraphic\" operator=\"in\" result=\"composite\"/>\n              <feGaussianBlur in=\"composite\" stdDeviation=\"3\" result=\"blur\"/>\n              <feOffset in=\"blur\" dx=\"2\" dy=\"2\" result=\"offset\"/>\n              <feComposite in=\"offset\" in2=\"SourceGraphic\" operator=\"over\"/>\n            </filter>\n\n            {/* Additional depth shadow for inner cutouts */}\n            <filter id={`deepInnerShadow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feFlood floodColor=\"#000\" floodOpacity=\"0.15\" result=\"flood\"/>\n              <feComposite in=\"flood\" in2=\"SourceGraphic\" operator=\"in\" result=\"composite\"/>\n              <feGaussianBlur in=\"composite\" stdDeviation=\"5\" result=\"blur\"/>\n              <feOffset in=\"blur\" dx=\"3\" dy=\"3\" result=\"offset\"/>\n              <feComposite in=\"offset\" in2=\"SourceGraphic\" operator=\"over\"/>\n            </filter>\n            \n            {/* Glow effect for active state */}\n            <filter id={`glow-${type}`} x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/>\n              </feMerge>\n            </filter>\n\n            {/* Create mask for main triangle with inner cutouts as holes */}\n            <mask id={`triangle-mask-${type}`}>\n              {/* Reveal main triangle */}\n              <path d={pathData} fill=\"white\" />\n              {/* Hide inner similar triangles to make them transparent */}\n              <path d={cut1} fill=\"black\" />\n              <path d={cut2} fill=\"black\" />\n            </mask>\n          </defs>\n          \n          {/* Triangle plastic look: base fill, shine gradient overlay, and stroke */}\n          <g filter={isActive ? `url(#glow-${type})` : `url(#softShadow-${type})`}>\n            {/* Base fill with enhanced opacity for better depth */}\n            <path d={pathData} fill=\"rgba(240,245,250,0.25)\" mask={`url(#triangle-mask-${type})`} />\n            {/* Shadow gradient for depth */}\n            <path d={pathData} fill={`url(#shadowGradient-${type})`} mask={`url(#triangle-mask-${type})`} />\n            {/* Main plastic gradient overlay */}\n            <path d={pathData} fill={`url(#plasticGradient-${type})`} mask={`url(#triangle-mask-${type})`} />\n            {/* Highlight gradient for realistic plastic shine */}\n            <path d={pathData} fill={`url(#highlightGradient-${type})`} mask={`url(#triangle-mask-${type})`} />\n            {/* Enhanced outline with subtle inner shadow */}\n            <path d={pathData} fill=\"none\" stroke=\"#000000\" strokeWidth=\"2.5\"/>\n          </g>\n\n          {/* Internal diagonal (median to hypotenuse) */}\n          <line\n            x1={origin.x}\n            y1={origin.y}\n            x2={hypMid.x}\n            y2={hypMid.y}\n            stroke=\"#000000\"\n            strokeWidth=\"1.2\"\n            strokeDasharray=\"4 3\"\n          />\n          \n          {/* Right angle indicator with 90° label - properly aligned */}\n          <path\n            d={`M ${(points[0]?.x || 0) + 6} ${points[0]?.y || 0} L ${(points[0]?.x || 0) + 6} ${(points[0]?.y || 0) + 6} L ${points[0]?.x || 0} ${(points[0]?.y || 0) + 6}`}\n            fill=\"none\"\n            stroke=\"#000000\"\n            strokeWidth=\"1.2\"\n            strokeLinecap=\"round\"\n          />\n          \n          {/* 90° text label - properly positioned */}\n          <text\n            x={(points[0]?.x || 0) + 10}\n            y={(points[0]?.y || 0) + 3}\n            fontSize=\"8\"\n            fill=\"#000000\"\n            fontFamily=\"Arial, sans-serif\"\n            fontWeight=\"bold\"\n          >\n            90°\n          </text>\n\n          {/* Inner similar triangles as transparent holes: stroke only with enhanced inner shadows */}\n          <path d={cut1} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#deepInnerShadow-${type})`} />\n          <path d={cut2} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#deepInnerShadow-${type})`} />\n          {/* Additional inner shadow layer for more depth */}\n          <path d={cut1} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#innerShadow-${type})`} />\n          <path d={cut2} fill=\"none\" stroke=\"#000000\" strokeWidth=\"1.2\" filter={`url(#innerShadow-${type})`} />\n          {/* SVG ruler markings glued to the right-angle corner */}\n          {renderRulerMarkingsSvg()}\n        </svg>\n        \n        {/* Ruler numbers - positioned as HTML elements like in the ruler component */}\n        {(() => {\n          const screenSize = size * pxPerUnit\n          const pxPerCm = pxPerUnit\n          const maxCm = Math.min(16, Math.floor(size)) // Use floor to stop at or before actual size\n          const numbers = []\n          \n          for (let cm = 1; cm <= maxCm; cm++) {\n            const x = cm * pxPerCm\n            const isFive = cm % 5 === 0\n            \n            numbers.push(\n              <div\n                key={`h-number-${cm}`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: x - 50, // Account for SVG container offset\n                  top: -65, // Position well above the triangle\n                  transform: 'translateX(-50%)',\n                  fontWeight: isFive ? 'bold' : 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {cm}\n              </div>\n            )\n          }\n\n          // Add final number at exact size value (only if not a whole number)\n          if (size % 1 !== 0) {\n            const finalX = size * pxPerCm\n            numbers.push(\n              <div\n                key={`h-number-final`}\n                className=\"absolute text-xs text-gray-800 font-mono\"\n                style={{\n                  left: finalX - 50, // Account for SVG container offset\n                  top: -65, // Position well above the triangle\n                  transform: 'translateX(-50%)',\n                  fontWeight: 'normal',\n                  fontSize: '11px',\n                  fontFamily: 'Arial, sans-serif',\n                  pointerEvents: 'none'\n                }}\n              >\n                {size.toFixed(1)}\n              </div>\n            )\n          }\n          \n          return numbers\n        })()}\n        \n        {/* Rotation handle - positioned relative to hypotenuse midpoint */}\n        <div\n          className=\"rotation-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-emerald-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Temporarily only show on hover\n            left: `${1.35 * hypMidX - 50 - basePx * 0.2}px`,\n            top: `${1.35 * hypMidY - 50 - heightPx * 0.2}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 20\n          }}\n          title=\"Otočit trojúhelník\"\n        >\n          <div className=\"w-2 h-2 bg-emerald-500 rounded-full\" />\n        </div>\n        \n        {/* Resize handle - positioned relative to hypotenuse midpoint */}\n        <div\n          className=\"resize-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-amber-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Temporarily only show on hover\n            left: `${0.6 * hypMidX - 50 + basePx * 0.2}px`,\n            top: `${0.6 * hypMidY - 50 + heightPx * 0.2}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 15\n          }}\n          title=\"Změnit velikost\"\n        >\n          <div className=\"w-2 h-2 bg-amber-500 rounded-full\" />\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2779, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/DraggableProtractor.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useRef, useEffect, useCallback } from 'react'\nimport { useBoardScale } from '../hooks/useBoardScale'\n\ninterface DraggableProtractorProps {\n  x: number\n  y: number\n  rotation: number\n  size: number\n  onPositionChange: (x: number, y: number, rotation: number, size: number) => void\n  isActive: boolean\n  onActivate: () => void\n  onUiBusyChange: (busy: boolean) => void\n}\n\nexport default function DraggableProtractor({\n  x,\n  y,\n  rotation,\n  size,\n  onPositionChange,\n  isActive,\n  onActivate,\n  onUiBusyChange\n}: DraggableProtractorProps) {\n  const [isDragging, setIsDragging] = useState(false)\n  const [isRotating, setIsRotating] = useState(false)\n  const [isResizing, setIsResizing] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 })\n  const [rotationStart, setRotationStart] = useState({ x: 0, y: 0, rotation: 0 })\n  const [resizeStart, setResizeStart] = useState({ x: 0, y: 0, size: 0 })\n  const protractorRef = useRef<HTMLDivElement>(null)\n  const getScale = useBoardScale(protractorRef)\n  const { pxPerUnitX, pxPerUnitY } = getScale()\n  const pxPerUnit = Math.min(pxPerUnitX, pxPerUnitY)\n\n  // Convert board coordinates to screen coordinates\n  const boardToScreen = (boardX: number, boardY: number) => {\n    // Board bounding box: [-1, 8, 11, -1] (left, top, right, bottom)\n    const boardLeft = -1\n    const boardTop = 8\n    const boardRight = 11\n    const boardBottom = -1\n    const boardWidth = boardRight - boardLeft // 12\n    const boardHeight = boardTop - boardBottom // 9\n    \n    // Get actual container dimensions\n    const container = protractorRef.current?.closest('.jxgbox') as HTMLElement\n    const containerWidth = container?.offsetWidth || 800\n    const containerHeight = container?.offsetHeight || 500\n    \n    const screenX = ((boardX - boardLeft) / boardWidth) * containerWidth\n    const screenY = containerHeight - ((boardY - boardBottom) / boardHeight) * containerHeight\n    \n    return { x: screenX, y: screenY }\n  }\n\n  const screenToBoard = (screenX: number, screenY: number) => {\n    const boardLeft = -1\n    const boardTop = 8\n    const boardRight = 11\n    const boardBottom = -1\n    const boardWidth = boardRight - boardLeft\n    const boardHeight = boardTop - boardBottom\n    \n    const container = protractorRef.current?.closest('.jxgbox') as HTMLElement\n    const containerWidth = container?.offsetWidth || 800\n    const containerHeight = container?.offsetHeight || 500\n    \n    const boardX = (screenX / containerWidth) * boardWidth + boardLeft\n    const boardY = boardTop - (screenY / containerHeight) * boardHeight\n    \n    return { x: boardX, y: boardY }\n  }\n\n  const screenPos = boardToScreen(x, y)\n\n  // Smooth movement without grid snapping\n  const smoothPosition = (boardX: number, boardY: number) => {\n    return { x: boardX, y: boardY }\n  }\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle')) {\n      setIsRotating(true)\n      setRotationStart({ x: e.clientX, y: e.clientY, rotation })\n    } else if (target.classList.contains('resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: e.clientX, y: e.clientY, size })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: e.clientX - screenPos.x, y: e.clientY - screenPos.y })\n    }\n  }\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onActivate()\n    onUiBusyChange(true)\n    \n    const touch = e.touches[0]\n    if (!touch) return\n    \n    const target = e.target as HTMLElement\n    if (target.classList.contains('rotation-handle')) {\n      setIsRotating(true)\n      setRotationStart({ x: touch.clientX, y: touch.clientY, rotation })\n    } else if (target.classList.contains('resize-handle')) {\n      setIsResizing(true)\n      setResizeStart({ x: touch.clientX, y: touch.clientY, size })\n    } else {\n      setIsDragging(true)\n      setDragStart({ x: touch.clientX - screenPos.x, y: touch.clientY - screenPos.y })\n    }\n  }\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDragging) {\n      const newScreenX = e.clientX - dragStart.x\n      const newScreenY = e.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const deltaX = e.clientX - centerX\n      const deltaY = e.clientY - centerY\n      const aRaw = Math.atan2(deltaY, deltaX) * 180 / Math.PI\n      const a360 = (aRaw + 360) % 360\n      const snapped = Math.round(a360 / 5) * 5\n      onPositionChange(x, y, snapped, size)\n    } else if (isResizing) {\n      const deltaX = e.clientX - resizeStart.x\n      const deltaY = e.clientY - resizeStart.y\n      \n      // Project the delta vector onto the protractor's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const protractorAxisX = Math.cos(rotationRad)\n      const protractorAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the protractor axis\n      const projection = deltaX * protractorAxisX + deltaY * protractorAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const newSize = Math.max(2, Math.min(6, resizeStart.size + deltaSize))\n      onPositionChange(x, y, rotation, newSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, screenPos, x, y, rotation, size, onPositionChange])\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    const touch = e.touches[0]\n    if (!touch) return\n    \n    if (isDragging) {\n      const newScreenX = touch.clientX - dragStart.x\n      const newScreenY = touch.clientY - dragStart.y\n      const newBoardPos = screenToBoard(newScreenX, newScreenY)\n      const smoothPos = smoothPosition(newBoardPos.x, newBoardPos.y)\n      onPositionChange(smoothPos.x, smoothPos.y, rotation, size)\n    } else if (isRotating) {\n      const centerX = screenPos.x\n      const centerY = screenPos.y\n      const deltaX = touch.clientX - centerX\n      const deltaY = touch.clientY - centerY\n      const aRaw = Math.atan2(deltaY, deltaX) * 180 / Math.PI\n      const a360 = (aRaw + 360) % 360\n      const snapped = Math.round(a360 / 5) * 5\n      onPositionChange(x, y, snapped, size)\n    } else if (isResizing) {\n      const deltaX = touch.clientX - resizeStart.x\n      const deltaY = touch.clientY - resizeStart.y\n      \n      // Project the delta vector onto the protractor's main axis (considering rotation)\n      const rotationRad = (rotation * Math.PI) / 180\n      const protractorAxisX = Math.cos(rotationRad)\n      const protractorAxisY = Math.sin(rotationRad)\n      \n      // Calculate the projection of the delta vector onto the protractor axis\n      const projection = deltaX * protractorAxisX + deltaY * protractorAxisY\n      const deltaSize = projection / 20 // Scale factor\n      \n      const newSize = Math.max(2, Math.min(6, resizeStart.size + deltaSize))\n      onPositionChange(x, y, rotation, newSize)\n    }\n  }, [isDragging, isRotating, isResizing, dragStart, resizeStart, screenPos, x, y, rotation, size, onPositionChange])\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false)\n    setIsRotating(false)\n    setIsResizing(false)\n    onUiBusyChange(false)\n  }, [onUiBusyChange])\n\n  useEffect(() => {\n    if (isDragging || isRotating || isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      document.addEventListener('touchmove', handleTouchMove, { passive: false })\n      document.addEventListener('touchend', handleTouchEnd)\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.removeEventListener('touchmove', handleTouchMove, { passive: false } as any)\n        document.removeEventListener('touchend', handleTouchEnd)\n      }\n    }\n  }, [isDragging, isRotating, isResizing, handleMouseMove, handleTouchMove, handleMouseUp, handleTouchEnd])\n\n  // ResizeObserver to handle container size changes\n  useEffect(() => {\n    const el = protractorRef.current?.closest('.jxgbox')\n    if (!el) return\n    \n    const ro = new ResizeObserver(() => {\n      // Force a light refresh by updating dragStart state\n      setDragStart(s => ({ ...s }))\n    })\n    ro.observe(el)\n    return () => ro.disconnect()\n  }, [])\n\n  // Calculate protractor dimensions\n  const radiusPx = size * pxPerUnit\n  const centerX = size * pxPerUnit * 1.2  // Adjusted for new SVG dimensions\n  const centerY = size * pxPerUnit * 1.1  // Adjusted for new SVG dimensions\n  \n  // Helper variables for improved design\n  const R = radiusPx                               // outer radius (tick tips)\n  const ring = Math.max(8, R * 0.075)              // thickness of the dark tick band\n  const innerR = R - ring                          // inner edge of the tick band (rim sits here)\n  const uid = React.useMemo(() => Math.random().toString(36).slice(2), [])\n  const arc = (rad:number) =>\n    `M ${centerX - rad} ${centerY} A ${rad} ${rad} 0 0 1 ${centerX + rad} ${centerY}`\n  \n  // Returns a closed path for the grey ring band between radii R and r (r < R), 0..180°\n  const ringBandPath = (R: number, r: number) => {\n    // Outer arc: from left outer point to right outer point (sweep=1)\n    // Then line down to the right inner point\n    // Inner arc back to the left inner point (sweep=0), and close.\n    return `\n      M ${centerX - R} ${centerY}\n      A ${R} ${R} 0 0 1 ${centerX + R} ${centerY}\n      L ${centerX + r} ${centerY}\n      A ${r} ${r} 0 0 0 ${centerX - r} ${centerY}\n      Z\n    `;\n  };\n\n  // Generate protractor markings\n  const generateMarkings = () => {\n    const markings = []\n    \n    // Generate degree markings (0-180 degrees)\n    for (let angle = 0; angle <= 180; angle += 1) {\n      const rad = (angle * Math.PI) / 180\n      \n      const isMajor = angle % 10 === 0\n      const isMedium = angle % 5 === 0 && !isMajor\n      const isMinor = angle % 1 === 0 && !isMajor && !isMedium\n      \n      // Different tick lengths for different types\n      let tickLength = 0\n      let strokeWidth = 0.5\n      \n      if (isMajor) {\n        tickLength = R - innerR  // Full length from inner to outer\n        strokeWidth = 2.5\n      } else if (isMedium) {\n        tickLength = (R - innerR) * 0.7  // 70% of full length\n        strokeWidth = 1.5\n      } else if (isMinor) {\n        tickLength = (R - innerR) * 0.4  // 40% of full length\n        strokeWidth = 0.8\n      }\n      \n      const x1 = centerX + Math.cos(rad) * (R - tickLength)\n      const y1 = centerY - Math.sin(rad) * (R - tickLength)\n      const x2 = centerX + Math.cos(rad) * R\n      const y2 = centerY - Math.sin(rad) * R\n      \n      markings.push(\n        <line\n          key={`mark-${angle}`}\n          x1={x1}\n          y1={y1}\n          x2={x2}\n          y2={y2}\n          stroke=\"#374151\"\n          strokeWidth={strokeWidth}\n        />\n      )\n      \n      // Add degree labels for every 10 degrees\n      if (isMajor) {\n        const labelDistance = R + 20 // was radiusPx + 20\n        const labelX = centerX + Math.cos(rad) * labelDistance\n        const labelY = centerY - Math.sin(rad) * labelDistance\n        \n        markings.push(\n          <text\n            key={`label-${angle}`}\n            x={labelX}\n            y={labelY}\n            fontSize=\"11\"\n            fill=\"#1f2937\"\n            fontFamily=\"Arial, sans-serif\"\n            fontWeight=\"bold\"\n            textAnchor=\"middle\"\n            dominantBaseline=\"middle\"\n          >\n            {angle}°\n          </text>\n        )\n      }\n    }\n    \n    return markings\n  }\n\n  return (\n    <div\n      ref={protractorRef}\n      className={`absolute select-none group ${isActive ? 'z-50' : 'z-40'}`}\n      style={{\n        left: screenPos.x,\n        top: screenPos.y,\n        transform: `translate(-50%, -50%) rotate(${rotation}deg)`,\n        transformOrigin: '50% 50%'\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleTouchStart}\n      onMouseEnter={() => setIsHovering(true)}\n      onMouseLeave={() => setIsHovering(false)}\n    >\n      {/* Protractor body */}\n      <div className=\"relative\" style={{ pointerEvents: 'auto' }}>\n        <svg\n          width={size * pxPerUnit * 2.6}\n          height={size * pxPerUnit * 2.4}\n          className=\"absolute\"\n          style={{ \n            left: -size * pxPerUnit * 1.3, \n            top: -size * pxPerUnit * 1.2,\n            pointerEvents: 'auto'\n          }}\n          viewBox={`0 0 ${size * pxPerUnit * 2.6} ${size * pxPerUnit * 1.4}`}\n        >\n          <defs>\n            <filter id=\"protractorShadow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\n              <feDropShadow dx=\"1\" dy=\"1\" stdDeviation=\"2\" floodColor=\"#000\" floodOpacity=\"0.15\"/>\n            </filter>\n            <mask id={`innerArcMask-${uid}`}>\n              <rect width=\"100%\" height=\"100%\" fill=\"white\"/>\n              {/* Create a larger black rectangle to completely hide the inner arc between the lines */}\n              <rect \n                x={centerX - innerR * 2} \n                y={centerY - ring - 1} \n                width={innerR * 4} \n                height={ring + 20} \n                fill=\"black\"\n              />\n            </mask>\n          </defs>\n          \n          {/* Grey ring segment (curved band between arcs) */}\n          <path\n            d={ringBandPath(R, innerR)}\n            fill=\"rgba(107,114,128,0.22)\"\n            stroke=\"none\"\n          />\n\n          {/* Grey band between the two straight lines */}\n          <rect\n            x={centerX - innerR}\n            y={centerY - ring}\n            width={innerR * 2}\n            height={ring}\n            fill=\"rgba(107,114,128,0.22)\"\n          />\n\n          {/* outer semicircle outline */}\n          <path d={arc(R)} fill=\"none\" stroke=\"#0f172a\" strokeWidth=\"2.2\" opacity=\"0.95\" filter=\"url(#protractorShadow)\"/>\n\n          {/* baseline */}\n          <line x1={centerX - R} y1={centerY} x2={centerX + R} y2={centerY}\n                stroke=\"#000000\" strokeWidth={isActive ? 1.9 : 1} strokeLinecap=\"round\" />\n          \n          {/* inner horizontal line - positioned to match the arc distance */}\n          <line x1={centerX - innerR} y1={centerY - ring} x2={centerX + innerR} y2={centerY - ring}\n                stroke=\"#000000\" strokeWidth=\"1.4\" strokeLinecap=\"round\" />\n\n          {/* complete inner semicircle with mask to hide area between lines */}\n          <path d={`M ${centerX - innerR} ${centerY} A ${innerR} ${innerR} 0 0 1 ${centerX + innerR} ${centerY} Z`} \n                fill=\"none\" stroke=\"#000000\" strokeWidth=\"1\" mask={`url(#innerArcMask-${uid})`} />\n\n          {/* center dot */}\n          <circle cx={centerX} cy={centerY} r={isActive ? 4 : 3} fill=\"#dc2626\" stroke=\"#fff\" strokeWidth=\"2\" filter=\"url(#protractorShadow)\"/>\n\n          {/* ticks and labels LAST so they stay crisp on top */}\n          {generateMarkings()}\n          \n        </svg>\n        \n        {/* Rotation handle - positioned on the baseline, left of center */}\n        <div\n          className=\"rotation-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-emerald-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like ruler\n            left: `${0.2 * centerX - radiusPx * 0.3}px`,\n            top: `${0.36 * centerY}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 20\n          }}\n          title=\"Otočit úhloměr\"\n        >\n          <div className=\"w-2 h-2 bg-emerald-500 rounded-full\" />\n        </div>\n\n        {/* Resize handle - positioned on the baseline, right of center */}\n        <div\n          className=\"resize-handle absolute w-6 h-6 bg-white rounded-full cursor-grab hover:scale-110 border-2 border-amber-500 shadow-md flex items-center justify-center transition-opacity duration-200\"\n          style={{ \n            pointerEvents: 'auto',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            opacity: isHovering ? 1 : 0, // Show on hover like ruler\n            left: `${-0.37 * centerX + radiusPx * 0.3}px`,\n            top: `${0.36 * centerY}px`,\n            transform: 'translate(-50%, -50%)',\n            zIndex: 15\n          }}\n          title=\"Změnit velikost\"\n        >\n          <div className=\"w-2 h-2 bg-amber-500 rounded-full\" />\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3430, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/supabase-helpers.ts"],"sourcesContent":["import { supabase } from './supabase'\n\nexport interface Question {\n  id: string\n  code: string\n  title: string\n  prompt_md: string\n  max_score: number\n  givens: any\n  constraints: any\n  difficulty: number\n  tags: string[]\n  created_at: string\n  updated_at: string\n}\n\nexport interface Attempt {\n  id: string\n  question_id: string\n  session_id: string\n  state: any\n  score?: number\n  passed?: boolean\n  feedback?: any\n  student_id: string\n  is_complete: boolean\n  time_spent: number\n  created_at: string\n  updated_at: string\n}\n\nexport interface Session {\n  id: string\n  user_id: string\n  question_id: string\n  session_data: any\n  is_active: boolean\n  created_at: string\n  updated_at: string\n}\n\nexport interface User {\n  id: string\n  email: string\n  name: string\n  role: string\n  created_at: string\n  updated_at: string\n}\n\n// Question operations\nexport async function getQuestions(): Promise<Question[]> {\n  const { data, error } = await supabase\n    .from('gq_questions')\n    .select('*')\n    .order('created_at', { ascending: false })\n\n  if (error) throw error\n  return data || []\n}\n\nexport async function getQuestion(id: string): Promise<Question | null> {\n  const { data, error } = await supabase\n    .from('gq_questions')\n    .select('*')\n    .eq('id', id)\n    .single()\n\n  if (error) throw error\n  return data\n}\n\n// User operations\nexport async function getOrCreateUser(email: string, name?: string): Promise<User> {\n  // Try to get existing user\n  const { data: existingUser, error: fetchError } = await supabase\n    .from('users')\n    .select('*')\n    .eq('email', email)\n    .single()\n\n  if (existingUser && !fetchError) {\n    return existingUser\n  }\n\n  // Create new user if doesn't exist\n  const { data: newUser, error: createError } = await supabase\n    .from('users')\n    .insert({\n      email,\n      name: name || email.split('@')[0],\n      role: 'student'\n    })\n    .select()\n    .single()\n\n  if (createError) throw createError\n  return newUser\n}\n\n/**\n * Ensures a user record exists in the users table for an authenticated Supabase user.\n * This is needed because sessions.user_id references users.id, and we need to ensure\n * the authenticated user has a corresponding record in the users table.\n */\nexport async function ensureAuthenticatedUserExists(authUserId: string, email: string, name?: string): Promise<User> {\n  // Try to get existing user by ID (should match auth user ID)\n  const { data: existingUser, error: fetchError } = await supabase\n    .from('users')\n    .select('*')\n    .eq('id', authUserId)\n    .single()\n\n  if (existingUser && !fetchError) {\n    return existingUser\n  }\n\n  // Create new user record with the auth user's ID\n  const { data: newUser, error: createError } = await supabase\n    .from('users')\n    .insert({\n      id: authUserId, // Use the auth user's ID\n      email,\n      name: name || email.split('@')[0],\n      role: 'student'\n    })\n    .select()\n    .single()\n\n  if (createError) {\n    // If error is due to duplicate, try fetching again\n    if (createError.code === '23505') { // Unique violation\n      const { data: user } = await supabase\n        .from('users')\n        .select('*')\n        .eq('id', authUserId)\n        .single()\n      if (user) return user\n    }\n    throw createError\n  }\n  return newUser\n}\n\n// Session operations\nexport async function createSession(userId: string, questionId: string): Promise<Session> {\n  const { data, error } = await supabase\n    .from('sessions')\n    .insert({\n      user_id: userId,\n      question_id: questionId,\n      session_data: {},\n      is_active: true\n    })\n    .select()\n    .single()\n\n  if (error) throw error\n  return data\n}\n\nexport async function updateSession(sessionId: string, sessionData: any): Promise<void> {\n  const { error } = await supabase\n    .from('sessions')\n    .update({ session_data: sessionData })\n    .eq('id', sessionId)\n\n  if (error) throw error\n}\n\nexport async function endSession(sessionId: string): Promise<void> {\n  const { error } = await supabase\n    .from('sessions')\n    .update({ is_active: false })\n    .eq('id', sessionId)\n\n  if (error) throw error\n}\n\n// Attempt operations\nexport async function createAttempt(\n  questionId: string,\n  sessionId: string,\n  studentId: string\n): Promise<Attempt> {\n  const { data, error } = await supabase\n    .from('gq_attempts')\n    .insert({\n      question_id: questionId,\n      session_id: sessionId,\n      state: {},\n      student_id: studentId,\n      is_complete: false,\n      time_spent: 0\n    })\n    .select()\n    .single()\n\n  if (error) throw error\n  return data\n}\n\nexport async function updateAttempt(\n  attemptId: string,\n  updates: Partial<Attempt>\n): Promise<void> {\n  const { error } = await supabase\n    .from('gq_attempts')\n    .update(updates)\n    .eq('id', attemptId)\n\n  if (error) throw error\n}\n\nexport async function getAttemptsByUser(userId: string): Promise<Attempt[]> {\n  const { data, error } = await supabase\n    .from('gq_attempts')\n    .select(`\n      *,\n      gq_questions (\n        title,\n        code,\n        difficulty\n      )\n    `)\n    .eq('student_id', userId)\n    .order('created_at', { ascending: false })\n\n  if (error) throw error\n  return data || []\n}\n\nexport async function getAttemptsByQuestion(questionId: string): Promise<Attempt[]> {\n  const { data, error } = await supabase\n    .from('gq_attempts')\n    .select(`\n      *,\n      sessions (\n        user_id\n      )\n    `)\n    .eq('question_id', questionId)\n    .order('created_at', { ascending: false })\n\n  if (error) throw error\n  return data || []\n}\n\n// Sample question data for testing\nexport const sampleQuestions = [\n  {\n    code: 'TRIANGLE_001',\n    title: 'Konstrukce rovnoramenného trojúhelníku',\n    prompt_md: `\n# Konstrukce rovnoramenného trojúhelníku\n\nSestrojte rovnoramenný trojúhelník ABC tak, aby:\n- Bod C je vrchol trojúhelníku\n- Bod S je střed ramene\n- Základna AB leží na přímce q\n\n## Postup:\n1. Označte body A a B na přímce q\n2. Sestrojte úsečky AC a BC\n3. Ověřte, že AC = BC\n    `,\n    max_score: 3,\n    givens: {\n      points: {\n        S: { x: 5, y: 5 },\n        C: { x: 4.5, y: 3 }\n      },\n      lines: {\n        q: { p1: { x: 0, y: 7 }, p2: { x: 10, y: 7 } }\n      }\n    },\n    constraints: {\n      requiredPoints: 2,\n      requiredSegments: 3,\n      minScore: 2\n    },\n    difficulty: 2,\n    tags: ['trojúhelník', 'rovnoramenný', 'konstrukce']\n  },\n  {\n    code: 'CIRCLE_001',\n    title: 'Konstrukce kružnice procházející třemi body',\n    prompt_md: `\n# Konstrukce kružnice procházející třemi body\n\nSestrojte kružnici, která prochází body A, B a C.\n\n## Postup:\n1. Sestrojte osy úseček AB a BC\n2. Najděte průsečík os - střed kružnice\n3. Sestrojte kružnici se středem v průsečíku os\n    `,\n    max_score: 4,\n    givens: {\n      points: {\n        A: { x: 2, y: 6 },\n        B: { x: 6, y: 6 },\n        C: { x: 4, y: 3 }\n      }\n    },\n    constraints: {\n      requiredPoints: 1,\n      requiredLines: 2,\n      requiredCircles: 1,\n      minScore: 3\n    },\n    difficulty: 3,\n    tags: ['kružnice', 'tři body', 'osy úseček']\n  },\n  {\n    code: 'ANGLE_001',\n    title: 'Konstrukce úhlu',\n    prompt_md: `\n# Konstrukce úhlu\n\nSestrojte úhel o velikosti 60° s vrcholem v bodě A a jedním ramenem na přímce p.\n\n## Postup:\n1. Označte bod B na přímce p\n2. Sestrojte kružnici se středem A a poloměrem AB\n3. Sestrojte druhé rameno úhlu\n    `,\n    max_score: 3,\n    givens: {\n      points: {\n        A: { x: 3, y: 4 }\n      },\n      lines: {\n        p: { p1: { x: 0, y: 4 }, p2: { x: 8, y: 4 } }\n      }\n    },\n    constraints: {\n      requiredPoints: 1,\n      requiredLines: 1,\n      requiredCircles: 1,\n      minScore: 2\n    },\n    difficulty: 2,\n    tags: ['úhel', '60°', 'konstrukce']\n  }\n]\n\n// Function to seed the database with sample questions\nexport async function seedSampleQuestions(): Promise<void> {\n  try {\n    // Check if questions already exist\n    const existingQuestions = await getQuestions()\n    if (existingQuestions.length > 0) {\n      console.log('Questions already exist, skipping seed')\n      return\n    }\n\n    // Insert sample questions\n    const { error } = await supabase\n      .from('gq_questions')\n      .insert(sampleQuestions)\n\n    if (error) throw error\n    console.log('Sample questions seeded successfully')\n  } catch (err) {\n    console.error('Error seeding questions:', err)\n    throw err\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3701, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/undo-redo.ts"],"sourcesContent":["/**\n * Standalone Undo/Redo System for JSXGraph Geometry\n * \n * This module provides a clean, isolated undo/redo system that can be easily\n * integrated into any JSXGraph-based geometry application.\n */\n\nimport JXG from 'jsxgraph'\n\ntype JBoard = JXG.Board & { renderer: any }\n\n// Operation types\nexport type CreateOp = {\n  kind: 'create'\n  elType: 'point' | 'segment' | 'line' | 'circle'\n  payload: any\n  _id?: string\n  pointIds?: string[]\n}\n\nexport type DeleteOp = {\n  kind: 'delete'\n  elType: 'point' | 'segment' | 'line' | 'circle'\n  payload: any\n  _id?: string\n  pointIds?: string[]\n}\n\nexport type ModifyOp = {\n  kind: 'modify'\n  pointId: string\n  before: { x: number; y: number; name: string }\n  after: { x: number; y: number; name: string }\n}\n\nexport type BundleOp = {\n  kind: 'bundle'\n  ops: Operation[]\n}\n\nexport type Operation = CreateOp | DeleteOp | ModifyOp | BundleOp\n\n// Configuration for the undo/redo system\nexport interface UndoRedoConfig {\n  board: JBoard\n  onFeedback?: (message: string) => void\n  EPS?: number\n}\n\nexport class UndoRedoManager {\n  private board: JBoard\n  private undoStack: Operation[] = []\n  private redoStack: Operation[] = []\n  private onFeedback: ((message: string) => void) | undefined\n  private EPS: number\n  private txnDepth = 0\n  private pendingOps: Operation[] = []\n  private suppressTracking = false\n  private moveStarts = new Map<string, { x: number; y: number; name: string }>()\n  private trackingInterval: NodeJS.Timeout | null = null\n  private withinTol(a: number, b: number, tol = this.EPS): boolean { \n    return Math.abs(a - b) <= tol \n  }\n\n  private withSuppressed<T>(fn: () => T): T {\n    const prev = this.suppressTracking\n    this.suppressTracking = true\n    try { return fn() } finally { this.suppressTracking = prev }\n  }\n\n  constructor(config: UndoRedoConfig) {\n    this.board = config.board\n    this.onFeedback = config.onFeedback\n    this.EPS = config.EPS || 0.03\n    this.setupGlobalPointTracking()\n  }\n\n  // Public API\n  public pushOperation(op: Operation): void {\n    const frozen = structuredClone(op)\n    this.withSuppressed(() => this.performOperation(frozen))\n    if (this.txnDepth > 0) {\n      this.pendingOps.push(frozen)\n    } else {\n      this.undoStack.push(frozen)\n      this.redoStack = [] // Clear redo stack on new operation\n    }\n  }\n\n  public begin(): void { \n    this.txnDepth++ \n  }\n\n  public commit(): void {\n    if (this.txnDepth === 0) return\n    this.txnDepth--\n    if (this.txnDepth > 0) return\n    if (this.pendingOps.length === 0) return\n    // compress: push a synthetic op that replays the batch\n    const bundle = structuredClone(this.pendingOps)\n    this.pendingOps = []\n    this.undoStack.push({ kind: 'bundle', ops: bundle } as BundleOp)\n    this.redoStack = []\n  }\n\n  public undo(): void {\n    if (this.undoStack.length === 0) return\n    \n    const op = this.undoStack.pop()!\n    const frozen = structuredClone(op)\n    this.suppressTracking = true\n    try {\n      this.rollbackOperation(frozen)\n    } finally {\n      this.suppressTracking = false\n    }\n    this.redoStack.push(frozen)\n    this.board.update()\n    this.onFeedback?.('')\n  }\n\n  public redo(): void {\n    if (this.redoStack.length === 0) return\n    \n    const op = this.redoStack.pop()!\n    const frozen = structuredClone(op)\n    this.suppressTracking = true\n    try {\n      this.performOperation(frozen)\n    } finally {\n      this.suppressTracking = false\n    }\n    this.undoStack.push(frozen)\n    this.board.update()\n    this.onFeedback?.('')\n  }\n\n  public canUndo(): boolean {\n    return this.undoStack.length > 0\n  }\n\n  public canRedo(): boolean {\n    return this.redoStack.length > 0\n  }\n\n  public clear(): void {\n    this.undoStack = []\n    this.redoStack = []\n  }\n\n  public dispose(): void {\n    this.moveStarts.clear()\n    if (this.trackingInterval) {\n      clearInterval(this.trackingInterval)\n      this.trackingInterval = null\n    }\n  }\n\n  private setupGlobalPointTracking(): void {\n    // Attach tracking to all existing points\n    this.attachTrackingToAllPoints()\n    \n    // Set up a periodic check to attach tracking to any new points\n    this.trackingInterval = setInterval(() => {\n      this.attachTrackingToAllPoints()\n    }, 1000) // Check every second\n  }\n\n  private attachTrackingToAllPoints(): void {\n    const objects = Object.values(this.board.objects) as any[]\n    for (const obj of objects) {\n      if (obj?.elType === 'point' && !obj.visProp?.fixed) {\n        this.attachPointTracking(obj)\n      }\n    }\n  }\n\n  private posOf(pt: any): { x: number; y: number; name: string } {\n    return { x: pt.X(), y: pt.Y(), name: (pt as any)._rawName || '' }\n  }\n\n  private definingPointsOf(obj: any): any[] {\n    if (!obj) return []\n    if (obj.elType === 'segment' || obj.elType === 'line') {\n      const a: any = obj.point1 || obj.A || obj.points?.[0]\n      const b: any = obj.point2 || obj.B || obj.points?.[1]\n      return [a, b].filter(Boolean)\n    }\n    if (obj.elType === 'circle') {\n      const c: any = obj.center || obj.points?.[0]\n      const p: any = obj.point2 || obj.points?.[1]\n      return [c, p].filter(Boolean)\n    }\n    return []\n  }\n\n  private attachPointTracking(pt: any): void {\n    // Avoid double-binding\n    if ((pt as any)._undoRedoBound) return\n    ;(pt as any)._undoRedoBound = true\n\n    pt.on('down', () => {\n      if (this.suppressTracking) return\n      this.moveStarts.set(pt.id, this.posOf(pt))\n    })\n\n    pt.on('up', () => {\n      if (this.suppressTracking) return\n      const start = this.moveStarts.get(pt.id)\n      if (!start) return\n      const end = this.posOf(pt)\n\n      const moved = !this.withinTol(start.x, end.x) || !this.withinTol(start.y, end.y) || start.name !== end.name\n      if (moved) {\n        const op: ModifyOp = { kind: 'modify', pointId: pt.id, before: start, after: end }\n        this.pushOperation(op)\n      }\n      this.moveStarts.delete(pt.id)\n    })\n  }\n\n  private attachShapeTracking(obj: any): void {\n    // For segment/line/circle: record a BUNDLE of point moves\n    let before: Record<string, { x: number; y: number; name: string }> | null = null\n    let pts: any[] = []\n\n    const onDown = () => {\n      if (this.suppressTracking) return\n      pts = this.definingPointsOf(obj)\n      if (pts.length === 0) return\n      before = {}\n      for (const p of pts) before[p.id] = this.posOf(p)\n    }\n\n    const onUp = () => {\n      if (this.suppressTracking || !before || pts.length === 0) return\n      const ops: Operation[] = []\n      for (const p of pts) {\n        const b = before![p.id]\n        if (!b) continue\n        const a = this.posOf(p)\n        if (b.x !== a.x || b.y !== a.y || b.name !== a.name) {\n          ops.push({\n            kind: 'modify',\n            pointId: p.id,\n            before: b,\n            after: a\n          } as ModifyOp)\n        }\n      }\n      if (ops.length === 1 && ops[0]) {\n        this.pushOperation(ops[0])                 // single move\n      } else if (ops.length > 1) {\n        this.pushOperation({ kind: 'bundle', ops }) // move both endpoints / center+radius\n      }\n      before = null\n      pts = []\n    }\n\n    obj.on('down', onDown)\n    obj.on('up', onUp)\n  }\n\n  private findPointNear(xy: { x: number; y: number }, tol = this.EPS): any {\n    const objs = Object.values(this.board.objects) as any[]\n    for (const o of objs) {\n      if (o?.elType === 'point') {\n        const p = { x: o.X(), y: o.Y() }\n        if (Math.hypot(p.x - xy.x, p.y - xy.y) <= tol) return o\n      }\n    }\n    return null\n  }\n\n  private isJXGPoint(p: any): boolean {\n    return !!(\n      p &&\n      p.elType === 'point' &&\n      typeof p.X === 'function' &&\n      typeof p.Y === 'function' &&\n      p.board === this.board\n    )\n  }\n\n  private getPointByIdOrNear(prefId: string | undefined, xy: { x: number; y: number }, tol = this.EPS): any {\n    if (prefId) {\n      const byId = (this.board.objects as any)[prefId]\n      if (byId?.elType === 'point') return byId\n    }\n    // exact coordinate match first\n    for (const o of Object.values(this.board.objects) as any[]) {\n      if (o?.elType === 'point' && o.X() === xy.x && o.Y() === xy.y) return o\n    }\n    // then proximity\n    const nearPoint = this.findPointNear(xy, tol)\n    if (nearPoint) return nearPoint\n    \n    // If no point found, return null (will be handled by fallback in calling code)\n    return null\n  }\n\n  private ensurePoint(\n    xy: { x: number; y: number },\n    attr: any = { name: '', size: 2, strokeColor: '#444', fillColor: '#666' }\n  ): any | null {\n    const existing = this.findPointNear(xy)\n    if (existing) {\n      this.attachPointTracking(existing)\n      return existing\n    }\n\n    try {\n      const pt = this.board.create('point', [xy.x, xy.y], attr)\n      if (!this.isJXGPoint(pt)) throw new Error('Invalid point')\n      ;(pt as any)._rawName = attr?.name ?? ''\n      if (attr?.fixed !== undefined) pt.setAttribute({ fixed: attr.fixed })\n      if (attr?.withLabel !== undefined) pt.setAttribute({ withLabel: attr.withLabel })\n      \n      // Attach move tracking to the new point\n      this.attachPointTracking(pt)\n      \n      return pt\n    } catch (error) {\n      console.error('Failed to create point:', error)\n      return null\n    }\n  }\n\n  private performOperation(op: Operation): void {\n    if (op.kind === 'create') {\n      this.performCreate(op)\n    } else if (op.kind === 'delete') {\n      this.performDelete(op)\n    } else if (op.kind === 'modify') {\n      this.performModify(op)\n    } else if (op.kind === 'bundle') {\n      this.performBundle(op)\n    }\n  }\n\n  private rollbackOperation(op: Operation): void {\n    if (op.kind === 'create') {\n      this.rollbackCreate(op)\n    } else if (op.kind === 'delete') {\n      this.rollbackDelete(op)\n    } else if (op.kind === 'modify') {\n      this.rollbackModify(op)\n    } else if (op.kind === 'bundle') {\n      this.rollbackBundle(op)\n    }\n  }\n\n  private performCreate(op: CreateOp): void {\n    if (op.elType === 'point') {\n      const { x, y, attr } = op.payload\n      const pt = this.ensurePoint({ x, y }, attr)\n      if (!pt) return\n      op._id = pt.id\n      // Force board update to ensure point is created immediately\n      this.board.update()\n      return\n    }\n\n    if (op.elType === 'segment' || op.elType === 'line') {\n      const { p1, p2, attr } = op.payload\n      const a = this.getPointByIdOrNear(op.pointIds?.[0], p1) || this.ensurePoint(p1, attr)\n      const b = this.getPointByIdOrNear(op.pointIds?.[1], p2) || this.ensurePoint(p2, attr)\n\n      // If either isn't a real JSXGraph point, fall back to coordinate parents\n      const useCoords = !(this.isJXGPoint(a) && this.isJXGPoint(b))\n      const parents = useCoords ? [[p1.x, p1.y], [p2.x, p2.y]] : [a, b]\n\n      try {\n        const el = this.board.create(op.elType, parents as any, attr)\n        op._id = (el as any).id\n        // capture actual point ids (works for both segment & line)\n        const pA: any = (el as any).point1 || (el as any).A || (el as any).points?.[0]\n        const pB: any = (el as any).point2 || (el as any).B || (el as any).points?.[1]\n        if (this.isJXGPoint(pA) && this.isJXGPoint(pB)) {\n          op.pointIds = [pA.id, pB.id]\n          // Attach tracking to the endpoint points if they don't have it yet\n          this.attachPointTracking(pA)\n          this.attachPointTracking(pB)\n        }\n        // Attach shape tracking to the element itself\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error(`Failed to create ${op.elType}:`, e, { parents })\n      }\n      return\n    }\n\n    if (op.elType === 'circle') {\n      const { center, on, attr } = op.payload\n      const c = this.getPointByIdOrNear(op.pointIds?.[0], center) || this.ensurePoint(center, attr)\n      const p = this.getPointByIdOrNear(op.pointIds?.[1], on) || this.ensurePoint(on, attr)\n\n      const useCoords = !(this.isJXGPoint(c) && this.isJXGPoint(p))\n      const parents = useCoords ? [[center.x, center.y], [on.x, on.y]] : [c, p]\n\n      try {\n        const el = this.board.create('circle', parents as any, attr)\n        op._id = (el as any).id\n        const pc: any = (el as any).center || (el as any).points?.[0]\n        const pp: any = (el as any).point2 || (el as any).points?.[1]\n        if (this.isJXGPoint(pc) && this.isJXGPoint(pp)) {\n          op.pointIds = [pc.id, pp.id]\n          // Attach tracking to the center and on-point if they don't have it yet\n          this.attachPointTracking(pc)\n          this.attachPointTracking(pp)\n        }\n        // Attach shape tracking to the circle element itself\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error('Failed to create circle:', e, { parents })\n      }\n      return\n    }\n  }\n\n  private rollbackCreate(op: CreateOp): void {\n    if (!op._id) return\n    \n    const obj = (this.board.objects as any)[op._id]\n    if (obj) {\n      try {\n        this.board.removeObject(obj as JXG.GeometryElement)\n      } catch (error) {\n        console.error('Failed to remove object:', error, op._id)\n      }\n    } else {\n      // Try to find and remove by matching definition as fallback\n      this.removeByMatchingDefinition({\n        kind: 'delete',\n        elType: op.elType,\n        payload: op.payload,\n        _id: op._id,\n        pointIds: op.pointIds || []\n      })\n    }\n    \n    // Remove associated points if they're not used elsewhere\n    if (op.pointIds && (op.elType === 'segment' || op.elType === 'line' || op.elType === 'circle')) {\n      op.pointIds.forEach((pointId: string) => {\n        const pointObj = (this.board.objects as any)[pointId]\n        if (pointObj && !this.isPointUsedElsewhere(pointId, pointObj)) {\n          try {\n            this.board.removeObject(pointObj as JXG.GeometryElement)\n          } catch (error) {\n            console.error('Failed to remove point:', error, pointId)\n          }\n        }\n      })\n    }\n  }\n\n  private performDelete(op: DeleteOp): void {\n    if (op._id) {\n      const target = (this.board.objects as any)[op._id]\n      if (target) {\n        this.board.removeObject(target as JXG.GeometryElement)\n        // Force board update to ensure object is removed immediately\n        this.board.update()\n      }\n    } else {\n      // If _id is missing, try to find and remove by matching defining points and attributes\n      this.removeByMatchingDefinition(op)\n      // Force board update after removing by matching\n      this.board.update()\n    }\n    \n    // Remove associated points if they're not used elsewhere\n    if (op.pointIds && (op.elType === 'segment' || op.elType === 'line' || op.elType === 'circle')) {\n      op.pointIds.forEach((pointId: string) => {\n        const pointObj = (this.board.objects as any)[pointId]\n        if (pointObj && !this.isPointUsedElsewhere(pointId, pointObj)) {\n          this.board.removeObject(pointObj as JXG.GeometryElement)\n        }\n      })\n      // Force board update after removing points\n      this.board.update()\n    }\n  }\n\n  private removeByMatchingDefinition(op: DeleteOp): void {\n    const objects = Object.values(this.board.objects) as any[]\n    \n    for (const obj of objects) {\n      if (obj.elType !== op.elType) continue\n      \n      let matches = false\n      \n      if (op.elType === 'point') {\n        const { x, y } = op.payload\n        matches = Math.abs(obj.X() - x) < this.EPS && Math.abs(obj.Y() - y) < this.EPS\n      } else if (op.elType === 'segment' || op.elType === 'line') {\n        const { p1, p2 } = op.payload\n        const a = obj.point1 || obj.A || obj.points?.[0]\n        const b = obj.point2 || obj.B || obj.points?.[1]\n        if (a && b) {\n          matches = Math.abs(a.X() - p1.x) < this.EPS && Math.abs(a.Y() - p1.y) < this.EPS &&\n                   Math.abs(b.X() - p2.x) < this.EPS && Math.abs(b.Y() - p2.y) < this.EPS\n        }\n      } else if (op.elType === 'circle') {\n        const { center, on } = op.payload\n        const c = obj.center || obj.midpoint || obj.points?.[0]\n        const p = obj.point2 || obj.points?.[1]\n        if (c) {\n          const centerMatches = Math.abs(c.X() - center.x) < this.EPS && Math.abs(c.Y() - center.y) < this.EPS\n          if (p) {\n            matches = centerMatches && Math.abs(p.X() - on.x) < this.EPS && Math.abs(p.Y() - on.y) < this.EPS\n          } else {\n            // For circles defined by center and radius\n            const R = (typeof obj.R === 'function' ? obj.R() : obj.radius) ?? 1\n            const expectedRadius = Math.hypot(on.x - center.x, on.y - center.y)\n            matches = centerMatches && Math.abs(R - expectedRadius) < this.EPS\n          }\n        }\n      }\n      \n      if (matches) {\n        this.board.removeObject(obj as JXG.GeometryElement)\n        break\n      }\n    }\n  }\n\n  private rollbackDelete(op: DeleteOp): void {\n    if (op.elType === 'point') {\n      const { x, y, attr } = op.payload\n      const pt = this.ensurePoint({ x, y }, attr)\n      if (!pt) return\n      op._id = pt.id\n      // Force board update to ensure point is created immediately\n      this.board.update()\n      return\n    }\n\n    if (op.elType === 'segment' || op.elType === 'line') {\n      const { p1, p2, attr } = op.payload\n      const a = this.getPointByIdOrNear(op.pointIds?.[0], p1) || this.ensurePoint(p1, attr)\n      const b = this.getPointByIdOrNear(op.pointIds?.[1], p2) || this.ensurePoint(p2, attr)\n      \n      const useCoords = !(this.isJXGPoint(a) && this.isJXGPoint(b))\n      const parents = useCoords ? [[p1.x, p1.y], [p2.x, p2.y]] : [a, b]\n      \n      try {\n        const el = this.board.create(op.elType, parents as any, attr)\n        op._id = (el as any).id\n        const pA: any = (el as any).point1 || (el as any).A || (el as any).points?.[0]\n        const pB: any = (el as any).point2 || (el as any).B || (el as any).points?.[1]\n        if (this.isJXGPoint(pA) && this.isJXGPoint(pB)) {\n          op.pointIds = [pA.id, pB.id]\n        }\n        // Attach shape tracking to the recreated element\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error(`Failed to recreate ${op.elType}:`, e, { parents })\n      }\n      return\n    }\n\n    if (op.elType === 'circle') {\n      const { center, on, attr } = op.payload\n      const c = this.getPointByIdOrNear(op.pointIds?.[0], center) || this.ensurePoint(center, attr)\n      const p = this.getPointByIdOrNear(op.pointIds?.[1], on) || this.ensurePoint(on, attr)\n\n      const useCoords = !(this.isJXGPoint(c) && this.isJXGPoint(p))\n      const parents = useCoords ? [[center.x, center.y], [on.x, on.y]] : [c, p]\n\n      try {\n        const el = this.board.create('circle', parents as any, attr)\n        op._id = (el as any).id\n        const pc: any = (el as any).center || (el as any).points?.[0]\n        const pp: any = (el as any).point2 || (el as any).points?.[1]\n        if (this.isJXGPoint(pc) && this.isJXGPoint(pp)) {\n          op.pointIds = [pc.id, pp.id]\n        }\n        // Attach shape tracking to the recreated circle element\n        this.attachShapeTracking(el)\n        // Force board update to ensure object is created immediately\n        this.board.update()\n      } catch (e) {\n        console.error('Failed to recreate circle:', e, { parents })\n      }\n      return\n    }\n  }\n\n  private performModify(op: ModifyOp): void {\n    const pointObj = (this.board.objects as any)[op.pointId]\n    if (pointObj) {\n      // Use moveTo instead of setPosition to avoid draggable function issues\n      try {\n        pointObj.moveTo([op.after.x, op.after.y])\n      } catch (e) {\n        // Fallback to direct coordinate setting\n        pointObj.coords.setCoordinates(JXG.COORDS_BY_USER, [op.after.x, op.after.y])\n        this.board.update()\n      }\n      this.setPointName(pointObj, op.after.name)\n    }\n  }\n\n  private rollbackModify(op: ModifyOp): void {\n    const pointObj = (this.board.objects as any)[op.pointId]\n    if (pointObj) {\n      // Use moveTo instead of setPosition to avoid draggable function issues\n      try {\n        pointObj.moveTo([op.before.x, op.before.y])\n      } catch (e) {\n        // Fallback to direct coordinate setting\n        pointObj.coords.setCoordinates(JXG.COORDS_BY_USER, [op.before.x, op.before.y])\n        this.board.update()\n      }\n      this.setPointName(pointObj, op.before.name)\n    }\n  }\n\n  private performBundle(op: BundleOp): void {\n    // Execute operations in forward order\n    for (const subOp of op.ops) {\n      if (subOp) {\n        try {\n          // Create a fresh copy of the operation to avoid stale IDs\n          const freshOp = structuredClone(subOp)\n          // Keep IDs intact - don't delete them\n          this.performOperation(freshOp)\n          // Write back the realized IDs to the original operation\n          if (freshOp.kind === 'create' || freshOp.kind === 'delete') {\n            const freshOpTyped = freshOp as CreateOp | DeleteOp\n            const subOpTyped = subOp as CreateOp | DeleteOp\n            if (freshOpTyped._id !== undefined) {\n              subOpTyped._id = freshOpTyped._id\n            }\n            if (freshOpTyped.pointIds !== undefined) {\n              subOpTyped.pointIds = freshOpTyped.pointIds\n            }\n          }\n        } catch (error) {\n          console.error('Error executing bundled operation:', error, subOp)\n          // Continue with other operations even if one fails\n        }\n      }\n    }\n    // Force board update after all bundle operations\n    this.board.update()\n  }\n\n  private rollbackBundle(op: BundleOp): void {\n    // Rollback operations in reverse order\n    for (let i = op.ops.length - 1; i >= 0; i--) {\n      const subOp = op.ops[i]\n      if (subOp) {\n        try {\n          // Create a fresh copy of the operation to avoid stale IDs\n          const freshOp = structuredClone(subOp)\n          // Keep IDs intact - don't delete them\n          this.rollbackOperation(freshOp)\n          // Write back the realized IDs to the original operation\n          if (freshOp.kind === 'create' || freshOp.kind === 'delete') {\n            const freshOpTyped = freshOp as CreateOp | DeleteOp\n            const subOpTyped = subOp as CreateOp | DeleteOp\n            if (freshOpTyped._id !== undefined) {\n              subOpTyped._id = freshOpTyped._id\n            }\n            if (freshOpTyped.pointIds !== undefined) {\n              subOpTyped.pointIds = freshOpTyped.pointIds\n            }\n          }\n        } catch (error) {\n          console.error('Error rolling back bundled operation:', error, subOp)\n          // Continue with other operations even if one fails\n        }\n      }\n    }\n    // Force board update after all bundle rollback operations\n    this.board.update()\n  }\n\n  private setPointName(pointObj: any, name: string): void {\n    const trimmed = (name || '').trim()\n    const pretty = this.toSubscript(trimmed)\n    pointObj.setAttribute({ name: pretty, withLabel: !!trimmed })\n    ;(pointObj as any)._rawName = trimmed\n  }\n\n  private toSubscript(name: string): string {\n    const map: Record<string, string> = { \n      '0': '₀', '1': '₁', '2': '₂', '3': '₃', '4': '₄', \n      '5': '₅', '6': '₆', '7': '₇', '8': '₈', '9': '₉' \n    }\n    return name.replace(/_(\\d+)/g, (_, d) => d.split('').map((ch: string) => map[ch] ?? ch).join(''))\n  }\n\n  private isPointUsedElsewhere(pointId: string, pointObj: any): boolean {\n    return Object.values(this.board.objects).some((otherObj: any) => {\n      if (otherObj === pointObj || otherObj.id === pointId) return false\n      if (otherObj.point1?.id === pointId || otherObj.point2?.id === pointId) return true\n      if (otherObj.center?.id === pointId) return true\n      if (otherObj.points && Array.isArray(otherObj.points)) {\n        return otherObj.points.some((p: any) => p?.id === pointId)\n      }\n      return false\n    })\n  }\n\n  // Helper methods for creating operations\n  public createPointOperation(x: number, y: number, attr: any = { name: '', size: 2, strokeColor: '#444', fillColor: '#666' }): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'point',\n      payload: { x, y, attr }\n    }\n  }\n\n  public createSegmentOperation(p1: { x: number; y: number }, p2: { x: number; y: number }, attr: any): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'segment',\n      payload: { p1, p2, attr }\n    }\n  }\n\n  public createLineOperation(p1: { x: number; y: number }, p2: { x: number; y: number }, attr: any): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'line',\n      payload: { p1, p2, attr }\n    }\n  }\n\n  public createCircleOperation(center: { x: number; y: number }, on: { x: number; y: number }, attr: any): CreateOp {\n    return {\n      kind: 'create',\n      elType: 'circle',\n      payload: { center, on, attr }\n    }\n  }\n\n  public createDeleteOperation(obj: any): DeleteOp | null {\n    try {\n      const attr = this.getCommonAttr(obj)\n      if (obj.elType === 'point') {\n        return {\n          kind: 'delete',\n          elType: 'point',\n          payload: { x: obj.X(), y: obj.Y(), attr },\n          _id: obj.id\n        }\n      }\n      if (obj.elType === 'segment' || obj.elType === 'line') {\n        const a: any = obj.point1 || obj.A || obj.points?.[0]\n        const b: any = obj.point2 || obj.B || obj.points?.[1]\n        if (!a || !b) return null\n        return {\n          kind: 'delete',\n          elType: obj.elType,\n          payload: { p1: { x: a.X(), y: a.Y() }, p2: { x: b.X(), y: b.Y() }, attr },\n          _id: obj.id,\n          pointIds: [a.id, b.id]\n        }\n      }\n      if (obj.elType === 'circle') {\n        const c: any = obj.center || obj.midpoint || obj.points?.[0]\n        const p: any = obj.point2 || obj.points?.[1]\n        const center = c ? { x: c.X(), y: c.Y() } : { x: obj.center?.X?.() ?? 0, y: obj.center?.Y?.() ?? 0 }\n        let on\n        if (p) {\n          on = { x: p.X(), y: p.Y() }\n        } else {\n          const R = (typeof obj.R === 'function' ? obj.R() : obj.radius) ?? 1\n          on = { x: center.x + R, y: center.y }\n        }\n        return {\n          kind: 'delete',\n          elType: 'circle',\n          payload: { center, on, attr },\n          _id: obj.id,\n          pointIds: c && p ? [c.id, p.id] : []\n        }\n      }\n    } catch {\n      return null\n    }\n    return null\n  }\n\n  private getCommonAttr(o: any): any {\n    return {\n      name: o?._rawName ?? '',\n      withLabel: !!(o?.visProp?.withlabel || o?.visProp?.withLabel),\n      fixed: !!o?.visProp?.fixed,\n      size: o?.visProp?.size,\n      strokeColor: o?.visProp?.strokecolor ?? o?.visProp?.strokeColor,\n      strokeWidth: o?.visProp?.strokewidth ?? o?.visProp?.strokeWidth,\n      fillColor: o?.visProp?.fillcolor ?? o?.visProp?.fillColor,\n      dash: o?.visProp?.dash\n    }\n  }\n\n  // Helper methods for UI integration\n  public fromBoardDeleteUnderMouse(e: any): DeleteOp | null {\n    const under = this.board.getAllObjectsUnderMouse(e)\n    const o: any = under.find((x: any) => !x?.visProp?.fixed)\n    return o ? this.createDeleteOperation(o) : null\n  }\n\n  public createModifyOperation(pointId: string, before: { x: number; y: number; name: string }, after: { x: number; y: number; name: string }): ModifyOp {\n    return {\n      kind: 'modify',\n      pointId,\n      before,\n      after\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4639, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/grid-manager.ts"],"sourcesContent":["// lib/grid-manager.ts\nimport JXG from 'jsxgraph'\nimport { WORLD_PER_CM, WORLD_PER_MM } from './measurement-scale'\n\nexport type GridMode = 'none' | 'major' | 'minor' | 'major-minor' | 'dot'\ntype JBoard = JXG.Board & { renderer: any }\n\nexport class GridManager {\n  private gridLines: any[] = []\n  private mode: GridMode = 'none'\n  private dotStep = WORLD_PER_MM // world units (1 mm)\n  private container: HTMLElement\n\n  constructor(private board: JBoard, container: HTMLElement) {\n    this.container = container\n    // ensure background sits below the canvas\n    this.container.style.position = this.container.style.position || 'relative'\n  }\n\n  setMode(mode: GridMode) {\n    if (this.mode === mode) return\n    this.mode = mode\n    this.clearAll()\n    switch (mode) {\n      case 'none':\n        this.applyDot(false)\n        break\n      case 'major':\n        this.createLineGrid(WORLD_PER_CM, '#e5e7eb', 1)\n        this.applyDot(false)\n        break\n      case 'minor':\n        this.createLineGrid(WORLD_PER_MM, '#f3f4f6', 0.5)\n        this.applyDot(false)\n        break\n      case 'major-minor':\n        this.createLineGrid(WORLD_PER_MM, '#f3f4f6', 0.5)\n        this.createLineGrid(WORLD_PER_CM, '#d1d5db', 1)\n        this.applyDot(false)\n        break\n      case 'dot':\n        this.applyDot(true)\n        break\n    }\n    this.board.update()\n  }\n\n  setDotStep(stepWorldUnits: number) {\n    this.dotStep = Math.max(0.1, stepWorldUnits)\n    if (this.mode === 'dot') this.applyDot(true)\n  }\n\n  /** Keep the dot background in sync with pixel scaling */\n  sync() {\n    if (this.mode !== 'dot') return\n    this.applyDot(true)\n  }\n\n  private createLineGrid(step: number, color: string, strokeWidth: number) {\n    const bbox = this.board.getBoundingBox()\n    // Ensure a shared Set on the board to track grid object ids\n    const gridIds: Set<string> = ((this.board as any).__gridIds ||= new Set<string>())\n    \n    // Create vertical lines\n    for (let x = bbox[0]; x <= bbox[2]; x += step) {\n      const line = this.board.create('line', [[x, bbox[1]], [x, bbox[3]]], {\n        strokeColor: color,\n        strokeWidth: strokeWidth,\n        fixed: true,\n        highlight: false,\n        layer: 0,\n        withLabel: false,\n        showInfobox: false,\n        visible: true,\n        trace: false,\n        track: false,\n        draggable: false\n      })\n      try { gridIds.add((line as any).id as string) } catch {}\n      try {\n        ((line as any).visProp ||= {}).pointerEvents = 'none'\n        const node = (line as any).rendNode\n        if (node) node.style.pointerEvents = 'none'\n      } catch {}\n      this.gridLines.push(line)\n    }\n    \n    // Create horizontal lines\n    for (let y = bbox[3]; y <= bbox[1]; y += step) {\n      const line = this.board.create('line', [[bbox[0], y], [bbox[2], y]], {\n        strokeColor: color,\n        strokeWidth: strokeWidth,\n        fixed: true,\n        highlight: false,\n        layer: 0,\n        withLabel: false,\n        showInfobox: false,\n        visible: true,\n        trace: false,\n        track: false,\n        draggable: false\n      })\n      try { gridIds.add((line as any).id as string) } catch {}\n      try {\n        ((line as any).visProp ||= {}).pointerEvents = 'none'\n        const node = (line as any).rendNode\n        if (node) node.style.pointerEvents = 'none'\n      } catch {}\n      this.gridLines.push(line)\n    }\n  }\n\n  private clearAll() {\n    const gridIds: Set<string> | undefined = (this.board as any).__gridIds\n    this.gridLines.forEach(line => {\n      try { this.board.removeObject(line) } catch {}\n      try { gridIds?.delete((line as any).id as string) } catch {}\n    })\n    this.gridLines = []\n  }\n\n  private applyDot(enabled: boolean) {\n    if (!enabled) {\n      this.container.style.backgroundImage = ''\n      this.container.style.backgroundSize = ''\n      this.container.style.backgroundPosition = ''\n      return\n    }\n    // Convert world units to pixels using board.unitX/unitY\n    const pxX = this.dotStep * this.board.unitX\n    const pxY = this.dotStep * this.board.unitY\n    // Subtle dot (1px) using radial gradient\n    this.container.style.backgroundImage =\n      'radial-gradient(circle, #e5e7eb 1px, transparent 1px)'\n    this.container.style.backgroundSize = `${pxX}px ${pxY}px`\n    // Keep the pattern aligned to the origin\n    // If you allow pan/zoom, you could compute an offset from the bbox.\n    this.container.style.backgroundPosition = `0 0`\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4811, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/board-manager.ts"],"sourcesContent":["// lib/board-manager.ts\nimport JXG from 'jsxgraph'\nimport { GridManager, GridMode } from './grid-manager'\n\nexport type JBoard = JXG.Board & { renderer: any }\n\nexport interface BoardOptions {\n  boundingbox?: [number, number, number, number]\n  axis?: boolean\n  showNavigation?: boolean\n  showCopyright?: boolean\n  grid?: boolean\n  pan?: { enabled: boolean }\n  zoom?: boolean\n  keepaspectratio?: boolean\n}\n\nexport interface BoardManagerOptions extends BoardOptions {\n  container: HTMLElement\n  defaultGridMode?: GridMode\n}\n\nexport class BoardManager {\n  private board: JBoard | null = null\n  private gridManager: GridManager | null = null\n  private container: HTMLElement | null = null\n  private options: BoardOptions\n\n  constructor(options: BoardManagerOptions) {\n    this.container = options.container\n    const { container, defaultGridMode, ...boardOptions } = options\n    this.options = {\n      boundingbox: [-1, 8, 11, -1],\n      axis: false,\n      showNavigation: false,\n      showCopyright: false,\n      grid: false,\n      pan: { enabled: false },\n      zoom: false,\n      keepaspectratio: true,\n      ...boardOptions\n    }\n    this.init(boardOptions, defaultGridMode)\n  }\n\n  private init(boardOptions: BoardOptions, defaultGridMode?: GridMode) {\n    if (!this.container) {\n      throw new Error('Container element is required')\n    }\n\n    if (this.board) {\n      throw new Error('Board already initialized')\n    }\n\n    // Create board\n    this.board = JXG.JSXGraph.initBoard(this.container, {\n      ...this.options,\n      ...boardOptions\n    }) as JBoard\n\n    // Create grid manager\n    this.gridManager = new GridManager(this.board, this.container)\n\n    // Set initial grid mode if provided\n    if (defaultGridMode) {\n      this.gridManager.setMode(defaultGridMode)\n    }\n\n    // Set up global event wiring for future pan/zoom support\n    // This can be extended later for pan/zoom functionality\n    this.setupGlobalEvents()\n  }\n\n  /**\n   * Get the board instance (typed getter)\n   */\n  getBoard(): JBoard {\n    if (!this.board) {\n      throw new Error('Board not initialized')\n    }\n    return this.board\n  }\n\n  /**\n   * Get the grid manager instance\n   */\n  getGridManager(): GridManager {\n    if (!this.gridManager) {\n      throw new Error('GridManager not initialized')\n    }\n    return this.gridManager\n  }\n\n  /**\n   * Set grid mode via GridManager\n   */\n  setGridMode(mode: GridMode) {\n    this.gridManager?.setMode(mode)\n  }\n\n  /**\n   * Setup global event wiring (for later pan/zoom support)\n   */\n  private setupGlobalEvents() {\n    if (!this.board) return\n\n    // If you ever enable pan/zoom, keep the dot grid in sync:\n    // this.board.on('boundingbox', () => {\n    //   this.gridManager?.sync()\n    // })\n\n    // Add other global event handlers here as needed\n  }\n\n  /**\n   * Update board options (for dynamic changes like pan/zoom)\n   */\n  updateOptions(options: Partial<BoardOptions>) {\n    if (!this.board) {\n      throw new Error('Board not initialized')\n    }\n    this.options = { ...this.options, ...options }\n    // Apply options to board as needed\n    // Note: Some options may require board recreation\n  }\n\n  /**\n   * Free the board and clean up resources\n   */\n  free() {\n    if (this.board) {\n      try {\n        JXG.JSXGraph.freeBoard(this.board)\n      } catch (e) {\n        // Ignore errors during cleanup\n      }\n      this.board = null\n    }\n    this.gridManager = null\n    this.container = null\n  }\n}\n\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;;;AACvB;AACA;;;;AAoBO,MAAM;IAuBH,KAAK,YAA0B,EAAE,eAA0B,EAAE;QACnE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,MAAM,IAAI,MAAM;QAClB;QAEA,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,MAAM,IAAI,MAAM;QAClB;QAEA,eAAe;QACf,IAAI,CAAC,KAAK,GAAG,sLAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE;YAClD,GAAG,IAAI,CAAC,OAAO;YACf,GAAG,YAAY;QACjB;QAEA,sBAAsB;QACtB,IAAI,CAAC,WAAW,GAAG,IAAI,wKAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS;QAE7D,oCAAoC;QACpC,IAAI,iBAAiB;YACnB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;QAC3B;QAEA,yDAAyD;QACzD,wDAAwD;QACxD,IAAI,CAAC,iBAAiB;IACxB;IAEA;;GAEC,GACD,WAAmB;QACjB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA;;GAEC,GACD,iBAA8B;QAC5B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,IAAI,CAAC,WAAW;IACzB;IAEA;;GAEC,GACD,YAAY,IAAc,EAAE;YAC1B;SAAA,oBAAA,IAAI,CAAC,WAAW,cAAhB,wCAAA,kBAAkB,OAAO,CAAC;IAC5B;IAEA;;GAEC,GACD,AAAQ,oBAAoB;QAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;IAEjB,0DAA0D;IAC1D,uCAAuC;IACvC,6BAA6B;IAC7B,KAAK;IAEL,iDAAiD;IACnD;IAEA;;GAEC,GACD,cAAc,OAA8B,EAAE;QAC5C,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,CAAC,OAAO,GAAG;YAAE,GAAG,IAAI,CAAC,OAAO;YAAE,GAAG,OAAO;QAAC;IAC7C,mCAAmC;IACnC,kDAAkD;IACpD;IAEA;;GAEC,GACD,OAAO;QACL,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI;gBACF,sLAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK;YACnC,EAAE,OAAO,GAAG;YACV,+BAA+B;YACjC;YACA,IAAI,CAAC,KAAK,GAAG;QACf;QACA,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,SAAS,GAAG;IACnB;IAhHA,YAAY,OAA4B,CAAE;QAL1C,+MAAQ,SAAuB;QAC/B,+MAAQ,eAAkC;QAC1C,+MAAQ,aAAgC;QACxC,+MAAQ,WAAR,KAAA;QAGE,IAAI,CAAC,SAAS,GAAG,QAAQ,SAAS;QAClC,MAAM,EAAE,SAAS,EAAE,eAAe,EAAE,GAAG,cAAc,GAAG;QACxD,IAAI,CAAC,OAAO,GAAG;YACb,aAAa;gBAAC,CAAC;gBAAG;gBAAG;gBAAI,CAAC;aAAE;YAC5B,MAAM;YACN,gBAAgB;YAChB,eAAe;YACf,MAAM;YACN,KAAK;gBAAE,SAAS;YAAM;YACtB,MAAM;YACN,iBAAiB;YACjB,GAAG,YAAY;QACjB;QACA,IAAI,CAAC,IAAI,CAAC,cAAc;IAC1B;AAkGF","debugId":null}},
    {"offset": {"line": 4939, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/geometry-factory.ts"],"sourcesContent":["// lib/geometry-factory.ts\nimport JXG from 'jsxgraph'\nimport { JBoard } from './board-manager'\nimport { GridMode } from './grid-manager'\nimport { WORLD_PER_MM, WORLD_PER_CM } from './measurement-scale'\n\nexport type CreateAttrs = Partial<JXG.Options>\n\nexport class GeometryFactory {\n  constructor(private board: JBoard) {}\n\n  /**\n   * Get snap size based on grid mode\n   */\n  getSnapSize(gridMode: GridMode): number {\n    if (gridMode === 'none') return WORLD_PER_MM\n    if (gridMode === 'minor') return WORLD_PER_MM\n    return WORLD_PER_CM\n  }\n\n  /**\n   * Get EPS for finding nearby points based on grid mode\n   */\n  getNearbyEps(gridMode: GridMode, baseEps: number = 0.05): number {\n    const snapSize = this.getSnapSize(gridMode)\n    return Math.max(baseEps, snapSize * 0.8)\n  }\n\n  point(x: number, y: number, snap = false, attrs: CreateAttrs = {}) {\n    const pt = this.board.create('point', [x, y], {\n      name: '', size: 2, strokeColor: '#444', fillColor: '#666',\n      snapToGrid: false,\n      ...attrs\n    })\n    ;(pt as any)._rawName = ''\n    return pt\n  }\n\n  /**\n   * Create a point with grid-aware snap settings\n   */\n  pointWithGrid(x: number, y: number, gridMode: GridMode, attrs: CreateAttrs = {}) {\n    // Always disable snapping for user-created points\n    return this.point(x, y, false, attrs)\n  }\n\n  segment(a: any, b: any, attrs: CreateAttrs = {}) {\n    return this.board.create('segment', [a, b], {\n      strokeColor:'#2563eb', strokeWidth:2, ...attrs\n    })\n  }\n\n  line(a: any, b: any, attrs: CreateAttrs = {}) {\n    return this.board.create('line', [a, b], {\n      strokeColor:'#059669', strokeWidth:1, dash:1, ...attrs\n    })\n  }\n\n  circle(center: any, on: any, attrs: CreateAttrs = {}) {\n    return this.board.create('circle', [center, on], {\n      strokeColor:'#dc2626', strokeWidth:2, ...attrs\n    })\n  }\n\n  findNearbyPoint(x: number, y: number, eps: number) {\n    const objs = Object.values(this.board.objects) as any[]\n    return objs.find(o => o?.elType === 'point' && !o.visProp?.fixed &&\n      Math.hypot(o.X() - x, o.Y() - y) <= eps) || null\n  }\n}\n\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;;AAI1B;;;AAIO,MAAM;IAGX;;GAEC,GACD,YAAY,QAAkB,EAAU;QACtC,IAAI,aAAa,QAAQ,OAAO,8KAAY;QAC5C,IAAI,aAAa,SAAS,OAAO,8KAAY;QAC7C,OAAO,8KAAY;IACrB;IAEA;;GAEC,GACD,aAAa,QAAkB,EAAkC;YAAhC,UAAA,iEAAkB;QACjD,MAAM,WAAW,IAAI,CAAC,WAAW,CAAC;QAClC,OAAO,KAAK,GAAG,CAAC,SAAS,WAAW;IACtC;IAEA,MAAM,CAAS,EAAE,CAAS,EAAyC;YAAvC,OAAA,iEAAO,OAAO,QAAA,iEAAqB,CAAC;QAC9D,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS;YAAC;YAAG;SAAE,EAAE;YAC5C,MAAM;YAAI,MAAM;YAAG,aAAa;YAAQ,WAAW;YACnD,YAAY;YACZ,GAAG,KAAK;QACV;QACE,GAAW,QAAQ,GAAG;QACxB,OAAO;IACT;IAEA;;GAEC,GACD,cAAc,CAAS,EAAE,CAAS,EAAE,QAAkB,EAA2B;YAAzB,QAAA,iEAAqB,CAAC;QAC5E,kDAAkD;QAClD,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO;IACjC;IAEA,QAAQ,CAAM,EAAE,CAAM,EAA2B;YAAzB,QAAA,iEAAqB,CAAC;QAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW;YAAC;YAAG;SAAE,EAAE;YAC1C,aAAY;YAAW,aAAY;YAAG,GAAG,KAAK;QAChD;IACF;IAEA,KAAK,CAAM,EAAE,CAAM,EAA2B;YAAzB,QAAA,iEAAqB,CAAC;QACzC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ;YAAC;YAAG;SAAE,EAAE;YACvC,aAAY;YAAW,aAAY;YAAG,MAAK;YAAG,GAAG,KAAK;QACxD;IACF;IAEA,OAAO,MAAW,EAAE,EAAO,EAA2B;YAAzB,QAAA,iEAAqB,CAAC;QACjD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU;YAAC;YAAQ;SAAG,EAAE;YAC/C,aAAY;YAAW,aAAY;YAAG,GAAG,KAAK;QAChD;IACF;IAEA,gBAAgB,CAAS,EAAE,CAAS,EAAE,GAAW,EAAE;QACjD,MAAM,OAAO,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO;QAC7C,OAAO,KAAK,IAAI,CAAC,CAAA;gBAA+B;mBAA1B,CAAA,cAAA,wBAAA,EAAG,MAAM,MAAK,WAAW,GAAC,aAAA,EAAE,OAAO,cAAT,iCAAA,WAAW,KAAK,KAC9D,KAAK,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,MAAM;cAAQ;IAChD;IA3DA,YAAY,AAAQ,KAAa,CAAE;;aAAf,QAAA;IAAgB;AA4DtC","debugId":null}},
    {"offset": {"line": 5039, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/lib/selection-manager.ts"],"sourcesContent":["// lib/selection-manager.ts\n/**\n * SelectionManager - manages temporary selection state for multi-step tools\n * \n * Responsibility: hold \"first click\" temporary selection, expose select, clear, getFirst.\n * Why: simplifies selected state + refs and makes it tool-agnostic.\n */\n\nexport class SelectionManager {\n  private first: any = null\n\n  /**\n   * Select an item (typically used for first click in multi-step tools)\n   */\n  select(item: any): void {\n    this.first = item\n  }\n\n  /**\n   * Get the first selected item (for two-click tools like segment/line/circle)\n   */\n  getFirst(): any {\n    return this.first\n  }\n\n  /**\n   * Clear the selection\n   */\n  clear(): void {\n    this.first = null\n  }\n\n  /**\n   * Check if there is a selection\n   */\n  hasSelection(): boolean {\n    return this.first !== null\n  }\n\n  /**\n   * Get all selected items (for potential future multi-selection support)\n   * Currently returns array with first item or empty array\n   */\n  getAll(): any[] {\n    return this.first ? [this.first] : []\n  }\n}\n\n"],"names":[],"mappings":"AAAA,2BAA2B;AAC3B;;;;;CAKC;;;;;;AAEM,MAAM;IAGX;;GAEC,GACD,OAAO,IAAS,EAAQ;QACtB,IAAI,CAAC,KAAK,GAAG;IACf;IAEA;;GAEC,GACD,WAAgB;QACd,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA;;GAEC,GACD,QAAc;QACZ,IAAI,CAAC,KAAK,GAAG;IACf;IAEA;;GAEC,GACD,eAAwB;QACtB,OAAO,IAAI,CAAC,KAAK,KAAK;IACxB;IAEA;;;GAGC,GACD,SAAgB;QACd,OAAO,IAAI,CAAC,KAAK,GAAG;YAAC,IAAI,CAAC,KAAK;SAAC,GAAG,EAAE;IACvC;;QApCA,+MAAQ,SAAa;;AAqCvB","debugId":null}},
    {"offset": {"line": 5091, "column": 0}, "map": {"version":3,"sources":["file:///Users/kristynacoufalova/Documents/geometry_review/app/components/QuestionBasedTester.tsx"],"sourcesContent":["import { exportBoard } from '../../lib/board-serializer'\n'use client'\n\nimport React, { useEffect, useRef, useState, useCallback } from 'react'\nimport JXG from 'jsxgraph'\nimport { Save, Trash2, Circle, Pencil, RotateCcw, RotateCw, Eraser, Ruler, Triangle, Gauge, ArrowLeft, CheckCircle, XCircle, Clock, Settings, ChevronUp } from 'lucide-react'\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport DraggableRuler from './DraggableRuler'\nimport DraggableTriangle from './DraggableTriangle'\nimport DraggableProtractor from './DraggableProtractor'\nimport { supabase } from '../../lib/supabase'\nimport { ensureAuthenticatedUserExists } from '../../lib/supabase-helpers'\nimport { UndoRedoManager } from '../../lib/undo-redo'\nimport { GridMode } from '../../lib/grid-manager'\nimport { BoardManager, JBoard } from '../../lib/board-manager'\nimport { GeometryFactory } from '../../lib/geometry-factory'\nimport { SelectionManager } from '../../lib/selection-manager'\n\n// Using JBoard from BoardManager\n\nconst EPS = 0.03\n\nfunction dist(a: {x:number,y:number}, b:{x:number,y:number}) {\n  return Math.hypot(a.x - b.x, a.y - b.y)\n}\n\nfunction coordsOfPoint(p: any) { return { x: p.X(), y: p.Y() } }\n\nfunction pointOnLineXY(p:{x:number,y:number}, line:any, eps=EPS){\n  const P = coordsOfPoint(line.point1)\n  const Q = coordsOfPoint(line.point2)\n  const A = Q.y - P.y, B = P.x - Q.x, C = -(A*P.x + B*P.y)\n  return Math.abs(A*p.x + B*p.y + C) / Math.hypot(A,B) < eps\n}\n\nfunction hasEndpoints(seg:any, [P,Q]:any[], eps=EPS){\n  const pts = [coordsOfPoint(seg.point1), coordsOfPoint(seg.point2)]\n  const d = (u:any,v:any)=>dist(u,v)\n  return (d(pts[0],coordsOfPoint(P))<eps && d(pts[1],coordsOfPoint(Q))<eps) ||\n         (d(pts[1],coordsOfPoint(P))<eps && d(pts[0],coordsOfPoint(Q))<eps)\n}\n\ninterface Question {\n  id: string\n  code: string\n  title: string\n  prompt_md: string\n  max_score: number\n  givens: any\n  constraints: any\n  difficulty: number\n  tags: string[]\n}\n\ninterface Attempt {\n  id?: string\n  question_id: string\n  session_id: string\n  state: any\n  score?: number\n  passed?: boolean\n  feedback?: any\n  student_id: string\n  is_complete: boolean\n  time_spent: number\n}\n\ninterface Session {\n  id: string\n  user_id: string\n  question_id: string\n  session_data: any\n  is_active: boolean\n}\n\ninterface QuestionBasedTesterProps {\n  questionId?: string\n  studentId?: string\n  onBack?: () => void\n}\n\nexport default function QuestionBasedTester({ questionId, studentId = 'anonymous', onBack }: QuestionBasedTesterProps) {\n  const boardManagerRef = useRef<BoardManager | null>(null)\n  const containerRef = useRef<HTMLDivElement | null>(null)\n  const undoRedoRef = useRef<UndoRedoManager | null>(null)\n  const geometryFactoryRef = useRef<GeometryFactory | null>(null)\n  const selectionManagerRef = useRef<SelectionManager | null>(null)\n\n  const [tool, setTool] = useState<'mouse'|'point'|'segment'|'line'|'circle'|'rubber'>('mouse')\n  const [selected, setSelected] = useState<any[]>([])\n  const [feedback, setFeedback] = useState('')\n  const [data, setData] = useState<any>(null)\n  \n  // Question and session state\n  const [question, setQuestion] = useState<Question | null>(null)\n  const [session, setSession] = useState<Session | null>(null)\n  const [attempt, setAttempt] = useState<Attempt | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [timeSpent, setTimeSpent] = useState(0)\n  const [startTime, setStartTime] = useState<Date | null>(null)\n  \n  // Physical tools state\n  const [rulerVisible, setRulerVisible] = useState(false)\n  const [triangleVisible, setTriangleVisible] = useState(false)\n  const [protractorVisible, setProtractorVisible] = useState(false)\n  const [rulerPosition, setRulerPosition] = useState({ x: 5, y: 4, rotation: 0, length: 6 })\n  const [trianglePosition, setTrianglePosition] = useState({ x: 7, y: 4, rotation: 0, size: 3 })\n  const [protractorPosition, setProtractorPosition] = useState({ x: 6, y: 3, rotation: 0, size: 3 })\n  const [activeTool, setActiveTool] = useState<'ruler' | 'triangle' | 'protractor' | null>(null)\n  const [uiBusy, setUiBusy] = useState(false)\n  const [gridOption, setGridOption] = useState<GridMode>('major')\n  const [canUndoState, setCanUndoState] = useState(false)\n  const [canRedoState, setCanRedoState] = useState(false)\n  const [showSettings, setShowSettings] = useState(false)\n\n  const toolRef = useRef(tool)\n  const selectedRef = useRef(selected)\n  const uiBusyRef = useRef(uiBusy)\n  const handleClickRef = useRef<((brd: JBoard, e: any) => void) | null>(null)\n  const givensRef = useRef<any>(null)\n  \n  useEffect(() => { toolRef.current = tool }, [tool])\n  useEffect(() => { selectedRef.current = selected }, [selected])\n  useEffect(() => { uiBusyRef.current = uiBusy }, [uiBusy])\n  \n\n  // Timer effect\n  useEffect(() => {\n    if (!startTime) return\n    \n    const interval = setInterval(() => {\n      setTimeSpent(Math.floor((Date.now() - startTime.getTime()) / 1000))\n    }, 1000)\n    \n    return () => clearInterval(interval)\n  }, [startTime])\n\n  // Load question and create session\n  useEffect(() => {\n    const loadQuestion = async () => {\n      try {\n        setLoading(true)\n        setError(null)\n        \n        console.debug('loadQuestion id=', questionId, 'studentId=', studentId)\n        \n        // --- fetch question ---\n        if (!supabase) {\n          // Fallback: create a mock question for testing\n          const mockQuestion = {\n            id: questionId || 'mock-question',\n            code: 'Q9',\n            title: 'Úloha 9: rovnoramenný ABC (C vrchol, AB na q, S střed ramene)',\n            prompt_md: 'V rovině leží body **C**, **S** a přímka **q**. Najděte vrcholy **A**, **B** rovnoramenného trojúhelníku **ABC** tak, že **C** je vrchol, **AB** leží na **q** a **S** je střed **jednoho** ramene.',\n            max_score: 3,\n            givens: {\n              \"lines\": { \"q\": { \"p1\": { \"x\": 0, \"y\": 7 }, \"p2\": { \"x\": 10, \"y\": 7 } } },\n              \"points\": { \"C\": { \"x\": 4.5, \"y\": 3 }, \"S\": { \"x\": 5, \"y\": 5 } },\n              \"tolerance\": 0.06\n            },\n            constraints: [\n              { \"id\": \"A_on_q\", \"line\": \"q\", \"type\": \"point_on_line\", \"point\": \"A\" },\n              { \"id\": \"B_on_q\", \"line\": \"q\", \"type\": \"point_on_line\", \"point\": \"B\" },\n              { \"a\": \"A\", \"b\": \"C\", \"c\": \"B\", \"d\": \"C\", \"id\": \"iso\", \"type\": \"distance_equal\" },\n              { \"id\": \"S_mid\", \"type\": \"any_of\", \"children\": [\n                { \"a\": \"A\", \"b\": \"C\", \"type\": \"midpoint_of\", \"midpoint\": \"S\" },\n                { \"a\": \"B\", \"b\": \"C\", \"type\": \"midpoint_of\", \"midpoint\": \"S\" }\n              ]}\n            ],\n            difficulty: 3,\n            tags: [\"triangle\", \"isosceles\", \"construction\", \"geometry\"]\n          }\n          console.debug('Using mock question (Supabase not available):', mockQuestion)\n          setQuestion(mockQuestion)\n        } else {\n          const qResp = await supabase.from('gq_questions').select('*').eq('id', questionId).single()\n          console.debug('gq_questions response', qResp)\n          \n          if (qResp.error) {\n            console.error('gq_questions error detailed', JSON.stringify(qResp.error, Object.getOwnPropertyNames(qResp.error)))\n            throw qResp.error\n          }\n          \n          if (!qResp.data) throw new Error('Question not found')\n          console.debug('Question loaded successfully:', qResp.data)\n          setQuestion(qResp.data)\n        }\n        \n        // --- ensure user ---\n        let userId = studentId\n        \n        // Always check for authenticated user first\n        const { data: { user: authUser } } = supabase \n          ? await supabase.auth.getUser() \n          : { data: { user: null } }\n        \n        if (authUser) {\n          // User is authenticated - ensure they exist in the users table\n          try {\n            const userRecord = await ensureAuthenticatedUserExists(\n              authUser.id,\n              authUser.email || '',\n              authUser.user_metadata?.name || authUser.email?.split('@')[0]\n            )\n            userId = userRecord.id\n            console.debug('Using authenticated user:', authUser.email, 'ID:', userId)\n          } catch (err) {\n            console.error('Error ensuring authenticated user exists:', err)\n            throw new Error('Failed to create user record for authenticated user')\n          }\n        } else if (studentId === 'anonymous') {\n          // For anonymous users, we need to handle this differently\n          // Since sessions.user_id requires a foreign key to users, we cannot use a random UUID\n          // For now, throw an error - anonymous sessions should be handled differently\n          // or you could create a system/anonymous user in the DB\n          throw new Error('Anonymous users are not supported. Please log in to continue.')\n        } else {\n          // Use the provided studentId as-is (should be a valid UUID that exists in users table)\n          userId = studentId\n          console.debug('Using provided studentId:', userId)\n        }\n        \n        // Validate userId looks like a UUID before using it for sessions.user_id\n        if (!userId || (typeof userId === 'string' && !/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(userId))) {\n          console.error('Invalid userId before creating session:', userId)\n          throw new Error('Invalid userId for session creation')\n        }\n        \n        // --- create session ---\n        if (!supabase) {\n          // Mock session and attempt for testing\n          const mockSession = {\n            id: 'mock-session-' + Date.now(),\n            user_id: userId,\n            question_id: questionId || 'mock-question',\n            session_data: {},\n            is_active: true\n          }\n          const mockAttempt = {\n            id: 'mock-attempt-' + Date.now(),\n            question_id: questionId || 'mock-question',\n            session_id: mockSession.id,\n            state: {},\n            student_id: userId,\n            is_complete: false,\n            time_spent: 0\n          }\n          console.debug('Using mock session and attempt (Supabase not available)')\n          setSession(mockSession)\n          setAttempt(mockAttempt)\n        } else {\n          const sResp = await supabase.from('sessions').insert({\n            user_id: userId,\n            question_id: questionId,\n            session_data: {},\n            is_active: true\n          }).select().single()\n          console.debug('sessions insert response', sResp)\n          \n          if (sResp.error) {\n            console.error('sessions insert error', JSON.stringify(sResp.error, Object.getOwnPropertyNames(sResp.error)))\n            throw sResp.error\n          }\n          setSession(sResp.data)\n          \n          // --- create attempt ---\n          const aResp = await supabase.from('gq_attempts').insert({\n            question_id: questionId,\n            session_id: sResp.data.id,\n            state: {},\n            student_id: userId,\n            is_complete: false,\n            time_spent: 0\n          }).select().single()\n          console.debug('gq_attempts insert response', aResp)\n          \n          if (aResp.error) {\n            console.error('gq_attempts insert error', JSON.stringify(aResp.error, Object.getOwnPropertyNames(aResp.error)))\n            throw aResp.error\n          }\n          setAttempt(aResp.data)\n        }\n        setStartTime(new Date())\n      } catch (err) {\n        // Log more informative detail for non-Error objects\n        try {\n          console.error('Error loading question (detailed):', err && typeof err === 'object' ? JSON.stringify(err, Object.getOwnPropertyNames(err)) : err)\n        } catch (e) {\n          console.error('Error logging err', e)\n          console.error('Original err:', err)\n        }\n        setError(err instanceof Error ? err.message : 'Failed to load question')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    if (questionId) {\n      loadQuestion()\n    }\n  }, [questionId, studentId])\n\n  // removed createdStack; rely solely on UndoRedoManager\n\n  function getMouseCoords(brd: JBoard, e: any): {x: number, y: number} {\n    const coords = brd.getUsrCoordsOfMouse(e)\n    return { x: coords[0], y: coords[1] }\n  }\n\n  function nearestFreePoint(brd: JBoard, e: any) {\n    const under = brd.getAllObjectsUnderMouse(e)\n    const pt = under.find((o:any) => o.elType === 'point' && !o.visProp.fixed)\n    return pt || null\n  }\n\n  const createPointSmart = useCallback((brd: JBoard, xy: {x:number, y:number}) => {\n    const factory = geometryFactoryRef.current\n    if (!factory) return null\n\n    // Prefer reusing existing point under cursor\n    const under = brd.getAllObjectsUnderMouse({}) as any[]\n    const existing = under?.find((o:any)=> o?.elType==='point' && !o.visProp?.fixed)\n    if (existing) return existing\n\n    // Create free point (grid-aware)\n    const pt = factory.pointWithGrid(xy.x, xy.y, gridOption)\n    return pt\n  }, [gridOption])\n\n  const handleClick = useCallback((brd: JBoard, e: any) => {\n    if (uiBusyRef.current) return\n    \n    // Check if the click is on a physical tool - if so, don't handle it\n    const target = e.originalEvent?.target as HTMLElement\n    if (target && (target.closest('.group') || target.classList.contains('group'))) {\n      return // Let the physical tool handle the interaction\n    }\n    \n    const xy = getMouseCoords(brd, e)\n    const currentTool = toolRef.current\n\n    switch (currentTool) {\n      case 'mouse': {\n        setFeedback('')\n        break\n      }\n      case 'point': {\n        undoRedoRef.current?.begin()\n        // try to reuse an existing point under mouse\n        const under = brd.getAllObjectsUnderMouse(e)\n        const existing = under.find((o:any)=> o.elType==='point' && !o.visProp.fixed)\n        if (existing) {\n          undoRedoRef.current?.commit()\n          setFeedback('Vybrán existující bod')\n          break\n        }\n        const pt:any = createPointSmart(brd, xy)\n        if (pt) {\n          const op = undoRedoRef.current?.createPointOperation(pt.X(), pt.Y(), {\n            name: '', size: 3, strokeColor: '#e11d48', fillColor: '#e11d48', label: { offset: [5, 10] }\n          })\n          if (op) undoRedoRef.current?.pushOperation(op)\n          undoRedoRef.current?.commit()\n          updateUndoRedoState()\n          setFeedback('Bod vytvořen')\n        } else {\n          undoRedoRef.current?.commit()\n        }\n        break\n      }\n      case 'segment': {\n        const selectionMgr = selectionManagerRef.current\n        if (!selectionMgr) break\n        const first = selectionMgr.getFirst()\n        if (!first) {\n          undoRedoRef.current?.begin()\n          const under = brd.getAllObjectsUnderMouse(e)\n          const existing = under.find((o:any)=> o.elType==='point' && !o.visProp.fixed)\n          const p = existing || createPointSmart(brd, xy)\n          if (!p) { undoRedoRef.current?.commit(); break }\n          selectionMgr.select(p)\n          setFeedback('Klikněte na druhý bod')\n          break\n        }\n        const a:any = first\n        const b = createPointSmart(brd, xy)\n        if (!b) { undoRedoRef.current?.commit(); selectionMgr.clear(); break }\n        const p1 = { x: a.X(), y: a.Y() }\n        const p2 = { x: (b as any).X(), y: (b as any).Y() }\n        const attr = { strokeColor:'#2563eb', strokeWidth:2 }\n        const op = undoRedoRef.current?.createSegmentOperation(p1, p2, attr)\n        if (op) {\n          op.pointIds = [a.id, (b as any).id]\n          undoRedoRef.current?.pushOperation(op)\n        }\n        undoRedoRef.current?.commit()\n        updateUndoRedoState()\n        selectionMgr.clear()\n        setFeedback('Úsečka vytvořena')\n        break\n      }\n      case 'line': {\n        const selectionMgr = selectionManagerRef.current\n        if (!selectionMgr) break\n        const first = selectionMgr.getFirst()\n        if (!first) {\n          undoRedoRef.current?.begin()\n          const under = brd.getAllObjectsUnderMouse(e)\n          const existing = under.find((o:any)=> o.elType==='point' && !o.visProp.fixed)\n          const p = existing || createPointSmart(brd, xy)\n          if (!p) { undoRedoRef.current?.commit(); break }\n          selectionMgr.select(p)\n          setFeedback('Klikněte na druhý bod')\n          break\n        }\n        const a:any = first\n        const b = createPointSmart(brd, xy)\n        if (!b) { undoRedoRef.current?.commit(); selectionMgr.clear(); break }\n        const p1 = { x: a.X(), y: a.Y() }\n        const p2 = { x: (b as any).X(), y: (b as any).Y() }\n        const attr = { strokeColor:'#059669', strokeWidth:1, dash:1 }\n        const op = undoRedoRef.current?.createLineOperation(p1, p2, attr)\n        if (op) {\n          op.pointIds = [a.id, (b as any).id]\n          undoRedoRef.current?.pushOperation(op)\n        }\n        undoRedoRef.current?.commit()\n        updateUndoRedoState()\n        selectionMgr.clear()\n        setFeedback('Přímka vytvořena')\n        break\n      }\n      case 'circle': {\n        const selectionMgr = selectionManagerRef.current\n        if (!selectionMgr) break\n        const first = selectionMgr.getFirst()\n        if (!first) {\n          undoRedoRef.current?.begin()\n          const under = brd.getAllObjectsUnderMouse(e)\n          const existing = under.find((o:any)=> o.elType==='point' && !o.visProp.fixed)\n          const c = existing || createPointSmart(brd, xy)\n          if (!c) { undoRedoRef.current?.commit(); break }\n          selectionMgr.select(c)\n          setFeedback('Klikněte na bod na kružnici')\n          break\n        }\n        const c:any = first\n        const p = createPointSmart(brd, xy)\n        if (!p) { undoRedoRef.current?.commit(); selectionMgr.clear(); break }\n        const center = { x: c.X(), y: c.Y() }\n        const on = { x: (p as any).X(), y: (p as any).Y() }\n        const attr = { strokeColor:'#dc2626', strokeWidth:2 }\n        const op = undoRedoRef.current?.createCircleOperation(center, on, attr)\n        if (op) {\n          op.pointIds = [c.id, (p as any).id]\n          undoRedoRef.current?.pushOperation(op)\n        }\n        undoRedoRef.current?.commit()\n        updateUndoRedoState()\n        selectionMgr.clear()\n        setFeedback('Kružnice vytvořena')\n        break\n      }\n      case 'rubber': {\n        const under = brd.getAllObjectsUnderMouse(e)\n        const toRemove = under.find((o:any) => !o.visProp?.fixed)\n        if (toRemove) {\n          const delOp = undoRedoRef.current?.createDeleteOperation(toRemove)\n          if (delOp) {\n            undoRedoRef.current?.pushOperation(delOp)\n            updateUndoRedoState()\n            setFeedback('Objekt smazán')\n          } else {\n            brd.removeObject(toRemove as JXG.GeometryElement)\n            setFeedback('Objekt smazán (bez historie)')\n          }\n        }\n        break\n      }\n    }\n  }, [createPointSmart])\n\n  useEffect(() => { handleClickRef.current = handleClick }, [handleClick])\n\n  // Keyboard shortcuts for undo/redo\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if ((e.key === 'z' || e.key === 'Z') && (e.ctrlKey || e.metaKey) && !e.shiftKey) {\n        e.preventDefault()\n        undoRedoRef.current?.undo()\n        updateUndoRedoState()\n      }\n      if ((e.key === 'z' || e.key === 'Z') && (e.ctrlKey || e.metaKey) && e.shiftKey) {\n        e.preventDefault()\n        undoRedoRef.current?.redo()\n        updateUndoRedoState()\n      }\n    }\n    window.addEventListener('keydown', handleKeyPress)\n    return () => window.removeEventListener('keydown', handleKeyPress)\n  }, [])\n\n  // Close settings dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as HTMLElement\n      if (showSettings && !target.closest('.settings-dropdown')) {\n        setShowSettings(false)\n      }\n    }\n    if (showSettings) {\n      document.addEventListener('mousedown', handleClickOutside)\n      return () => document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [showSettings])\n\n  // Handle ruler position changes\n  const handleRulerPositionChange = (x: number, y: number, rotation: number, length: number) => {\n    setRulerPosition({ x, y, rotation, length })\n  }\n\n  // Handle triangle position changes\n  const handleTrianglePositionChange = (x: number, y: number, rotation: number, size: number) => {\n    setTrianglePosition({ x, y, rotation, size })\n  }\n\n  // Handle protractor position changes\n  const handleProtractorPositionChange = (x: number, y: number, rotation: number, size: number) => {\n    setProtractorPosition({ x, y, rotation, size })\n  }\n\n  function toggleRuler() {\n    setRulerVisible(!rulerVisible)\n    if (!rulerVisible) {\n      setActiveTool('ruler')\n    } else if (activeTool === 'ruler') {\n      setActiveTool(null)\n    }\n  }\n\n  function toggleTriangle() {\n    setTriangleVisible(!triangleVisible)\n    if (!triangleVisible) {\n      setActiveTool('triangle')\n    } else if (activeTool === 'triangle') {\n      setActiveTool(null)\n    }\n  }\n\n  function toggleProtractor() {\n    setProtractorVisible(!protractorVisible)\n    if (!protractorVisible) {\n      setActiveTool('protractor')\n    } else if (activeTool === 'protractor') {\n      setActiveTool(null)\n    }\n  }\n\n  // Initialize board AFTER the loading phase so the container actually exists\n  useEffect(() => {\n    // wait until question has finished loading AND there's no error\n    if (loading || error) return;\n\n    // only init once, and only when the container is mounted\n    if (!containerRef.current || boardManagerRef.current) return;\n\n    console.debug('Initializing board (post-loading), container:', containerRef.current);\n\n    // Calculate proper bounding box to maintain uniform scaling\n    const containerRect = containerRef.current.getBoundingClientRect()\n    const worldWidth = 12  // 11 - (-1) = 12\n    const worldHeight = 9  // 8 - (-1) = 9\n    \n    // Calculate uniform scale to maintain aspect ratio\n    const scaleX = containerRect.width / worldWidth\n    const scaleY = containerRect.height / worldHeight\n    const uniformScale = Math.min(scaleX, scaleY)\n    \n    // Calculate centered bounding box\n    const scaledWidth = worldWidth * uniformScale\n    const scaledHeight = worldHeight * uniformScale\n    const offsetX = (containerRect.width - scaledWidth) / 2\n    const offsetY = (containerRect.height - scaledHeight) / 2\n    \n    // Convert back to world coordinates\n    const left = -1 - (offsetX / uniformScale)\n    const right = 11 + (offsetX / uniformScale)\n    const top = 8 + (offsetY / uniformScale)\n    const bottom = -1 - (offsetY / uniformScale)\n\n    const boardManager = new BoardManager({\n      container: containerRef.current,\n      boundingbox: [left, top, right, bottom],\n      axis: false,\n      showNavigation: false,\n      showCopyright: false,\n      grid: false,\n      pan: { enabled: false },\n      zoom: false,\n      keepaspectratio: true\n    })\n    boardManagerRef.current = boardManager\n    const brd = boardManager.getBoard() as JBoard\n\n    geometryFactoryRef.current = new GeometryFactory(brd)\n    selectionManagerRef.current = new SelectionManager()\n    undoRedoRef.current = new UndoRedoManager({ board: brd, onFeedback: setFeedback, EPS })\n\n    // Track point moves as modify operations\n    function attachModifyListeners(el:any) {\n      if (!el || el.elType !== 'point' || el.visProp?.fixed) return\n      let before: null | { x:number; y:number; name:string } = null\n      el.on('down', () => { before = { x: el.X(), y: el.Y(), name: el.name ?? '' } })\n      el.on('up', () => {\n        if (!before) return\n        const after = { x: el.X(), y: el.Y(), name: el.name ?? '' }\n        if (Math.hypot(after.x - before.x, after.y - before.y) > 1e-9) {\n          const op = undoRedoRef.current?.createModifyOperation(el.id, before, after)\n          if (op) {\n            undoRedoRef.current!.pushOperation(op)\n            updateUndoRedoState()\n          }\n        }\n        before = null\n      })\n    }\n\n    Object.values(brd.objects).forEach((o:any) => attachModifyListeners(o))\n    ;(brd as any).on('add', (id: any) => {\n      const o:any = (brd.objects as any)[id]\n      attachModifyListeners(o)\n    })\n\n    const downHandler = (e: any) => {\n      if (handleClickRef.current) handleClickRef.current(brd, e);\n    };\n    brd.on('down', downHandler);\n\n    // Make sure the SVG sizes correctly once visible\n    setTimeout(() => {\n      try {\n        brd?.renderer?.resize?.();\n        brd?.fullUpdate?.();\n      } catch {}\n    }, 0);\n\n    return () => {\n      try { brd.off('down', downHandler) } catch {}\n      undoRedoRef.current = null\n      geometryFactoryRef.current = null\n      selectionManagerRef.current = null\n      boardManager.free()\n      boardManagerRef.current = null\n      givensRef.current = null;\n    };\n  }, [loading, error]); // 👈 key change\n\n  // Create givens when question loads AND the board is ready\n  useEffect(() => {\n    if (loading || error) return;                 // wait until data phase is done\n    if (!boardManagerRef.current || !question) return;   // wait until board exists\n\n    console.debug('Creating givens for question:', question.title, 'givens:', question.givens)\n\n    // Clear any existing givens first\n    if (givensRef.current) {\n      Object.values(givensRef.current).forEach((obj: any) => {\n        if (obj && typeof obj.removeObject === 'function') {\n          try {\n            boardManagerRef.current!.getBoard()!.removeObject(obj)\n          } catch (e) {\n            console.warn('Error removing existing givens:', e)\n          }\n        }\n      })\n    }\n\n    const givens: any = {}\n    if (question.givens) {\n      try {\n        console.debug('Parsing givens:', question.givens)\n        const givensData = typeof question.givens === 'string' ? JSON.parse(question.givens) : question.givens\n        console.debug('Parsed givens data:', givensData)\n        \n        // Create points\n        if (givensData.points) {\n          console.debug('Creating points:', givensData.points)\n          Object.entries(givensData.points).forEach(([name, coords]: [string, any]) => {\n            const point = boardManagerRef.current!.getBoard()!.create('point', [coords.x, coords.y], {\n              name, size: 3, strokeColor: '#000', fillColor: '#000', fixed: true,\n              label: { offset: [5, 10] }\n            })\n            givens[name] = point\n            console.debug('Created point:', name, coords)\n          })\n        }\n\n        // Create lines\n        if (givensData.lines) {\n          console.debug('Creating lines:', givensData.lines)\n          Object.entries(givensData.lines).forEach(([name, lineData]: [string, any]) => {\n            const line = boardManagerRef.current!.getBoard()!.create('line', [[lineData.p1.x, lineData.p1.y], [lineData.p2.x, lineData.p2.y]], {\n              strokeColor: '#000', strokeWidth: 2,\n              name, withLabel: true, fixed: true,\n              label: { position: 'rt', offset: [10, 0] }\n            })\n            givens[name] = line\n            console.debug('Created line:', name, lineData)\n          })\n        }\n\n        // Create circles\n        if (givensData.circles) {\n          console.debug('Creating circles:', givensData.circles)\n          Object.entries(givensData.circles).forEach(([name, circleData]: [string, any]) => {\n            const center = givens[circleData.center] || boardManagerRef.current!.getBoard()!.create('point', [circleData.center.x, circleData.center.y], {\n              name: circleData.center, size: 2, strokeColor: '#000', fillColor: '#000', fixed: true\n            })\n            const circle = boardManagerRef.current!.getBoard()!.create('circle', [center, circleData.radius], {\n              strokeColor: '#000', strokeWidth: 2,\n              name, withLabel: true, fixed: true\n            })\n            givens[name] = circle\n            console.debug('Created circle:', name, circleData)\n          })\n        }\n      } catch (err) {\n        console.error('Error parsing givens:', err)\n      }\n    } else {\n      // Fallback: create default givens for the isosceles triangle problem\n      console.debug('No givens data found, creating default givens for isosceles triangle problem')\n      const q = boardManagerRef.current!.getBoard()!.create('line', [[0, 7], [10, 7]], {\n        strokeColor: '#000', strokeWidth: 2,\n        name: 'q', withLabel: true, fixed: true,\n        label: { position: 'rt', offset: [10, 0] }\n      })\n      const S = boardManagerRef.current!.getBoard()!.create('point', [5, 5], {\n        name: 'S', size: 3, strokeColor: '#000', fillColor: '#000', fixed: true, \n        label: { offset: [5, 10] }\n      })\n      const C = boardManagerRef.current!.getBoard()!.create('point', [4.5, 3], {\n        name: 'C', size: 3, strokeColor: '#000', fillColor: '#000', fixed: true, \n        label: { offset: [5, -15] }\n      })\n      \n      givens.q = q\n      givens.S = S\n      givens.C = C\n    }\n    \n    givensRef.current = givens\n    console.debug('Givens created:', givens)\n    \n    // Force board update to render the newly created givens\n    if (boardManagerRef.current) {\n      const brd = boardManagerRef.current.getBoard()\n      brd.renderer.resize();\n      brd.fullUpdate();\n      console.debug('Board updated to display givens')\n    }\n    \n    // Additional debugging\n    console.debug('Board objects after givens creation:', Object.keys(boardManagerRef.current!.getBoard()!.objects))\n  }, [question, loading, error]); // 👈 key change\n\n  function undoLast() {\n    undoRedoRef.current?.undo()\n    updateUndoRedoState()\n  }\n\n  function redoLast() {\n    undoRedoRef.current?.redo()\n    updateUndoRedoState()\n  }\n\n  function clearAll() {\n    const brd = boardManagerRef.current?.getBoard()\n    if (!brd) return\n    const toRemove: any[] = []\n    for (const key in brd.objects) {\n      const o: any = brd.objects[key]\n      if (!o?.visProp?.fixed) {\n        toRemove.push(o)\n      }\n    }\n    toRemove.forEach(o => brd.removeObject(o))\n    setSelected([])\n    setFeedback('')\n    setData(null)\n    // fully reset undo history if supported\n    try { (undoRedoRef.current as any)?.reset?.() } catch {}\n    updateUndoRedoState()\n  }\n\n  // Generic validation function that works with any question\n  function validateConstruction() {\n    if (!question?.constraints) {\n      return { passed: true, message: 'Konstrukce uložena', score: question?.max_score || 3 }\n    }\n\n    const brd = boardManagerRef.current!.getBoard()!\n    const givens = givensRef.current\n\n    try {\n      const constraints = typeof question.constraints === 'string' ? JSON.parse(question.constraints) : question.constraints\n      \n      // This is a simplified validation - in a real implementation, you'd have more sophisticated validation logic\n      // based on the question's constraints structure\n      let score = 0\n      let passed = false\n      let message = ''\n\n      // Basic validation - check if required objects exist\n      const points = Object.values(brd.objects).filter((o:any) => o.elType === 'point' && !o.visProp?.fixed)\n      const segments = Object.values(brd.objects).filter((o:any) => o.elType === 'segment')\n      const lines = Object.values(brd.objects).filter((o:any) => o.elType === 'line' && !o.visProp?.fixed)\n      const circles = Object.values(brd.objects).filter((o:any) => o.elType === 'circle' && !o.visProp?.fixed)\n\n      if (constraints.requiredPoints && points.length >= constraints.requiredPoints) {\n        score += 1\n      }\n      if (constraints.requiredSegments && segments.length >= constraints.requiredSegments) {\n        score += 1\n      }\n      if (constraints.requiredLines && lines.length >= constraints.requiredLines) {\n        score += 1\n      }\n      if (constraints.requiredCircles && circles.length >= constraints.requiredCircles) {\n        score += 1\n      }\n\n      if (score >= (constraints.minScore || 2)) {\n        passed = true\n        message = '✅ Výborně! Konstrukce splňuje požadavky.'\n      } else {\n        message = 'Konstrukce neúplná. Zkuste přidat více objektů.'\n      }\n\n      return { passed, message, score: Math.min(score, question.max_score) }\n    } catch (err) {\n      return { passed: false, message: 'Chyba při validaci', score: 0 }\n    }\n  }\n\n  async function saveConstruction() {\n    if (!boardManagerRef.current || !attempt) return\n\n    const validation = validateConstruction()\n    const brd = boardManagerRef.current.getBoard()\n    const serializeGeometry = (obj: any) => {\n      const type = obj.elType\n      if (type === 'point') {\n        return { x: obj.X(), y: obj.Y() }\n      }\n      if (type === 'segment' || type === 'line') {\n        const p1 = (obj.points && obj.points[0]) ? obj.points[0] : null\n        const p2 = (obj.points && obj.points[1]) ? obj.points[1] : null\n        return p1 && p2 ? { x1: p1.X(), y1: p1.Y(), x2: p2.X(), y2: p2.Y() } : null\n      }\n      if (type === 'circle') {\n        const c = obj.center\n        const on = obj.point2 || (obj.points && obj.points[1]) || null\n        const center = c ? { x: c.X(), y: c.Y() } : null\n        const radius = (c && on) ? Math.hypot(on.X() - c.X(), on.Y() - c.Y()) : (typeof obj.R === 'function' ? obj.R() : undefined)\n        return { center, radius }\n      }\n      if (type === 'polygon') {\n        const verts = Array.isArray(obj.vertices) ? obj.vertices.map((v:any)=>({ x: v.X(), y: v.Y() })) : []\n        return { vertices: verts }\n      }\n      return null\n    }\n    const snapshot = exportBoard(brd)\n    const currentState = {\n      ...snapshot,\n      timestamp: new Date().toISOString()\n    }\n\n    try {\n      if (!supabase) {\n        // Mock save for testing\n        console.log('Mock save (Supabase not available):', { validation, currentState })\n        setData({ validation, timestamp: new Date().toISOString() })\n        setFeedback(validation.message)\n      } else {\n        const { error } = await supabase\n          .from('gq_attempts')\n          .update({\n            state: currentState,\n            score: validation.score,\n            passed: validation.passed,\n            feedback: { message: validation.message, validation },\n            is_complete: true,\n            time_spent: timeSpent\n          })\n          .eq('id', attempt.id)\n\n        if (error) throw error\n\n        setData({ validation, timestamp: new Date().toISOString() })\n        setFeedback(validation.message)\n      }\n    } catch (err) {\n      console.error('Error saving attempt:', err)\n      setFeedback('Chyba při ukládání')\n    }\n  }\n\n  function updateUndoRedoState() {\n    setCanUndoState(undoRedoRef.current?.canUndo() ?? false)\n    setCanRedoState(undoRedoRef.current?.canRedo() ?? false)\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Načítání úlohy...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <XCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n          <p className=\"text-red-600 mb-4\">{error}</p>\n          {onBack && (\n            <button\n              onClick={onBack}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n            >\n              Zpět\n            </button>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  if (!question) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-gray-600 mb-4\">Úloha nebyla nalezena</p>\n          {onBack && (\n            <button\n              onClick={onBack}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n            >\n              Zpět\n            </button>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center gap-4\">\n              {onBack && (\n                <button\n                  onClick={onBack}\n                  className=\"flex items-center gap-2 px-3 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded\"\n                >\n                  <ArrowLeft size={18} />\n                  Zpět\n                </button>\n              )}\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-800\">\n                  {question.title}\n                </h1>\n                <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n                  <span>Kód: {question.code}</span>\n                  <span>Obtížnost: {'★'.repeat(question.difficulty)}</span>\n                  <span className=\"flex items-center gap-1\">\n                    <Clock size={14} />\n                    {Math.floor(timeSpent / 60)}:{(timeSpent % 60).toString().padStart(2, '0')}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"text-sm text-gray-600\">Maximální skóre: {question.max_score}</div>\n              {attempt && (\n                <div className=\"text-sm text-gray-600\">\n                  Skóre: {data?.validation?.score || 0} / {question.max_score}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Question prompt */}\n          <div className=\"bg-blue-50 border-l-4 border-blue-500 p-4 mb-4\">\n            <div className=\"text-gray-700 text-sm markdown-content\">\n              <ReactMarkdown remarkPlugins={[remarkGfm]}>\n                {question.prompt_md ?? ''}\n              </ReactMarkdown>\n            </div>\n          </div>\n\n          {/* Toolbar */}\n          <div className=\"flex flex-wrap gap-2 mb-4 p-4 bg-gray-100 rounded-lg\">\n            <button \n              onClick={() => setTool('mouse')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'mouse' ? 'bg-gray-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <path d=\"M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z\"/>\n                <path d=\"M13 13l6 6\"/>\n              </svg>\n              Myš\n            </button>\n            <button \n              onClick={() => setTool('point')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'point' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Circle size={18}/> Bod\n            </button>\n            <button \n              onClick={() => setTool('segment')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'segment' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Pencil size={18}/> Úsečka\n            </button>\n            <button \n              onClick={() => setTool('line')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'line' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Pencil size={18}/> Přímka\n            </button>\n            <button \n              onClick={() => setTool('circle')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'circle' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Circle size={18}/> Kružnice\n            </button>\n            <button \n              onClick={() => setTool('rubber')}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                tool === 'rubber' ? 'bg-red-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Eraser size={18}/> Guma\n            </button>\n            \n            <div className=\"border-l-2 border-gray-300 mx-2\"></div>\n            \n            <button \n              onClick={toggleRuler}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                rulerVisible ? 'bg-yellow-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Ruler size={18}/> Pravítko\n            </button>\n            <button \n              onClick={toggleTriangle}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                triangleVisible ? 'bg-purple-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Triangle size={18}/> Trojúhelník\n            </button>\n            <button \n              onClick={toggleProtractor}\n              className={`px-3 py-2 rounded flex items-center gap-2 ${\n                protractorVisible ? 'bg-orange-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Gauge size={18}/> Úhloměr\n            </button>\n\n            <div className=\"flex-1\"></div>\n\n            <button \n              onClick={undoLast}\n              disabled={!canUndoState}\n              className=\"px-3 py-2 rounded bg-gray-700 text-white hover:bg-gray-800 disabled:opacity-40 disabled:cursor-not-allowed flex items-center gap-2\"\n            >\n              <RotateCcw size={18}/> Zpět\n            </button>\n            <button \n              onClick={redoLast}\n              disabled={!canRedoState}\n              className=\"px-3 py-2 rounded bg-gray-700 text-white hover:bg-gray-800 disabled:opacity-40 disabled:cursor-not-allowed flex items-center gap-2\"\n            >\n              <RotateCw size={18}/> Znovu\n            </button>\n            <button onClick={clearAll} className=\"px-3 py-2 rounded bg-red-500 text-white hover:bg-red-600 flex items-center gap-2\">\n              <Trash2 size={18}/> Vymazat\n            </button>\n            <button onClick={saveConstruction} className=\"px-3 py-2 rounded bg-green-600 text-white hover:bg-green-700 flex items-center gap-2\">\n              <Save size={18}/> Uložit\n            </button>\n          </div>\n\n          <div \n            ref={containerRef} \n            id=\"jxgbox\" \n            className=\"w-full border-2 border-gray-300 rounded-lg bg-white jxgbox relative\" \n            style={{ height: 500, touchAction: 'none' }} \n          >\n            {/* Settings Button - positioned outside JSXGraph container */}\n            <div className=\"absolute top-2 right-2 z-50 settings-dropdown\" style={{ zIndex: 9999 }}>\n              <div className=\"flex items-center gap-2\">\n                {/* Grid mode indicator */}\n                <div className=\"px-2 py-1 bg-white bg-opacity-80 rounded text-xs text-gray-700 border border-gray-300\">\n                  {gridOption === 'none' && 'Žádná mřížka'}\n                  {gridOption === 'major' && 'Hlavní'}\n                  {gridOption === 'minor' && 'Vedlejší'}\n                  {gridOption === 'major-minor' && 'Hlavní+Vedlejší'}\n                  {gridOption === 'dot' && 'Bodová'}\n                </div>\n                <button\n                  onClick={() => setShowSettings(!showSettings)}\n                  className=\"p-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg shadow-lg transition-colors\"\n                  title=\"Nastavení mřížky\"\n                  style={{ zIndex: 10000 }}\n                >\n                  <Settings size={18} />\n                </button>\n              </div>\n              {showSettings && (\n                <div className=\"absolute top-12 right-0 bg-white border border-gray-300 rounded-lg shadow-lg min-w-48 z-20\" style={{ zIndex: 10001 }}>\n                  <div className=\"p-3 border-b border-gray-200\">\n                    <div className=\"flex items-center gap-2 text-gray-700 font-medium\">\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <path d=\"M3 3h18v18H3z\"/>\n                        <path d=\"M9 9h6v6H9z\"/>\n                        <path d=\"M3 9h6\"/>\n                        <path d=\"M15 9h6\"/>\n                        <path d=\"M3 15h6\"/>\n                        <path d=\"M15 15h6\"/>\n                        <path d=\"M9 3v6\"/>\n                        <path d=\"M9 15v6\"/>\n                        <path d=\"M15 3v6\"/>\n                        <path d=\"M15 15v6\"/>\n                      </svg>\n                      Zobrazit mřížku\n                      <ChevronUp size={14} />\n                    </div>\n                  </div>\n                  <div className=\"py-1\">\n                    <button\n                      onClick={() => { setGridOption('none'); setShowSettings(false) }}\n                      className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${gridOption === 'none' ? 'bg-gray-100 text-gray-900' : 'text-gray-700'}`}\n                    >\n                      Žádná mřížka\n                    </button>\n                    <button\n                      onClick={() => { setGridOption('major'); setShowSettings(false) }}\n                      className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${gridOption === 'major' ? 'bg-gray-100 text-gray-900' : 'text-gray-700'}`}\n                    >\n                      Hlavní mřížka\n                    </button>\n                    <button\n                      onClick={() => { setGridOption('minor'); setShowSettings(false) }}\n                      className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${gridOption === 'minor' ? 'bg-gray-100 text-gray-900' : 'text-gray-700'}`}\n                    >\n                      Vedlejší mřížka\n                    </button>\n                    <button\n                      onClick={() => { setGridOption('major-minor'); setShowSettings(false) }}\n                      className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${gridOption === 'major-minor' ? 'bg-gray-100 text-gray-900' : 'text-gray-700'}`}\n                    >\n                      Hlavní a vedlejší mřížka\n                    </button>\n                    <button\n                      onClick={() => { setGridOption('dot'); setShowSettings(false) }}\n                      className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 ${gridOption === 'dot' ? 'bg-gray-100 text-gray-900' : 'text-gray-700'}`}\n                    >\n                      Bodová mřížka\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* Draggable Ruler */}\n            {rulerVisible && (\n              <DraggableRuler\n                x={rulerPosition.x}\n                y={rulerPosition.y}\n                rotation={rulerPosition.rotation}\n                length={rulerPosition.length}\n                onPositionChange={handleRulerPositionChange}\n                isActive={activeTool === 'ruler'}\n                onActivate={() => setActiveTool('ruler')}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n            \n            {/* Draggable Triangle */}\n            {triangleVisible && (\n              <DraggableTriangle\n                x={trianglePosition.x}\n                y={trianglePosition.y}\n                rotation={trianglePosition.rotation}\n                size={trianglePosition.size}\n                type=\"45-45-90\"\n                onPositionChange={handleTrianglePositionChange}\n                isActive={activeTool === 'triangle'}\n                onActivate={() => setActiveTool('triangle')}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n            \n            {/* Draggable Protractor */}\n            {protractorVisible && (\n              <DraggableProtractor\n                x={protractorPosition.x}\n                y={protractorPosition.y}\n                rotation={protractorPosition.rotation}\n                size={protractorPosition.size}\n                onPositionChange={handleProtractorPositionChange}\n                isActive={activeTool === 'protractor'}\n                onActivate={() => setActiveTool('protractor')}\n                onUiBusyChange={setUiBusy}\n              />\n            )}\n          </div>\n\n\n          {feedback && (\n            <div className={`mt-4 p-4 rounded-lg ${\n              feedback.includes('✅') ? 'bg-green-50 border-l-4 border-green-500' : 'bg-yellow-50 border-l-4 border-yellow-500'\n            }`}>\n              <p className=\"text-gray-800\">{feedback}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}